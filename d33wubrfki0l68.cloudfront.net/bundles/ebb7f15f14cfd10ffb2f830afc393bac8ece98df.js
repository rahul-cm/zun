var SPLINE_ASSETS_LIST = { fonts: [], images: [], models: [], animations: [] };
const UNSIGNED_BYTE=5121,UNSIGNED_SHORT=5123,UNSIGNED_INT=5125,FLOAT=5126,ARRAY_BUFFER=34962,ELEMENT_ARRAY_BUFFER=34963,SPE_LAYER_TYPE_LIGHTING="light",SPE_LAYER_TYPE_COLOR="color",SPE_LAYER_TYPE_GRADIENT="gradient",SPE_LAYER_TYPE_NORMAL="normal",SPE_LAYER_TYPE_DEPTH="depth",SPE_LAYER_TYPE_TEXTURE="texture",SPE_LAYER_TYPE_NOISE="noise",SPE_LAYER_TYPE_FRESNEL="fresnel",SPE_LAYER_TYPE_POINTS="points",SPE_LAYER_TYPE_LINES="lines",SPE_LAYER_UNIFORM_TYPE_BOOL=0,SPE_LAYER_UNIFORM_TYPE_INT=1,SPE_LAYER_UNIFORM_TYPE_FLOAT=2,SPE_LAYER_UNIFORM_TYPE_VEC2=3,SPE_LAYER_UNIFORM_TYPE_VEC3=4,SPE_LAYER_UNIFORM_TYPE_VEC4=5,SPE_LAYER_UNIFORM_TYPE_COLOR=6,SPE_LAYER_UNIFORM_TYPE_ARRAY_INT=7,SPE_LAYER_UNIFORM_TYPE_ARRAY_FLOAT=8,SPE_LAYER_UNIFORM_TYPE_ARRAY_VEC2=9,SPE_LAYER_UNIFORM_TYPE_ARRAY_VEC3=10,SPE_LAYER_UNIFORM_TYPE_ARRAY_VEC4=11,SPE_LAYER_UNIFORM_TYPE_ARRAY_COLOR=12,SPE_LAYER_UNIFORM_TYPE_MAT3=13,SPE_LAYER_UNIFORM_TYPE_MAT4=14,SPE_LAYER_UNIFORM_TYPE_SAMPLER_2D=15,SPE_RENDERABLE_MESH3D=0,SPE_RENDERABLE_MESH2D=1,SPE_RENDERABLE_TEXT=2,SPE_RENDERABLE_RIGGING=3,SPE_MATERIAL_SIDE_FRONT=0,SPE_MATERIAL_SIDE_BACK=1,SPE_MATERIAL_SIDE_BOTH=2,SPE_COLOR_MAIN_BLUE=3447804,SPE_COLOR_DEFAULT=8026746,SPE_COLOR_RED=16603997,SPE_COLOR_GREEN=6218333,SPE_COLOR_PURPLE=13192447,SPE_COLOR_PINK=16741879,SPE_COLOR_YELLOW=15711266,SPE_COLOR_GRAY_DARK=7105644,SPE_COLOR_BLACK=7105644,SPE_TEXT_VERTICAL_ALIGN_TOP=1,SPE_TEXT_VERTICAL_ALIGN_MIDDLE=2,SPE_TEXT_VERTICAL_ALIGN_BOTTOM=3,SPE_TEXT_HORIZONTAL_ALIGN_LEFT=1,SPE_TEXT_HORIZONTAL_ALIGN_RIGHT=2,SPE_TEXT_HORIZONTAL_ALIGN_CENTER=3,SPE_TEXT_HORIZONTAL_ALIGN_JUSTIFY=4,SPE_TEXT_TRANSFORM_STANDARD=1,SPE_TEXT_TRANSFORM_UPPERCASE=2,SPE_TEXT_TRANSFORM_LOWERCASE=3,SPE_TEXT_TRAVELDIR_TO_RIGHT=1,SPE_TEXT_TRAVELDIR_TO_LEFT=-1,SPE_BLENDING_NORMAL=0,SPE_BLENDING_MULTIPLY=1,SPE_BLENDING_SCREEN=2,SPE_BLENDING_OVERLAY=3,SPE_RUNTIME_VIEWMODE_FULLSCREEN=1,SPE_RUNTIME_VIEWMODE_CUSTOM_SIZE=2,SPE_RUNTIME_VIEWMODE_FULL_WIDTH=3,SPE_RUNTIME_VIEWMODE_FULL_HEIGHT=4,SPE_RUNTIME_QUALITY_HIGH="high",SPE_RUNTIME_QUALITY_MIDDLE="middle",SPE_RUNTIME_QUALITY_LOW="low",SPE_RUNTIME_QUALITY_DEFAULT="default";SPE.QualityModifiers={SphereGeometry:{widthSegments:{scalers:{high:2,middle:1,low:.5,default:1},minValue:4,maxValue:128},heightSegments:{scalers:{high:2,middle:1,low:.5,default:1},minValue:4,maxValue:128}},CubeGeometry:{cornerSegments:{scalers:{high:2,middle:1,low:.5,default:1},minValue:4,maxValue:128}},ConeGeometry:{radialSegments:{scalers:{high:2,middle:1,low:.5,default:1},minValue:4,maxValue:64},heightSegments:{scalers:{high:2,middle:1,low:.5,default:1},minValue:4,maxValue:64},cornerSegments:{scalers:{high:2,middle:1,low:.5,default:1},minValue:4,maxValue:64}},CylinderGeometry:{radialSegments:{scalers:{high:2,middle:1,low:.5,default:1},minValue:4,maxValue:64},cornerSegments:{scalers:{high:2,middle:1,low:.5,default:1},minValue:4,maxValue:64}},EllipseGeometry:{spikes:{scalers:{high:2,middle:1,low:.5,default:1},minValue:4,maxValue:64}},PolygonGeometry:{extrudeBevelSegments:{scalers:{high:2,middle:1,low:.5,default:1},minValue:1,maxValue:16}},RectangleGeometry:{extrudeBevelSegments:{scalers:{high:2,middle:1,low:.5,default:1},minValue:1,maxValue:16}},StarGeometry:{extrudeBevelSegments:{scalers:{high:2,middle:1,low:.5,default:1},minValue:1,maxValue:16}},TorusGeometry:{radialSegments:{scalers:{high:2,middle:1,low:.5,default:1},minValue:4,maxValue:64},tubularSegments:{scalers:{high:2,middle:1,low:.5,default:1},minValue:4,maxValue:128}}};class SpeGltfDecoder{constructor(e){this.mGltfSceneGraph=e,this.mSceneGraph=null,this.mSceneCamera=null,this.mSceneOptions={},this.mNodes=[],this.mCameras=[],this.mLights=[],this.mGeometries=[],this.mGeometriesSpe=[],this.mAccessors=[],this.mMaterials=[]}decode(e){e&&(this.mGltfSceneGraph=e),this.mSceneGraph=new SpeScene,this.mSceneCamera=null,this.mSceneOptions={},this.mNodes=[this.mSceneGraph],this.mObjects={},this.mCameras=[],this.mLights=[],this.mGeometries=[],this.mGeometriesSpe=[],this.mAccessors=[],this.mMaterials=[],this.mInteractionStates={},void 0!==this.mGltfSceneGraph.spline&&(this.mSceneOptions.usePrimitives=void 0===this.mGltfSceneGraph.spline.usePrimitives||this.mGltfSceneGraph.spline.usePrimitives,this.mSceneOptions.useOrbitControls=void 0===this.mGltfSceneGraph.spline.useOrbitControls||this.mGltfSceneGraph.spline.useOrbitControls,this.mSceneOptions.bgColor=void 0!==this.mGltfSceneGraph.spline.bgColor?this.mGltfSceneGraph.spline.bgColor:new THREE.Color(1644825),this.mSceneOptions.orbitDamped=void 0!==this.mGltfSceneGraph.spline.orbitDamped&&this.mGltfSceneGraph.spline.orbitDamped,this.mSceneOptions.orbitTarget=void 0!==this.mGltfSceneGraph.spline.orbitTarget?this.mGltfSceneGraph.spline.orbitTarget:[0,0,0],this.mSceneOptions.cameraType=void 0!==this.mGltfSceneGraph.spline.cameraType?this.mGltfSceneGraph.spline.cameraType:"Orthographic",this.mSceneOptions.cameraRotate=void 0===this.mGltfSceneGraph.spline.cameraRotate||this.mGltfSceneGraph.spline.cameraRotate,this.mSceneOptions.cameraPan=void 0===this.mGltfSceneGraph.spline.cameraPan||this.mGltfSceneGraph.spline.cameraPan,this.mSceneOptions.cameraZoom=void 0===this.mGltfSceneGraph.spline.cameraZoom||this.mGltfSceneGraph.spline.cameraZoom,this.mSceneOptions.viewMode=void 0!==this.mGltfSceneGraph.spline.viewMode?this.mGltfSceneGraph.spline.viewMode:SPE_RUNTIME_VIEWMODE_FULLSCREEN,this.mSceneOptions.viewWidth=void 0!==this.mGltfSceneGraph.spline.viewWidth?this.mGltfSceneGraph.spline.viewWidth:1024,this.mSceneOptions.viewHeight=void 0!==this.mGltfSceneGraph.spline.viewHeight?this.mGltfSceneGraph.spline.viewHeight:768,this.mSceneOptions.quality=void 0!==this.mGltfSceneGraph.spline.quality?this.mGltfSceneGraph.spline.quality:SPE_RUNTIME_QUALITY_DEFAULT);const t="function"==typeof Interaction;if(t){if(SPE.CachedImages={},this.mGltfSceneGraph.spline&&this.mGltfSceneGraph.spline.images){const e=this.mGltfSceneGraph.spline.images;for(const[t,i]of Object.entries(e)){const e=new Image;e.src=i.url,SPE.CachedImages[t]=e}}if(SPE.CachedTextures={},this.mGltfSceneGraph.spline&&this.mGltfSceneGraph.spline.textures){const e=this.mGltfSceneGraph.spline.textures;for(const[t,i]of Object.entries(e)){const e=i.image,a=SPE.CachedImages[e],s=new THREE.Texture(a,i.mapping,i.wrap[0],i.wrap[1],i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding);s.offset.fromArray(i.offset),s.repeat.fromArray(i.repeat),s.center.fromArray(i.center),s.updateMatrix(),SPE.CachedTextures[t]=s}}if(this.mGltfSceneGraph.spline&&this.mGltfSceneGraph.spline.interactionStates){const e=this.mGltfSceneGraph.spline.interactionStates;this.mGltfSceneGraph.spline.textures;for(const[t,i]of Object.entries(e))this.mInteractionStates[t]=(new InteractionState).fromJSON(i,SPE.CachedTextures)}}const i=this.mGltfSceneGraph.cameras||[];for(let e=0;e<i.length;e++)this._decodeCamera(i[e]);if(this.mGltfSceneGraph.extensions&&this.mGltfSceneGraph.extensions.KHR_lights_punctual&&this.mGltfSceneGraph.extensions.KHR_lights_punctual.lights){const e=this.mGltfSceneGraph.extensions.KHR_lights_punctual.lights;for(let t=0;t<e.length;t++)this._decodeLight(e[t])}this._constructGeometricData();const a=this.mGltfSceneGraph.materials||[];for(let e=0;e<a.length;e++)this._decodeMaterial(a[e]);const s=this.mGltfSceneGraph.meshes_spe||[];for(let e=0;e<s.length;e++)this._decodeSpeGeometry(s[e]);const n=this.mGltfSceneGraph.meshes||[];for(let e=0;e<n.length;e++)this._decodeGeometry(n[e]);const r=this.mGltfSceneGraph.nodes||[];for(let e=1;e<r.length;e++)this._decodeNode(r[e]);if(t&&this.mGltfSceneGraph.spline&&this.mGltfSceneGraph.spline.interactions){const e=this.mGltfSceneGraph.spline.interactions;for(let t=0;t<r.length;t++){const i=r[t];if(void 0!==i.spe_interaction){const a=i.spe_interaction;if(a<e.length&&a>=0){const i=e[a],s=this.mInteractionStates,n=this.mObjects;this.mNodes[t].interaction.fromJSON(i,n,s)}}}}const o=this.mGltfSceneGraph.nodes[0],h=new SpeStack;for(let e=0;e<o.children.length;e++)h.push([o.children[e],this.mSceneGraph]);for(;!h.empty();){const e=h.pop(),t=e[0],i=e[1];if(t<this.mNodes.length&&t>=0){const e=this.mNodes[t];if(!e)continue;i&&i.add(e);const a=this.mGltfSceneGraph.nodes[t].children;if(void 0!==a)for(let t=0;t<a.length;t++)h.push([a[t],e])}}if(void 0!==this.mGltfSceneGraph.spline&&this.mGltfSceneGraph.spline.fog){const e=this.mGltfSceneGraph.spline.fog,t=void 0!==e.color?e.color:16777215,i=void 0!==e.near?e.near:500,a=void 0!==e.far?e.far:2e3;this.mSceneGraph.fog=new THREE.Fog(t,i,a)}if(void 0!==this.mGltfSceneGraph.spline&&void 0!==this.mGltfSceneGraph.spline.mainCameraIndex){const e=this.mGltfSceneGraph.spline.mainCameraIndex;e<this.mNodes.length&&e>=0&&(this.mSceneCamera=this.mNodes[e])}return[this.mSceneGraph,this.mSceneCamera,this.mSceneOptions]}_decodeCamera(e){if("Perspective"===e.type){const t=e.spe_options||{},i=new THREE.PerspectiveCamera(e.perspective.yfov,e.perspective.aspectRatio,e.perspective.znear,e.perspective.zfar);i.zoom=void 0!==t.zoom?t.zoom:1,this.mCameras.push(i)}else if("Orthographic"===e.type){const t=e.spe_options||{},i=new THREE.OrthographicCamera(-e.orthographic.xmag/2,e.orthographic.xmag/2,e.orthographic.ymag/2,-e.orthographic.ymag/2,e.orthographic.znear,e.orthographic.zfar);i.zoom=void 0!==t.zoom?t.zoom:1,this.mCameras.push(i)}else console.error("SpeGltfDecoder::_decodeCamera >>> unsupported camera type: ",e.type)}_decodeLight(e){if("hemispheric"===e.type){const t=(new THREE.Color).fromArray(void 0!==e.color?e.color:[1,1,1]),i=(new THREE.Color).setHex(8553090),a=e.intensity?e.intensity:1;this.mLights.push(new THREE.HemisphereLight(t,i,a))}else if("directional"===e.type){const t=new THREE.DirectionalLight((new THREE.Color).fromArray(e.color),e.intensity),i=e.shadows||{};t.castShadow=void 0!==i.castShadow&&i.castShadow,t.shadow.camera.right=void 0!==i.shadowmapViewRight?i.shadowmapViewRight:1250,t.shadow.camera.left=void 0!==i.shadowmapViewLeft?i.shadowmapViewLeft:-1250,t.shadow.camera.top=void 0!==i.shadowmapViewTop?i.shadowmapViewTop:1250,t.shadow.camera.bottom=void 0!==i.shadowmapViewBottom?i.shadowmapViewBottom:-1250,t.shadow.camera.near=void 0!==i.shadowmapViewNear?i.shadowmapViewNear:1,t.shadow.camera.far=void 0!==i.shadowmapViewFar?i.shadowmapViewFar:2500,this.mLights.push(t)}else if("point"===e.type){const t=(new THREE.Color).fromArray(void 0!==e.color?e.color:[1,1,1]),i=e.intensity?e.intensity:1,a=void 0!==e.range?e.range:0,s=void 0!==e.decay?e.decay:1,n=new THREE.PointLight(t,i,a,s),r=e.shadows||{};n.castShadow=void 0!==r.castShadow&&r.castShadow,n.shadow.camera.near=void 0!==r.shadowmapViewNear?r.shadowmapViewNear:1,n.shadow.camera.far=void 0!==r.shadowmapViewFar?r.shadowmapViewFar:2500,this.mLights.push(n)}else if("spot"===e.type){const t=(new THREE.Color).fromArray(void 0!==e.color?e.color:[1,1,1]),i=(e.intensity&&e.intensity,void 0!==e.range?e.range:0),a=void 0!==e.decay?e.decay:1,s=void 0!==e.innerConeAngle?e.innerConeAngle:Math.PI/3,n=void 0!==e.penumbra?e.penumbra:0,r=new THREE.SpotLight(t,intesnsity,i,s,n,a),o=e.shadows||{};r.castShadow=void 0!==o.castShadow&&o.castShadow,r.shadow.camera.fov=void 0!==o.shadowmapViewFov?o.shadowmapViewFov:2*THREE.MathUtils.RAD2DEG*s,r.shadow.camera.near=void 0!==o.shadowmapViewNear?o.shadowmapViewNear:1,r.shadow.camera.far=void 0!==o.shadowmapViewFar?o.shadowmapViewFar:2500,this.mLights.push(r)}else console.error("SpeGltfDecoder::_decodeLight >>> unsupported light type: ",e.type)}_constructGeometricData(){const e=this.mGltfSceneGraph.buffers,t=[];for(let i=0;i<e.length;i++)t.push(this._decodeBuffer(e[i]));const i=this.mGltfSceneGraph.bufferViews,a=[];for(let e=0;e<i.length;e++)a.push(this._decodeBufferView(i[e],t));const s=this.mGltfSceneGraph.accessors;for(let e=0;e<s.length;e++)this.mAccessors.push(this._decodeAccessor(s[e],a))}_decodeBuffer(e){const t=e.byteLength,i=e.uri;if(i.indexOf("base64")){const e=i.slice(i.indexOf("base64")+7),a=atob(e),s=new Uint8Array(e.length);for(let e=0;e<a.length;e++)s[e]=a.charCodeAt(e);return{data:s,length:t}}return i.indexOf(".bin")?(console.error("SpeGltfDecoder::_decodeBuffer >>> encode-from-.bin is not implement yet"),""):(console.error("SpeGltfDecoder::_decodeBuffer >>> invalid options to parse buffer data"),"")}_decodeBufferView(e,t){const i=e.byteLength,a=e.byteOffset,s=e.buffer,n=e.target;if(s<t.length&&s>=0){return{data:t[s].data.slice(a,a+i),length:i,target:n}}return console.error("SpeGltfDecoder::_decodeBufferView >>> index-out-of-range in buffers array"),{}}_decodeAccessor(e,t){const i=e.bufferView,a=e.byteOffset,s=e.componentType,n=e.count,r=e.type;if(i<t.length&&i>=0){const e=t[i].data,o=this._getAccessorItemSize(r),h=n*o*this._getAccessorComponentSize(s),l=e.slice(a,a+h);let m=null;return s===UNSIGNED_SHORT?m=this._createUint16Buffer(l):s===UNSIGNED_INT?m=this._createUint32Buffer(l):s===FLOAT&&(m=this._createFloat32Buffer(l)),m?this._createBufferAttribute(m,o):(console.error("SpeGltfDecoder::_decodeAccessor >>> invalid component-type given"),null)}return console.error("SpeGltfDecoder::_decodeAccessor >>> index-out-of-range in bufferViews array"),null}_decodeMaterial(e){let[t,i]=Object.entries(e)[0];void 0!==i.extensions&&void 0!==i.extensions.KHR_materials_common?this._decodeSimpleMaterial(i.extensions.KHR_materials_common,i.spe_options,i.spe_layers):this._decodePbrMaterial(i)}_decodeSimpleMaterial(e,t,i){const a=e.technique||"PHONG",s=e.values||{},n=t||{},r=i||{};if("PHONG"===a){const e=(new THREE.Color).fromArray(void 0!==s.diffuse?s.diffuse:[.5,.5,.5]),t=(new THREE.Color).fromArray(void 0!==s.specular?s.specular:[.5,.5,.5]),i=(new THREE.Color).fromArray(void 0!==s.emission?s.emission:[0,0,0]),a=void 0!==s.shininess?s.shininess:32,o=void 0!==s.transparent&&s.transparent,h=void 0!==s.transparency?s.transparency:1,l=void 0===n.visible||n.visible,m=void 0!==n.wireframe&&n.wireframe,c=void 0!==n.side?n.side:THREE.FrontSide,d=void 0!==n.flatShading&&n.flatShading,f=new SpePhongMaterial(r,{color:e,specular:t,emissive:i,shininess:a,transparent:o,opacity:h,flatShading:d,side:c,wireframe:m,visible:l});this.mMaterials.push(f)}else if("LAMBERT"===a){const e=(new THREE.Color).fromArray(void 0!==s.diffuse?s.diffuse:[.5,.5,.5]),t=(new THREE.Color).fromArray(void 0!==s.emission?s.emission:[0,0,0]),i=void 0!==s.transparent&&s.transparent,a=void 0!==s.transparency?s.transparency:1,o=void 0===n.visible||n.visible,h=void 0!==n.wireframe&&n.wireframe,l=void 0!==n.side?n.side:THREE.FrontSide,m=void 0!==n.flatShading&&n.flatShading,c=new SpeLambertMaterial(r,{color:e,emissive:t,transparent:i,opacity:a,flatShading:m,side:l,wireframe:h,visible:o});this.mMaterials.push(c)}else if("CONSTANT"===a){const e=(new THREE.Color).fromArray(void 0!==s.ambient?s.ambient:[.5,.5,.5]),t=void 0!==s.transparent&&s.transparent,i=void 0!==s.transparency?s.transparency:1,a=void 0===n.visible||n.visible,o=void 0!==n.wireframe&&n.wireframe,h=void 0!==n.side?n.side:THREE.FrontSide,l=void 0!==n.flatShading&&n.flatShading,m=new SpeBasicMaterial(r,{color:e,transparent:t,opacity:i,flatShading:l,side:h,wireframe:o,visible:a});this.mMaterials.push(m)}else if("TOON"===a){const e=(new THREE.Color).fromArray(void 0!==s.ambient?s.ambient:[.5,.5,.5]),t=void 0!==s.transparent&&s.transparent,i=void 0!==s.transparency?s.transparency:1,a=void 0===n.visible||n.visible,o=void 0!==n.wireframe&&n.wireframe,h=void 0!==n.side?n.side:THREE.FrontSide,l=void 0!==n.flatShading&&n.flatShading,m=new SpeToonMaterial(r,{color:e,transparent:t,opacity:i,flatShading:l,side:h,wireframe:o,visible:a});this.mMaterials.push(m)}else if("PHYSICAL"===a){const e=(new THREE.Color).fromArray(void 0!==s.ambient?s.ambient:[.5,.5,.5]),t=void 0!==s.transparent&&s.transparent,i=void 0!==s.transparency?s.transparency:1,a=void 0!==s.roughness?s.roughness:.3,o=void 0!==s.metalness?s.metalness:0,h=void 0!==s.reflectivity?s.reflectivity:.5,l=void 0===n.visible||n.visible,m=void 0!==n.wireframe&&n.wireframe,c=void 0!==n.side?n.side:THREE.FrontSide,d=void 0!==n.flatShading&&n.flatShading,f=new SpePhysicalMaterial(r,{color:e,transparent:t,opacity:i,roughness:a,metalness:o,reflectivity:h,flatShading:d,side:c,wireframe:m,visible:l});this.mMaterials.push(f)}else if("ARRAY"===a){const e=void 0!==s.techniques?s.techniques:new Array(r.length).fill("CONSTANT"),t=[];for(let i=0;i<r.length;i++)"CONSTANT"===e[i]?t.push(new SpeBasicMaterial(r[i],{})):"LAMBERT"===e[i]?t.push(new SpeLambertMaterial(r[i],{})):"PHONG"===e[i]?t.push(new SpePhongMaterial(r[i],{})):"TOON"===e[i]?t.push(new SpeToonMaterial(r[i],{})):"PHYSICAL"===e[i]?t.push(new SpePhysicalMaterial(r[i],{})):(console.error(`SpeGltfDecoder::_decodeSimpleMaterial >>> unsupported technique (${e[i]}) for element of array of materials`),t.push(new SpeBasicMaterial(r[i],{})));this.mMaterials.push(t)}else console.error("SpeGltfDecoder::_decodeSimpleMaterial >>> unsupported material type: ",e.technique)}_decodePbrMaterial(e){}_decodeSpeGeometry(e){const t=void 0!==e.type?e.type:"SphereGeometry",i=this._applyQualityScalers(t,void 0!==e.parameters?{...e.parameters}:{width:100,height:100,depth:100});if("CharacterGeometry"===t){SpeLoadCharData(void 0!==i.char?i.char:".",void 0!==i.fontFamily?i.fontFamily:"roboto_regular",void 0!==i.lod?i.lod:1),this.mGeometriesSpe.push(i)}else{const e=(0,SPE[t].build)(i);this.mGeometriesSpe.push(e)}}_applyQualityScalers(e,t){if(void 0===SPE.QualityModifiers[e])return t;const i={},a=this.mSceneOptions.quality;for(const[s,n]of Object.entries(t)){if(void 0===SPE.QualityModifiers[e][s]){i[s]=n;continue}const t=SPE.QualityModifiers[e][s].minValue,r=SPE.QualityModifiers[e][s].maxValue,o=SPE.QualityModifiers[e][s].scalers[a];i[s]=Math.max(t,Math.min(r,o*n))}return i}_decodeGeometry(e){const t=e.primitives,i=e.groups,a=e.parameters,s=t[0],n=s.indices,r=s.attributes,o=this.mAccessors[n],h={};for(let e in r)h[e]=this.mAccessors[r[e]];const l=new THREE.BufferGeometry;o&&l.setIndex(o);for(let e in h)l.setAttribute(e.toLowerCase(),h[e]);if(void 0!==i)for(let e=0;e<i.length;e++)l.addGroup(i[e].start,i[e].count,i[e].materialIndex);if(void 0!==a){const e=new THREE.Vector3;l.computeBoundingBox(),l.boundingBox.getSize(e);const t=void 0!==a.width?a.width:e.x,i=void 0!==a.height?a.height:e.y,s=void 0!==a.depth?a.depth:e.z;l.scale(Math.abs(e.x)<1e-5?1:t/e.x,Math.abs(e.y)<1e-5?1:i/e.y,Math.abs(e.z)<1e-5?1:s/e.z),l.userData={type:"NonParametricGeometry",parameters:{width:t,height:i,depth:s}}}this.mGeometries.push(l)}_decodeNode(e){if(void 0!==e.camera){const t=e.camera;if(t<this.mCameras.length&&t>=0){const i=this.mCameras[t];i.position.copy((new THREE.Vector3).fromArray(e.translation?e.translation:[0,0,0])),i.quaternion.copy((new THREE.Quaternion).fromArray(e.rotation?e.rotation:[0,0,0,1])),i.updateMatrix(),this.mNodes.push(i)}else console.error("SpeGltfDecoder::_decodeNode >>> couldnt create node for associated camera (index out of bounds)")}else if(void 0!==e.mesh_spe){const t=e.mesh_spe;let i=null;t<this.mGeometriesSpe.length&&t>=0?i=this.mGeometriesSpe[t]:(console.warn("SpeGltfDecoder::_decodeNode >>> couldnt grab any associated geometry for a mesh-node (index out of bounds). Creating a default sphere instead"),i=new THREE.SphereBufferGeometry(1,10,10));let a=null;if(void 0!==e.material){const t=e.material;t<this.mMaterials.length&&t>=0?a=this.mMaterials[t]:console.warn("SpeGltfDecoder::_decodeNode >>> couldnt grab any associated material for a mesh-node (index out of bounds)")}a||(console.error("SpeGltfDecoder::_decodeNode >>> mesh-node doesnt have a material. Creating a default phong-material instead"),a=new SpePhongMaterial({},{color:new THREE.Color(16777215),specular:new THREE.Color(16777215)}));const s=void 0!==e.type?e.type:"mesh3d";let n=null;"mesh3d"===s?n=new SpeMesh3D(i,a):"mesh2d"===s?n=new SpeMesh2D(i,a):"text"===s?n=new SpeTextContainer(i,a):"character"===s?n=new SpeTextChar3D(i,a):(console.error(`SpeGltfDecoder::_decodeNode >>> mesh-type ${s} not supported`),n=new SpeMesh3D(i,a)),n.visible=void 0===e.visible||e.visible,n.castShadow=void 0===e.castShadow||e.castShadow,n.receiveShadow=void 0===e.receiveShadow||e.receiveShadow,n.position.copy((new THREE.Vector3).fromArray(e.translation?e.translation:[0,0,0])),n.quaternion.copy((new THREE.Quaternion).fromArray(e.rotation?e.rotation:[0,0,0,1])),n.scale.copy((new THREE.Vector3).fromArray(e.scale?e.scale:[1,1,1])),n.hiddenMatrix.copy((new THREE.Matrix4).fromArray(e.hiddenMatrix?e.hiddenMatrix:[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])),n.updateMatrix(),e.spe_is_cloner&&(n.material.visible=e.spe_cloner_visible),this.mNodes.push(n);const r=void 0!==e.uuid?e.uuid:THREE.MathUtils.generateUUID();this.mObjects[r]=n}else if(void 0!==e.mesh){const t=e.mesh;let i=null;t<this.mGeometries.length&&t>=0?i=this.mGeometries[t]:(console.warn("SpeGltfDecoder::_decodeNode >>> couldnt grab any associated geometry for a mesh-node (index out of bounds). Creating a default sphere instead"),i=new THREE.SphereBufferGeometry(1,10,10));let a=null;if(void 0!==e.material){const t=e.material;t<this.mMaterials.length&&t>=0?a=this.mMaterials[t]:console.warn("SpeGltfDecoder::_decodeNode >>> couldnt grab any associated material for a mesh-node (index out of bounds)")}a||(console.warn("SpeGltfDecoder::_decodeNode >>> mesh-node doesnt have a material. Creating a default phong-material instead"),a=new SpePhongMaterial({},{color:new THREE.Color(16777215),specular:new THREE.Color(16777215)}));const s=new SpeMesh3D(i,a);s.visible=void 0===e.visible||e.visible,s.castShadow=void 0===e.castShadow||e.castShadow,s.receiveShadow=void 0===e.receiveShadow||e.receiveShadow,s.position.copy((new THREE.Vector3).fromArray(e.translation?e.translation:[0,0,0])),s.quaternion.copy((new THREE.Quaternion).fromArray(e.rotation?e.rotation:[0,0,0,1])),s.scale.copy((new THREE.Vector3).fromArray(e.scale?e.scale:[1,1,1])),s.hiddenMatrix.copy((new THREE.Matrix4).fromArray(e.hiddenMatrix?e.hiddenMatrix:[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])),s.updateMatrix(),e.spe_is_cloner&&(s.material.visible=e.spe_cloner_visible),this.mNodes.push(s);const n=void 0!==e.uuid?e.uuid:THREE.MathUtils.generateUUID();this.mObjects[n]=s}else if(void 0!==e.extensions&&void 0!==e.extensions.KHR_lights_punctual&&void 0!==e.extensions.KHR_lights_punctual.light){const t=e.extensions.KHR_lights_punctual.light;if(t<this.mLights.length&&t>=0){const i=this.mLights[t];if(i.position.copy((new THREE.Vector3).fromArray(e.translation?e.translation:[0,0,0])),"SpotLight"===i.type||"DirectionalLight"===i.type){const t=(new THREE.Quaternion).fromArray(e.rotation?e.rotation:[0,0,0,1]),a=(new THREE.Matrix4).makeRotationFromQuaternion(t),s=new THREE.Vector3(a.elements[8],a.elements[9],a.elements[10]);i.target.position.x=i.position.x+s.x,i.target.position.y=i.position.y+s.y,i.target.position.z=i.position.z+s.z}i.visible=void 0===e.visible||e.visible,this.mNodes.push(i)}else console.error("SpeGltfDecoder::_decodeNode >>> couldnt create node for associated light (index out of bounds)")}else if(e.spe_empty_object){const t=new SpeEmptyObject;t.position.copy((new THREE.Vector3).fromArray(e.translation?e.translation:[0,0,0])),t.quaternion.copy((new THREE.Quaternion).fromArray(e.rotation?e.rotation:[0,0,0,1])),t.scale.copy((new THREE.Vector3).fromArray(e.scale?e.scale:[1,1,1])),t.hiddenMatrix.copy((new THREE.Matrix4).fromArray(e.hiddenMatrix?e.hiddenMatrix:[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])),t.updateMatrix(),this.mNodes.push(t)}else if(e.spe_cloner_group){const t=new THREE.Object3D;t.position.copy((new THREE.Vector3).fromArray(e.translation?e.translation:[0,0,0])),t.quaternion.copy((new THREE.Quaternion).fromArray(e.rotation?e.rotation:[0,0,0,1])),t.scale.copy((new THREE.Vector3).fromArray(e.scale?e.scale:[1,1,1])),t.updateMatrix(),this.mNodes.push(t)}else{const t=new THREE.Object3D;t.position.copy((new THREE.Vector3).fromArray(e.translation?e.translation:[0,0,0])),t.quaternion.copy((new THREE.Quaternion).fromArray(e.rotation?e.rotation:[0,0,0,1])),t.scale.copy((new THREE.Vector3).fromArray(e.scale?e.scale:[1,1,1])),this.mNodes.push(t)}}_getAccessorItemSize(e){return"SCALAR"===e?1:"VEC2"===e?2:"VEC3"===e?3:"VEC4"===e?4:"MAT4"===e?16:(console.error("SpeGltfDecoder::_getAccessorItemSize >>> invalid item-type"),1)}_getAccessorComponentSize(e){return e===UNSIGNED_BYTE?1:e===UNSIGNED_SHORT?2:e===UNSIGNED_INT||e===FLOAT?4:(console.error("SpeGltfDecoder::_getAccessorComponentSize >>> invalid component-type"),1)}_createUint16Buffer(e){return new Uint16Array(e.buffer)}_createUint32Buffer(e){return new Uint32Array(e.buffer)}_createFloat32Buffer(e){const t=new Float32Array(e.length/Float32Array.BYTES_PER_ELEMENT),i=new DataView(new ArrayBuffer(Float32Array.BYTES_PER_ELEMENT));for(let a=0;a<t.length;a++)i.setUint8(0,e[4*a+0]),i.setUint8(1,e[4*a+1]),i.setUint8(2,e[4*a+2]),i.setUint8(3,e[4*a+3]),t[a]=i.getFloat32(0,!0);return t}_createBufferAttribute(e,t){return"Float32Array"===e.constructor.name?new THREE.Float32BufferAttribute(e,t):"Uint16Array"===e.constructor.name?new THREE.Uint16BufferAttribute(e,t):"Uint32Array"===e.constructor.name?new THREE.Uint32BufferAttribute(e,t):(console.error("SpeGltfDecoder::_createBufferAttribute >>> unsupported buffer-array-type"),null)}}class SpeIMesh extends THREE.Mesh{constructor(e,t){super(e,t),this.mLocalTransform=new THREE.Matrix4,this.mInteraction="function"==typeof Interaction?new Interaction(this):null}get interaction(){return this.mInteraction}set interaction(e){this.mInteraction=e}get hiddenMatrix(){return this.mLocalTransform}set hiddenMatrix(e){this.mLocalTransform.copy(e)}updateGeometry(e){this.geometry.copy(e)}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.multiplyMatrices(this.mLocalTransform,this.matrix):(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.mLocalTransform),this.matrixWorld.multiplyMatrices(this.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let i=0,a=t.length;i<a;i++)t[i].updateMatrixWorld(e)}updateWorldMatrix(e,t){var i=this.parent;if(!0===e&&null!==i&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.multiplyMatrices(this.mLocalTransform,this.matrix):(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.mLocalTransform),this.matrixWorld.multiplyMatrices(this.matrixWorld,this.matrix)),!0===t)for(var a=this.children,s=0,n=a.length;s<n;s++)a[s].updateWorldMatrix(!1,!0)}}class SpeMesh3D extends SpeIMesh{constructor(e,t){super(e,t)}}class SpeMesh2D extends SpeIMesh{constructor(e,t){super(e,t)}}class SpeEmptyObject extends THREE.Group{constructor(){super(),this.mLocalTransform=new THREE.Matrix4}get hiddenMatrix(){return this.mLocalTransform}set hiddenMatrix(e){this.mLocalTransform.copy(e)}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.multiplyMatrices(this.mLocalTransform,this.matrix):(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.mLocalTransform),this.matrixWorld.multiplyMatrices(this.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let i=0,a=t.length;i<a;i++)t[i].updateMatrixWorld(e)}updateWorldMatrix(e,t){var i=this.parent;if(!0===e&&null!==i&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.multiplyMatrices(this.mLocalTransform,this.matrix):(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.mLocalTransform),this.matrixWorld.multiplyMatrices(this.matrixWorld,this.matrix)),!0===t)for(var a=this.children,s=0,n=a.length;s<n;s++)a[s].updateWorldMatrix(!1,!0)}}class SpeLayer{constructor(e,t=SPE_LAYER_TYPE_COLOR,i={}){this.mId=e,this.mType=t,this.mNext=null,this.mDefines={},this.mUniforms={},this.mProgramVertUniforms="",this.mProgramFragUniforms="",this.initializeUniformsAndDefines(i)}get id(){return this.mId}get type(){return this.mType}get next(){return this.mNext}set next(e){this.mNext=e}get defines(){return this.mDefines}get uniforms(){return this.mUniforms}get paramNames(){const e=Object.keys(this.mUniforms),t=`f${this.mId}_`,i=[];for(let a=0;a<e.length;a++){const s=e[a];i.push(s.slice(s.indexOf(t)+t.length))}return i}getValues(){const e=`f${this.mId}_`,t={type:this.type};for(const[i,a]of Object.entries(this.mUniforms)){const s=i.slice(i.indexOf(e)+e.length);a.value.toArray?t[s]=a.value.toArray():t[s]=a.value}return t}initializeUniformsAndDefines(e){console.error("SpeLayer::initializeUniformsAndDefines >>> virtual method")}generateUniformsCodeVert(){return"\n\r"}generateUniformsCodeFrag(){return"\n\r"}generateShaderCodeVert(e){return"\n\r"}generateShaderCodeFrag(e){return"\n\r"}copy(e){this.mType===e.mType?(this.mId=e.mId,this.mDefines={...e.mDefines},this.copyUniforms(e)):console.error(`SpeLayer::copy >>> cant copy layer of different type dst=${this.mType}, src=${e.mType}`)}clone(){return SpeLayer.CreateLayer(this.mId,this.mType,this.mUniforms)}copyUniforms(e){console.error("SpeLayer::copyUniforms >>> virtual method")}static CreateLayer(e,t,i){return t===SPE_LAYER_TYPE_LIGHTING?new SpeLayerLighting(e,i):t===SPE_LAYER_TYPE_COLOR?new SpeLayerColor(e,i):t===SPE_LAYER_TYPE_GRADIENT?new SpeLayerGradient(e,i):t===SPE_LAYER_TYPE_NORMAL?new SpeLayerNormal(e,i):t===SPE_LAYER_TYPE_DEPTH?new SpeLayerDepth(e,i):t===SPE_LAYER_TYPE_TEXTURE?new SpeLayerTexture(e,i):t===SPE_LAYER_TYPE_NOISE?new SpeLayerNoise(e,i):t===SPE_LAYER_TYPE_FRESNEL?new SpeLayerFresnel(e,i):t===SPE_LAYER_TYPE_POINTS?new SpeLayerPoints(e,i):t===SPE_LAYER_TYPE_LINES?new SpeLayerLines(e,i):null}static DictToUniforms(e){const t={};for(const[i,a]of Object.entries(e))t[i]={value:a};return t}}class SpeLayerLighting extends SpeLayer{constructor(e,t){super(e,SPE_LAYER_TYPE_LIGHTING,t)}initializeUniformsAndDefines(e){this.mDefines.SPE_USE_LAYER_LIGHTING="",this.mUniforms[`f${this.mId}_alpha`]={value:void 0!==e.alpha?e.alpha.value:1},this.mUniforms[`f${this.mId}_mode`]={value:void 0!==e.mode?e.mode.value:SPE_BLENDING_NORMAL}}generateUniformsCodeFrag(){return`\n            // SPE: Lighting layer uniforms *****\n            uniform float f${this.mId}_alpha;\n            uniform int f${this.mId}_mode;\n            // **********************************\n        `}generateShaderCodeFrag(){return`\n            // SPE: Lighting layer frag-shader-code ************************************************\n            // @todo: instead of == use absolute distance for vector comparison\n            if ( outgoingLight != diffuseColor.rgb ) {\n                float lightAccu = clamp( length( reflectedLight.directSpecular + reflectedLight.indirectSpecular ), 0.0, 1.0 );\n                accumAlpha += ( 1.0 - accumAlpha ) * f${this.mId}_alpha * lightAccu;\n                outgoingLight = spe_blend( diffuseColor.rgb, outgoingLight, f${this.mId}_alpha, f${this.mId}_mode );\n            }\n            // *************************************************************************************\n        `}copyUniforms(e){e instanceof SpeLayerLighting&&(this.mUniforms[`f${this.mId}_alpha`]={value:e.uniforms[`f${e.id}_alpha`].value},this.mUniforms[`f${this.mId}_mode`]={value:e.uniforms[`f${e.id}_mode`].value})}}class SpeLayerColor extends SpeLayer{constructor(e,t){super(e,SPE_LAYER_TYPE_COLOR,t)}initializeUniformsAndDefines(e){this.mDefines.SPE_USE_LAYER_COLOR="",this.mUniforms[`f${this.mId}_alpha`]={value:void 0!==e.alpha?e.alpha.value:1},this.mUniforms[`f${this.mId}_mode`]={value:void 0!==e.mode?e.mode.value:SPE_BLENDING_NORMAL},this.mUniforms[`f${this.mId}_color`]={value:void 0!==e.color?new THREE.Color(e.color.value):new THREE.Color(SPE_COLOR_DEFAULT)}}generateUniformsCodeFrag(){return`\n            // SPE: Color layer uniforms **********\n            uniform float f${this.mId}_alpha;\n            uniform int f${this.mId}_mode;\n            uniform vec3 f${this.mId}_color;\n            // ************************************\n        `}generateShaderCodeFrag(e){return`\n            // SPE: Color layer frag-shader-code ***************************************************\n            float f${this.mId}_calpha = f${this.mId}_alpha / clamp( f${this.mId}_alpha + accumAlpha, 0.00001, 1.0 );\n            accumAlpha += ( 1.0 - accumAlpha ) * f${this.mId}_alpha;\n            ${e} = spe_blend( ${e}, f${this.mId}_color, f${this.mId}_calpha, f${this.mId}_mode );\n            // *************************************************************************************\n        `}copyUniforms(e){e instanceof SpeLayerColor&&(this.mUniforms[`f${this.mId}_alpha`]={value:e.uniforms[`f${e.id}_alpha`].value},this.mUniforms[`f${this.mId}_mode`]={value:e.uniforms[`f${e.id}_mode`].value},this.mUniforms[`f${this.mId}_color`]={value:e.uniforms[`f${e.id}_color`].value.clone()})}}class SpeLayerTexture extends SpeLayer{constructor(e,t){super(e,SPE_LAYER_TYPE_TEXTURE,t)}initializeUniformsAndDefines(e){var t;this.mDefines.SPE_USE_LAYER_TEXTURE="",this.mDefines.USE_UV="",this.mUniforms[`f${this.mId}_alpha`]={value:void 0!==e.alpha?e.alpha.value:1},this.mUniforms[`f${this.mId}_mode`]={value:void 0!==e.mode?e.mode.value:SPE_BLENDING_NORMAL},this.mUniforms[`f${this.mId}_texture`]={value:void 0!==e.texture?(t=e.texture.value,t instanceof THREE.Texture?t:"string"==typeof t?function(e){const t=new Image;t.src=e;const i=new THREE.Texture(t);return i.needsUpdate=!0,i}(t):(console.error("SpeLayerTexture::get_texture >>> cant retrieve texture from given parameters"),new THREE.Texture)):new THREE.Texture},this.mUniforms[`f${this.mId}_mat`]={value:void 0!==e.mat?this.mUniforms[`f${this.mId}_texture`].value.matrix.fromArray(void 0!==e.mat.value.elements?e.mat.value.elements:e.mat.value):this.mUniforms[`f${this.mId}_texture`].value.matrix},this.mUniforms[`f${this.mId}_crop`]={value:void 0!==e.crop?e.crop.value:0}}generateUniformsCodeFrag(){return`\n            // SPE: Texture layer uniforms ********\n            uniform float f${this.mId}_alpha;\n            uniform int f${this.mId}_mode;\n            uniform sampler2D f${this.mId}_texture;\n            uniform mat3 f${this.mId}_mat;\n            uniform float f${this.mId}_crop;\n            // ************************************\n        `}generateShaderCodeFrag(e){return`\n            // SPE: Texture layer frag-shader-code *************************************************\n            vec2 f${this.mId}_vUv = ( f${this.mId}_mat * vec3( vUv * 2. - 1., 1. ) / 2. + 0.5 ).xy;\n            vec4 f${this.mId}_tmp = texture2D( f${this.mId}_texture, f${this.mId}_vUv );\n            vec3 f${this.mId}_col = f${this.mId}_tmp.rgb;\n            float f${this.mId}_lalpha = f${this.mId}_alpha * f${this.mId}_tmp.a;\n            if ( f${this.mId}_crop > 0.5 ) {\n                if ( f${this.mId}_vUv.x < 0.0 || f${this.mId}_vUv.x > 1.0 ||\n                     f${this.mId}_vUv.y < 0.0 || f${this.mId}_vUv.y > 1.0 ) {\n                        f${this.mId}_lalpha = 0.0;\n                }\n            }\n            float f${this.mId}_calpha =  f${this.mId}_lalpha / clamp( f${this.mId}_lalpha + accumAlpha, 0.00001, 1.0 );\n            accumAlpha += ( 1.0 - accumAlpha ) * f${this.mId}_lalpha;\n            ${e} = spe_blend( ${e}, f${this.mId}_col, f${this.mId}_calpha, f${this.mId}_mode );\n            // *************************************************************************************\n        `}copyUniforms(e){e instanceof SpeLayerTexture&&(this.mUniforms[`f${this.mId}_alpha`]={value:e.uniforms[`f${e.id}_alpha`].value},this.mUniforms[`f${this.mId}_mode`]={value:e.uniforms[`f${e.id}_mode`].value},this.mUniforms[`f${this.mId}_texture`]={value:e.uniforms[`f${e.id}_texture`].value.clone()},this.mUniforms[`f${this.mId}_mat`]={value:this.mUniforms[`f${this.mId}_texture`].value.matrix},this.mUniforms[`f${this.mId}_crop`]={value:e.uniforms[`f${e.id}_crop`].value})}static DictToUniforms(e){return{alpha:{value:e.alpha},mode:{value:e.mode},texture:{value:e.texture},mat:{value:e.texture.matrix},crop:{value:e.crop}}}}class SpeLayerNormal extends SpeLayer{constructor(e,t){super(e,SPE_LAYER_TYPE_NORMAL,t)}initializeUniformsAndDefines(e){this.mDefines.SPE_USE_LAYER_NORMAL="",this.mUniforms[`f${this.mId}_alpha`]={value:void 0!==e.alpha?e.alpha.value:1},this.mUniforms[`f${this.mId}_mode`]={value:void 0!==e.mode?e.mode.value:SPE_BLENDING_NORMAL},this.mUniforms[`f${this.mId}_cnormal`]={value:void 0!==e.cnormal?(new THREE.Vector3).fromArray(e.cnormal.value):new THREE.Vector3(1,1,1)}}generateUniformsCodeFrag(){return`\n            // SPE: Normal layer uniforms ********\n            uniform float f${this.mId}_alpha;\n            uniform int f${this.mId}_mode;\n            uniform vec3 f${this.mId}_cnormal;\n            // ***********************************\n        `}generateShaderCodeFrag(e){return`\n            // SPE: Normal layer frag-shader-code **************************************************\n            vec3 f${this.mId}_normal = packNormalToRGB( normal ).rgb;\n            f${this.mId}_normal *= step( vec3(0.5), f${this.mId}_cnormal );\n            float f${this.mId}_calpha = f${this.mId}_alpha / clamp( f${this.mId}_alpha + accumAlpha, 0.00001, 1.0 );\n            accumAlpha += ( 1.0 - accumAlpha ) * f${this.mId}_alpha;\n            ${e} = spe_blend( ${e}, f${this.mId}_normal, f${this.mId}_calpha, f${this.mId}_mode );\n            // *************************************************************************************\n        `}copyUniforms(e){e instanceof SpeLayerNormal&&(this.mUniforms[`f${this.mId}_alpha`]={value:e.uniforms[`f${e.id}_alpha`].value},this.mUniforms[`f${this.mId}_mode`]={value:e.uniforms[`f${e.id}_mode`].value},this.mUniforms[`f${this.mId}_cnormal`]={value:e.uniforms[`f${e.id}_cnormal`].value.clone()})}}class SpeLayerDepth extends SpeLayer{constructor(e,t){super(e,SPE_LAYER_TYPE_DEPTH,t)}initializeUniformsAndDefines(e){this.mDefines.SPE_USE_LAYER_DEPTH="",this.mUniforms[`f${this.mId}_alpha`]={value:void 0!==e.alpha?e.alpha.value:1},this.mUniforms[`f${this.mId}_mode`]={value:void 0!==e.mode?e.mode.value:SPE_BLENDING_NORMAL},this.mUniforms[`f${this.mId}_near`]={value:void 0!==e.near?e.near.value:700},this.mUniforms[`f${this.mId}_far`]={value:void 0!==e.far?e.far.value:1e3},this.mUniforms[`f${this.mId}_origin`]={value:void 0!==e.origin?(new THREE.Vector3).fromArray(e.origin.value):new THREE.Vector3},this.mUniforms[`f${this.mId}_isVector`]={value:void 0!==e.isVector?e.isVector.value:0},this.mUniforms[`f${this.mId}_colorA`]={value:e.colorA?new THREE.Color(e.colorA.value):new THREE.Color},this.mUniforms[`f${this.mId}_colorB`]={value:e.colorB?new THREE.Color(e.colorB.value):new THREE.Color(0,0,0)}}generateUniformsCodeFrag(){return`\n            // SPE: Depth layer uniforms *************\n            uniform float f${this.mId}_alpha;\n            uniform int f${this.mId}_mode;\n            uniform float f${this.mId}_near;\n            uniform float f${this.mId}_far;\n            uniform float f${this.mId}_isVector;\n            uniform vec3 f${this.mId}_origin;\n            uniform vec3 f${this.mId}_colorA;\n            uniform vec3 f${this.mId}_colorB;\n            // ***************************************\n        `}generateShaderCodeFrag(e){return`\n            // SPE: Depth layer frag-shader-code ***************************************************\n            vec3 base${this.mId} = ( f${this.mId}_isVector > 0.5 ) ?  f${this.mId}_origin : cameraPosition;\n            float dist${this.mId} = length( dWorldPosition.xyz - base${this.mId} );\n            float dep${this.mId} = ( dist${this.mId} - f${this.mId}_near ) / ( f${this.mId}_far - f${this.mId}_near );\n            vec3 f${this.mId}_depth =  mix( f${this.mId}_colorB, f${this.mId}_colorA, 1.0 - clamp( dep${this.mId}, 0., 1. ) );\n            float f${this.mId}_calpha = f${this.mId}_alpha / clamp( f${this.mId}_alpha + accumAlpha, 0.001, 1.0 );\n            accumAlpha += ( 1.0 - accumAlpha ) * f${this.mId}_alpha;\n            ${e} = spe_blend( ${e}, f${this.mId}_depth, f${this.mId}_calpha, f${this.mId}_mode );\n            // *************************************************************************************\n        `}copyUniforms(e){e instanceof SpeLayerDepth&&(this.mUniforms[`f${this.mId}_alpha`]={value:e.uniforms[`f${e.id}_alpha`].value},this.mUniforms[`f${this.mId}_mode`]={value:e.uniforms[`f${e.id}_mode`].value},this.mUniforms[`f${this.mId}_near`]={value:e.uniforms[`f${e.id}_near`].value},this.mUniforms[`f${this.mId}_far`]={value:e.uniforms[`f${e.id}_far`].value},this.mUniforms[`f${this.mId}_origin`]={value:e.uniforms[`f${e.id}_origin`].value.clone()},this.mUniforms[`f${this.mId}_isVector`]={value:e.uniforms[`f${e.id}_isVector`].value},this.mUniforms[`f${this.mId}_colorA`]={value:e.uniforms[`f${e.id}_colorA`].value.clone()},this.mUniforms[`f${this.mId}_colorB`]={value:e.uniforms[`f${e.id}_colorB`].value.clone()})}}class SpeLayerNoise extends SpeLayer{constructor(e,t){super(e,SPE_LAYER_TYPE_NOISE,t)}initializeUniformsAndDefines(e){this.mDefines.SPE_USE_LAYER_NOISE="",this.mDefines.SPE_USE_LAYER_TEXTURE="",this.mDefines.SPE_NOISE_NUM_OCTAVES="5",this.mDefines.USE_UV="",this.mUniforms[`f${this.mId}_alpha`]={value:void 0!==e.alpha?e.alpha.value:1},this.mUniforms[`f${this.mId}_mode`]={value:void 0!==e.mode?e.mode.value:SPE_BLENDING_NORMAL},this.mUniforms[`f${this.mId}_scale`]={value:void 0!==e.scale?e.scale.value:2},this.mUniforms[`f${this.mId}_move`]={value:void 0!==e.move?e.move.value:1},this.mUniforms[`f${this.mId}_distortion`]={value:void 0!==e.distortion?(new THREE.Vector2).fromArray(e.distortion.value):new THREE.Vector2(1,1)},this.mUniforms[`f${this.mId}_fA`]={value:void 0!==e.fA?(new THREE.Vector2).fromArray(e.fA.value):new THREE.Vector2(1.7,9.2)},this.mUniforms[`f${this.mId}_fB`]={value:void 0!==e.fB?(new THREE.Vector2).fromArray(e.fB.value):new THREE.Vector2(8.3,2.8)},this.mUniforms[`f${this.mId}_colorA`]={value:void 0!==e.colorA?new THREE.Color(e.colorA.value):new THREE.Color(.4,.4,.4)},this.mUniforms[`f${this.mId}_colorB`]={value:void 0!==e.colorB?new THREE.Color(e.colorB.value):new THREE.Color(.4,.4,.4)},this.mUniforms[`f${this.mId}_colorC`]={value:void 0!==e.colorC?new THREE.Color(e.colorC.value):new THREE.Color(1,1,1)},this.mUniforms[`f${this.mId}_colorD`]={value:void 0!==e.colorD?new THREE.Color(e.colorD.value):new THREE.Color(1,1,1)},this.mUniforms[`f${this.mId}_intA`]={value:void 0!==e.intA?e.intA.value:10},this.mUniforms[`f${this.mId}_intB`]={value:void 0!==e.intB?e.intB.value:10},this.mUniforms[`f${this.mId}_intC`]={value:void 0!==e.intC?e.intC.value:10},this.mUniforms[`f${this.mId}_intD`]={value:void 0!==e.intD?e.intD.value:10}}generateUniformsCodeFrag(){return`\n            // SPE: Noise layer uniforms *******************\n            uniform float f${this.mId}_alpha;\n            uniform int f${this.mId}_mode;\n            uniform float f${this.mId}_scale;\n            uniform float f${this.mId}_move;\n            uniform vec2 f${this.mId}_fA;\n            uniform vec2 f${this.mId}_fB;\n            uniform vec2 f${this.mId}_distortion;\n            uniform vec3 f${this.mId}_colorA;\n            uniform vec3 f${this.mId}_colorB;\n            uniform vec3 f${this.mId}_colorC;\n            uniform vec3 f${this.mId}_colorD;\n            uniform float f${this.mId}_intA;\n            uniform float f${this.mId}_intB;\n            uniform float f${this.mId}_intC;\n            uniform float f${this.mId}_intD;\n            // *********************************************\n        `}generateShaderCodeFrag(e){return`\n            // SPE: Noise layer frag-shader-code ***************************************************\n            vec2 f${this.mId}_st = vUv * f${this.mId}_scale;\n            vec3 f${this.mId}_color;\n            vec2 f${this.mId}_q = vec2( fbm( f${this.mId}_st ), fbm( f${this.mId}_st + vec2(1.0) ) );\n            vec2 f${this.mId}_r = vec2( fbm( f${this.mId}_st + f${this.mId}_distortion * f${this.mId}_q + f${this.mId}_fA + f${this.mId}_move ),\n                                        fbm( f${this.mId}_st + f${this.mId}_distortion * f${this.mId}_q + f${this.mId}_fB + f${this.mId}_move ) );\n            float f${this.mId}_f = fbm( f${this.mId}_st + f${this.mId}_r );\n            f${this.mId}_color = mix( f${this.mId}_colorA * f${this.mId}_intA, f${this.mId}_colorB * f${this.mId}_intB,\n                         clamp((f${this.mId}_f*f${this.mId}_f)*4.0,0.0,1.0) );\n            f${this.mId}_color = mix( f${this.mId}_color, f${this.mId}_colorC * f${this.mId}_intC,\n                         clamp( length(f${this.mId}_q), 0.0, 1.0 ) );\n            f${this.mId}_color = mix( f${this.mId}_color, f${this.mId}_colorD * f${this.mId}_intD,\n                         clamp( length(f${this.mId}_r.x), 0.0, 1.0 ) );\n            vec3 f${this.mId}_noise = clamp( vec3( f${this.mId}_f * f${this.mId}_color ), 0.0, 1.0 );\n            float f${this.mId}_calpha = f${this.mId}_alpha / clamp( f${this.mId}_alpha + accumAlpha, 0.001, 1.0 );\n            accumAlpha += ( 1.0 - accumAlpha ) * f${this.mId}_alpha;\n            ${e} = spe_blend( ${e}, f${this.mId}_noise, f${this.mId}_calpha, f${this.mId}_mode );\n            // *************************************************************************************\n        `}copyUniforms(e){e instanceof SpeLayerNoise&&(this.mUniforms[`f${this.mId}_alpha`]={value:e.uniforms[`f${e.id}_alpha`].value},this.mUniforms[`f${this.mId}_mode`]={value:e.uniforms[`f${e.id}_mode`].value},this.mUniforms[`f${this.mId}_scale`]={value:e.uniforms[`f${e.id}_scale`].value},this.mUniforms[`f${this.mId}_move`]={value:e.uniforms[`f${e.id}_move`].value},this.mUniforms[`f${this.mId}_distortion`]={value:e.uniforms[`f${e.id}_distortion`].value.clone()},this.mUniforms[`f${this.mId}_fA`]={value:e.uniforms[`f${e.id}_fA`].value.clone()},this.mUniforms[`f${this.mId}_fB`]={value:e.uniforms[`f${e.id}_fB`].value.clone()},this.mUniforms[`f${this.mId}_colorA`]={value:e.uniforms[`f${e.id}_colorA`].value.clone()},this.mUniforms[`f${this.mId}_colorB`]={value:e.uniforms[`f${e.id}_colorB`].value.clone()},this.mUniforms[`f${this.mId}_colorC`]={value:e.uniforms[`f${e.id}_colorC`].value.clone()},this.mUniforms[`f${this.mId}_colorD`]={value:e.uniforms[`f${e.id}_colorD`].value.clone()},this.mUniforms[`f${this.mId}_intA`]={value:e.uniforms[`f${e.id}_intA`].value},this.mUniforms[`f${this.mId}_intB`]={value:e.uniforms[`f${e.id}_intB`].value},this.mUniforms[`f${this.mId}_intC`]={value:e.uniforms[`f${e.id}_intC`].value},this.mUniforms[`f${this.mId}_intD`]={value:e.uniforms[`f${e.id}_intD`].value})}}class SpeLayerFresnel extends SpeLayer{constructor(e,t){super(e,SPE_LAYER_TYPE_FRESNEL,t)}initializeUniformsAndDefines(e){this.mDefines.SPE_USE_LAYER_FRESNEL="",this.mUniforms[`f${this.mId}_alpha`]={value:void 0!==e.alpha?e.alpha.value:1},this.mUniforms[`f${this.mId}_mode`]={value:void 0!==e.mode?e.mode.value:SPE_BLENDING_NORMAL},this.mUniforms[`f${this.mId}_bias`]={value:void 0!==e.bias?e.bias.value:.1},this.mUniforms[`f${this.mId}_scale`]={value:void 0!==e.scale?e.scale.value:1},this.mUniforms[`f${this.mId}_intensity`]={value:void 0!==e.intensity?e.intensity.value:2},this.mUniforms[`f${this.mId}_factor`]={value:void 0!==e.factor?e.factor.value:1},this.mUniforms[`f${this.mId}_color`]={value:void 0!==e.color?new THREE.Color(e.color.value):new THREE.Color}}generateUniformsCodeFrag(){return`\n            // SPE: Fresnel layer uniforms *********\n            uniform float f${this.mId}_alpha;\n            uniform int f${this.mId}_mode;\n            uniform float f${this.mId}_bias;\n            uniform float f${this.mId}_scale;\n            uniform float f${this.mId}_intensity;\n            uniform float f${this.mId}_factor;\n            uniform vec3 f${this.mId}_color;\n            // *************************************\n        `}generateShaderCodeFrag(e){return`\n            // SPE: Fresnel layer frag-shader-code *************************************************\n            float f${this.mId}_fresnel = f${this.mId}_bias + f${this.mId}_scale * pow( f${this.mId}_factor + dot( normalize( vWorldViewDir ), normalize( vWorldNormal ) ), f${this.mId}_intensity );\n            float f${this.mId}_lalpha = clamp( f${this.mId}_fresnel, 0.0, 1.0 ) * f${this.mId}_alpha;\n            float f${this.mId}_calpha = f${this.mId}_lalpha / clamp( f${this.mId}_lalpha + accumAlpha, 0.001, 1.0 );\n            accumAlpha += ( 1.0 - accumAlpha ) * f${this.mId}_lalpha;\n            ${e} = spe_blend( ${e}, f${this.mId}_color, f${this.mId}_calpha, f${this.mId}_mode );\n            // *************************************************************************************\n        `}copyUniforms(e){e instanceof SpeLayerFresnel&&(this.mUniforms[`f${this.mId}_alpha`]={value:e.uniforms[`f${e.id}_alpha`].value},this.mUniforms[`f${this.mId}_mode`]={value:e.uniforms[`f${e.id}_mode`].value},this.mUniforms[`f${this.mId}_bias`]={value:e.uniforms[`f${e.id}_bias`].value},this.mUniforms[`f${this.mId}_scale`]={value:e.uniforms[`f${e.id}_scale`].value},this.mUniforms[`f${this.mId}_intensity`]={value:e.uniforms[`f${e.id}_intensity`].value},this.mUniforms[`f${this.mId}_factor`]={value:e.uniforms[`f${e.id}_factor`].value},this.mUniforms[`f${this.mId}_color`]={value:e.uniforms[`f${e.id}_color`].value.clone()})}}class SpeLayerGradient extends SpeLayer{constructor(e,t){super(e,SPE_LAYER_TYPE_GRADIENT,t)}initializeUniformsAndDefines(e){this.mDefines.SPE_USE_LAYER_GRADIENT="",this.mDefines.SPE_GRADIENT_MAX_SIZE="10",this.mDefines.USE_UV="",this.mUniforms[`f${this.mId}_alpha`]={value:void 0!==e.alpha?e.alpha.value:1},this.mUniforms[`f${this.mId}_mode`]={value:void 0!==e.mode?e.mode.value:SPE_BLENDING_NORMAL},this.mUniforms[`f${this.mId}_gl_type`]={value:void 0!==e.gl_type?e.gl_type.value:0},this.mUniforms[`f${this.mId}_num`]={value:void 0!==e.num?e.num.value:2},this.mUniforms[`f${this.mId}_smooth`]={value:void 0!==e.smooth&&e.smooth.value},this.mUniforms[`f${this.mId}_colors`]={value:function(e){const t=[];for(let i=0;i<Math.floor(e.length/4);i++)t.push(new THREE.Vector4(e[4*i+0],e[4*i+1],e[4*i+2],e[4*i+3]));return t}(void 0!==e.colors?e.colors.value:new Array(40).fill())},this.mUniforms[`f${this.mId}_steps`]={value:void 0!==e.steps?e.steps.value:new Array(10).fill()},this.mUniforms[`f${this.mId}_offset`]={value:void 0!==e.offset?(new THREE.Vector2).fromArray(e.offset.value):new THREE.Vector2(0,0)},this.mUniforms[`f${this.mId}_morph`]={value:void 0!==e.morph?(new THREE.Vector2).fromArray(e.morph.value):new THREE.Vector2(0,0)},this.mUniforms[`f${this.mId}_angle`]={value:void 0!==e.angle?e.angle.value:0}}generateUniformsCodeFrag(){return`\n            // SPE: Gradient layer uniforms ****************\n            uniform float f${this.mId}_alpha;\n            uniform int f${this.mId}_mode;\n            uniform int f${this.mId}_gl_type;\n            uniform int f${this.mId}_num;\n            uniform bool f${this.mId}_smooth;\n            uniform vec4 f${this.mId}_colors[SPE_GRADIENT_MAX_SIZE];\n            uniform float f${this.mId}_steps[SPE_GRADIENT_MAX_SIZE];\n            uniform vec2 f${this.mId}_offset;\n            uniform vec2 f${this.mId}_morph;\n            uniform float f${this.mId}_angle;\n            // *********************************************\n        `}generateShaderCodeFrag(e){return`\n            // SPE: Gradient layer frag-shader-code ************************************************\n            vec4 f${this.mId}_color = f${this.mId}_colors[0];\n            vec2 f${this.mId}_m = f${this.mId}_morph / vUv.xy;\n            vec2 f${this.mId}_rot = vec2( 0.5 + f${this.mId}_m.x, f${this.mId}_m.y );\n            vec2 f${this.mId}_dt = vec2(\n                cos( f${this.mId}_angle ) * f${this.mId}_rot.x - sin( f${this.mId}_angle ) * f${this.mId}_rot.y,\n                sin( f${this.mId}_angle ) * f${this.mId}_rot.x + cos( f${this.mId}_angle ) * f${this.mId}_rot.y\n            );\n            vec2 f${this.mId}_pt = ( vUv - 0.5 + f${this.mId}_offset ) / 2.0 + f${this.mId}_dt / 2.0;\n            float f${this.mId}_t = dot( f${this.mId}_pt, f${this.mId}_dt ) / dot( f${this.mId}_dt, f${this.mId}_dt );\n            if ( f${this.mId}_gl_type == 1 ) {\n                f${this.mId}_t = distance (\n                    ( vUv + f${this.mId}_morph ) * 3.0,\n                    ( vUv + f${this.mId}_offset ) + 1.0\n                ) + f${this.mId}_angle;\n            } else if ( f${this.mId}_gl_type == 2 ) {\n                float f${this.mId}_polar = atan(\n                    vUv.x + f${this.mId}_morph.x - 0.5 + f${this.mId}_offset.x,\n                    vUv.y + f${this.mId}_morph.y - 0.5 + f${this.mId}_offset.y\n                ) * -1.0;\n                f${this.mId}_t = fract( ( f${this.mId}_angle / PI / -2.0 ) + 0.5 * ( f${this.mId}_polar / PI ) );\n            }\n            float f${this.mId}_p;\n            for ( int i = 1; i < SPE_GRADIENT_MAX_SIZE; i++ ) {\n                if ( i < f${this.mId}_num ) {\n                    f${this.mId}_p = clamp( ( f${this.mId}_t - f${this.mId}_steps[i-1] ) / ( f${this.mId}_steps[i] - f${this.mId}_steps[i-1] ), 0.0, 1.0 );\n                    f${this.mId}_color = mix( f${this.mId}_color, f${this.mId}_colors[i],\n                        ( f${this.mId}_smooth ) ? smoothstep( 0.0, 1.0, f${this.mId}_p ) : f${this.mId}_p\n                    );\n                } else {\n                    break;\n                }\n            }\n            float f${this.mId}_lalpha = f${this.mId}_alpha * f${this.mId}_color.a;\n            float f${this.mId}_calpha =  f${this.mId}_lalpha / clamp( f${this.mId}_lalpha + accumAlpha, 0.00001, 1.0 );\n            accumAlpha += ( 1.0 - accumAlpha ) * f${this.mId}_lalpha;\n            ${e} = spe_blend( ${e}, f${this.mId}_color.xyz, f${this.mId}_calpha, f${this.mId}_mode );\n            // *************************************************************************************\n        `}getValues(){const e={type:this.type};return e.alpha=this.mUniforms[`f${this.mId}_alpha`].value,e.mode=this.mUniforms[`f${this.mId}_mode`].value,e.gl_type=this.mUniforms[`f${this.mId}_gl_type`].value,e.num=this.mUniforms[`f${this.mId}_num`].value,e.smooth=this.mUniforms[`f${this.mId}_smooth`].value,e.colors=function(e){const t=[];for(let i=0;i<e.length;i++)t.push(e[i].x,e[i].y,e[i].z,e[i].w);return t}(this.mUniforms[`f${this.mId}_colors`].value),e.steps=[].concat(this.mUniforms[`f${this.mId}_steps`].value),e.offset=this.mUniforms[`f${this.mId}_offset`].value.toArray(),e.morph=this.mUniforms[`f${this.mId}_morph`].value.toArray(),e.angle=this.mUniforms[`f${this.mId}_angle`].value,e}copyUniforms(e){e instanceof SpeLayerGradient&&(this.mUniforms[`f${this.mId}_alpha`]={value:e.uniforms[`f${e.id}_alpha`].value},this.mUniforms[`f${this.mId}_mode`]={value:e.uniforms[`f${e.id}_mode`].value},this.mUniforms[`f${this.mId}_gl_type`]={value:e.uniforms[`f${e.id}_gl_type`].value},this.mUniforms[`f${this.mId}_num`]={value:e.uniforms[`f${e.id}_num`].value},this.mUniforms[`f${this.mId}_smooth`]={value:e.uniforms[`f${e.id}_smooth`].value},this.mUniforms[`f${this.mId}_colors`]={value:function(e){const t=[];for(let i=0;i<e.length;i++)t.push(e[i].clone());return t}(e.uniforms[`f${e.id}_colors`].value)},this.mUniforms[`f${this.mId}_steps`]={value:[].concat(e.uniforms[`f${e.id}_steps`].value)},this.mUniforms[`f${this.mId}_offset`]={value:e.uniforms[`f${e.id}_offset`].value.clone()},this.mUniforms[`f${this.mId}_morph`]={value:e.uniforms[`f${e.id}_morph`].value.clone()},this.mUniforms[`f${this.mId}_angle`]={value:e.uniforms[`f${e.id}_angle`].value})}}class SpeLayerPoints extends SpeLayer{constructor(e,t){super(e,SPE_LAYER_TYPE_POINTS,t)}initializeUniformsAndDefines(e){this.mDefines.SPE_USE_LAYER_POINTS="",this.mUniforms[`f${this.mId}_alpha`]={value:void 0!==e.alpha?e.alpha.value:1},this.mUniforms[`f${this.mId}_mode`]={value:void 0!==e.mode?e.mode.value:SPE_BLENDING_NORMAL},this.mUniforms[`f${this.mId}_color`]={value:void 0!==e.color?new THREE.Color(e.color.value):new THREE.Color(12237498)},this.mUniforms[`f${this.mId}_useBack`]={value:void 0===e.useBack||e.useBack.value},this.mUniforms[`f${this.mId}_threshold`]={value:void 0!==e.threshold?e.threshold.value:.9}}generateUniformsCodeFrag(){return`\n            // SPE: Points layer uniforms **************\n            uniform float f${this.mId}_alpha;\n            uniform int f${this.mId}_mode;\n            uniform vec3 f${this.mId}_color;\n            uniform bool f${this.mId}_useBack;\n            uniform float f${this.mId}_threshold;\n            // *****************************************\n        `}generateShaderCodeFrag(e){return`\n            // SPE: Points layer frag-shader-code **************************************************\n            float f${this.mId}_dist = length( vBarycentric );\n            float f${this.mId}_edge = aastep( f${this.mId}_threshold, f${this.mId}_dist, 0.00 );\n            float f${this.mId}_factor = gl_FrontFacing ? 1.0 : ( f${this.mId}_useBack ? 0.5 : 0.0 );\n            accumAlpha += ( 1.0 - accumAlpha ) * f${this.mId}_alpha * f${this.mId}_edge;\n            ${e} = spe_blend( ${e}, f${this.mId}_factor * f${this.mId}_color, f${this.mId}_alpha * f${this.mId}_edge, f${this.mId}_mode );\n            // *************************************************************************************\n        `}}class SpeLayerLines extends SpeLayer{constructor(e,t){super(e,SPE_LAYER_TYPE_LINES,t)}initializeUniformsAndDefines(e){this.mDefines.SPE_USE_LAYER_LINES="",this.mUniforms[`f${this.mId}_alpha`]={value:void 0!==e.alpha?e.alpha.value:1},this.mUniforms[`f${this.mId}_mode`]={value:void 0!==e.mode?e.mode.value:SPE_BLENDING_NORMAL},this.mUniforms[`f${this.mId}_color`]={value:void 0!==e.color?new THREE.Color(e.color.value):new THREE.Color(12237498)},this.mUniforms[`f${this.mId}_thickness`]={value:void 0!==e.thickness?e.thickness.value:.01},this.mUniforms[`f${this.mId}_useBack`]={value:void 0===e.useBack||e.useBack.value},this.mUniforms[`f${this.mId}_smoothOffset`]={value:void 0!==e.smoothOffset?e.smoothOffset.value:.03}}generateUniformsCodeFrag(){return`\n            // SPE: Lines layer uniforms *************************\n            uniform float f${this.mId}_alpha;\n            uniform int f${this.mId}_mode;\n            uniform vec3 f${this.mId}_color;\n            uniform float f${this.mId}_thickness;\n            uniform bool f${this.mId}_useBack;\n            uniform float f${this.mId}_smoothOffset;\n            // **************************************************\n        `}generateShaderCodeFrag(e){return`\n            // SPE: Lines layer frag-shader-code ***************************************************\n            float f${this.mId}_dist = min( vBarycentric.x, min( vBarycentric.y, vBarycentric.z ) );\n            float f${this.mId}_comp_thickness = f${this.mId}_thickness;\n            float f${this.mId}_edge = 1.0 - aastep( f${this.mId}_comp_thickness, f${this.mId}_dist, f${this.mId}_smoothOffset );\n            float f${this.mId}_factor = gl_FrontFacing ? 1.0 : ( f${this.mId}_useBack ? 0.5 : 0.0 );\n            accumAlpha += ( 1.0 - accumAlpha ) * f${this.mId}_alpha * f${this.mId}_edge;\n            ${e} = spe_blend( ${e}, f${this.mId}_factor * f${this.mId}_color, f${this.mId}_alpha * f${this.mId}_edge, f${this.mId}_mode );\n            // *************************************************************************************\n        `}}if(!SPE.CreateLayerFromJSON){function preprocess_uniforms(e,t){const i={},a=`f${e}_`;for(const e in t){const s=e.slice(e.indexOf(a)+a.length),n=t[e].value;if("boolean"==typeof n)i[s]={name:s,value:n,type:SPE_LAYER_UNIFORM_TYPE_BOOL};else if("number"==typeof n)Number.isInteger(n)?i[s]={name:s,value:n,type:SPE_LAYER_UNIFORM_TYPE_INT}:i[s]={name:s,value:n,type:SPE_LAYER_UNIFORM_TYPE_FLOAT};else if("string"!=typeof n||isNaN(n))if(n instanceof Object&&2===Object.entries(n).length)void 0!==n.x&&void 0!==n.y&&(i[s]={name:s,value:[n.x,n.y],type:SPE_LAYER_UNIFORM_TYPE_VEC2});else if(n instanceof Object&&3===Object.entries(n).length)void 0!==n.x&&void 0!==n.y&&void 0!==n.z&&(i[s]={name:s,value:[n.x,n.y,n.z],type:SPE_LAYER_UNIFORM_TYPE_VEC3});else if(n instanceof Object&&4===Object.entries(n).length)void 0!==n.x&&void 0!==n.y&&void 0!==n.z&&void 0!==n.w?i[s]={name:s,value:[n.x,n.y,n.z,n.w],type:SPE_LAYER_UNIFORM_TYPE_VEC4}:void 0!==n.r&&void 0!==n.g&&void 0!==n.b&&void 0!==n.a&&(i[s]={name:s,value:[n.r,n.g,n.b,n.a],type:SPE_LAYER_UNIFORM_TYPE_COLOR});else if(n instanceof Array&&"number"==typeof n[0])Number.isInteger(n[0])?i[s]={name:s,value:[].concat(n),type:SPE_LAYER_UNIFORM_TYPE_ARRAY_INT}:i[s]={name:s,value:[].concat(n),type:SPE_LAYER_UNIFORM_TYPE_ARRAY_FLOAT};else if(n instanceof Array&&n[0]instanceof Object&&2===Object.entries(n[0]).length){if(void 0!==n[0].x&&void 0!==n[0].y){let e=[];for(let t=0;t<n.length;t++)e=e.concat([n[t].x,n[t].y]);i[s]={name:s,value:e,type:SPE_LAYER_UNIFORM_TYPE_ARRAY_VEC2}}}else if(n instanceof Array&&n[0]instanceof Object&&3===Object.entries(n[0]).length){if(void 0!==n[0].x&&void 0!==n[0].y&&void 0!==n[0].z){let e=[];for(let t=0;t<n.length;t++)e=e.concat([n[t].x,n[t].y,n[t].z]);i[s]={name:s,value:e,type:SPE_LAYER_UNIFORM_TYPE_ARRAY_VEC3}}}else if(n instanceof Array&&n[0]instanceof Object&&4===Object.entries(n[0]).length){if(void 0!==n[0].x&&void 0!==n[0].y&&void 0!==n[0].z&&void 0!==n[0].w){let e=[];for(let t=0;t<n.length;t++)e=e.concat([n[t].x,n[t].y,n[t].z,n[t].w]);i[s]={name:s,value:e,type:SPE_LAYER_UNIFORM_TYPE_ARRAY_VEC4}}}else if(n instanceof Array&&n[0]instanceof THREE.Color){if(void 0!==n[0].x&&void 0!==n[0].y&&void 0!==n[0].z&&void 0!==n[0].w){let e=[];for(let t=0;t<n.length;t++)e=e.concat([n[t].r,n[t].g,n[t].b,n[t].a]);i[s]={name:s,value:e,type:SPE_LAYER_UNIFORM_TYPE_ARRAY_COLOR}}}else n instanceof Object&&1===Object.entries(n).length?void 0!==n.elements&&n.elements instanceof Array&&(9===n.elements.length?i[s]={name:s,value:[].concat(n.elements),type:SPE_LAYER_UNIFORM_TYPE_MAT3}:16===n.elements.length?i[s]={name:s,value:[].concat(n.elements),type:SPE_LAYER_UNIFORM_TYPE_MAT4}:console.error("SpeLayer::preprocess_uniforms >>> unsupported matrix-type of uniform: ",n.elements)):"string"==typeof n?i[s]={name:s,value:SPE.CachedTextures[n],type:SPE_LAYER_UNIFORM_TYPE_SAMPLER_2D}:console.error("SpeLayer::preprocess_uniforms >>> unsupported uniform-value: ",n);else{const e=Number(n);Number.isInteger(e)?i[s]={name:s,value:e,type:SPE_LAYER_UNIFORM_TYPE_INT}:i[s]={name:s,value:e,type:SPE_LAYER_UNIFORM_TYPE_FLOAT}}}return i}SPE.CreateLayerFromJSON=function(e,t){const i=e.id,a=e.type,s=preprocess_uniforms(e.id,e.uniforms);return SpeLayer.CreateLayer(i,a,s)}}class SpeLayersList{constructor(e){if(this.mHead=null,this.mShader=null,void 0!==e&&Object.keys(e).length>0)for(let t=0;t<e.length;t++)this.addLayer(t,e[t].type,e[t].uniforms);else this.addLayer(0,SPE_LAYER_TYPE_COLOR,{}),this.addLayer(1,SPE_LAYER_TYPE_LIGHTING,{})}get head(){return this.mHead}set head(e){this.mHead=e}get shader(){return this.mShader}set shader(e){this.mShader=e}addLayer(e,t,i){const a=SpeLayer.CreateLayer(e,t,i);if(null!==a){if(null===this.mHead)this.mHead=a;else{let e=this.mHead;for(;e.next;)e=e.next;e.next=a}return a}console.error("SpeLayersList::addLayer >>> couldnt create a layer of type: ",t)}addLayerBeforeAt(e,t){const i=void 0!==e.id?e.id:100+Math.floor(999*Math.random()),a=void 0!==e.type?e.type:SPE_LAYER_TYPE_COLOR,s="texture"!==a?SpeLayer.DictToUniforms(e):SpeLayerTexture.DictToUniforms(e),n=SpeLayer.CreateLayer(i,a,s);let r=this.head;if(n.next=t,r===t)this.head=n;else{for(;r.next!==t;)r=r.next;r.next=n}return n}removeLayer(e){let t=this.head,i=void 0,a=0;if(t.id==e)this.head=t.next;else for(a=1,i=t,t=t.next;null!=t;){if(t.id==e){i.next=t.next;break}a++,i=t,t=t.next}return a}getLayer(e){let t=this.head;for(;t&&t.id!=e;)t=t.next;return t}updateLayerUniform(e,t){const i=this.getLayer(e);i&&(void 0!==i.uniforms[t]?this.mShader.uniforms[t]={value:i.uniforms[t].value}:console.error(`SpeLayersList::updateLayerUniform >>> uniform ${t} not found in layer`))}updateLayerUniformByLayer(e,t){void 0!==e.uniforms[t]?this.mShader.uniforms[t]={value:e.uniforms[t].value}:console.error(`SpeLayersList::updateLayerUniformByLayer >>> uniform ${t} not found in layer`)}getUniforms(){const e={};let t=this.mHead;for(;t;){for(let[i,a]of Object.entries(t.uniforms))e[i]=a;t=t.next}return e}getDefinesCode(){let e="",t=this.mHead;for(;t;){for(let[i,a]of Object.entries(t.defines))e+=`#define ${i} ${a}\n`;t=t.next}return e}getVertUniformsCode(){let e="",t=this.mHead;for(;t;)e+=t.generateUniformsCodeVert(),t=t.next;return e}getFragUniformsCode(){let e="",t=this.mHead;for(;t;)e+=t.generateUniformsCodeFrag(),t=t.next;return e}getFragShaderCodePreLighting(){let e="",t=this.mHead;for(;t.type!==SPE_LAYER_TYPE_LIGHTING;)e+=t.generateShaderCodeFrag("bef"),t=t.next;return e}getFragShaderCodeLighting(){let e=this.mHead;for(;e.type!==SPE_LAYER_TYPE_LIGHTING;)e=e.next;return e.generateShaderCodeFrag()}getFragShaderCodePostLighting(){let e="",t=this.mHead;for(;t.type!==SPE_LAYER_TYPE_LIGHTING;)t=t.next;for(t=t.next;t;)e+=t.generateShaderCodeFrag("aft"),t=t.next;return e}}class SpeBasicMaterial extends THREE.MeshPhongMaterial{constructor(e,t){super(t),this.mLayersList=null,Object.keys(e).length>0&&(this.mLayersList=new SpeLayersList(e),this.onBeforeCompile=SpeShaderLib.GetSetupCallback(this))}get layersList(){return this.mLayersList}}class SpeLambertMaterial extends THREE.MeshLambertMaterial{constructor(e,t){super(t),this.mLayersList=null,Object.keys(e).length>0&&(this.mLayersList=new SpeLayersList(e),this.onBeforeCompile=SpeShaderLib.GetSetupCallback(this))}get layersList(){return this.mLayersList}}class SpePhongMaterial extends THREE.MeshPhongMaterial{constructor(e,t){super(t),this.mLayersList=null,Object.keys(e).length>0&&(this.mLayersList=new SpeLayersList(e),this.onBeforeCompile=SpeShaderLib.GetSetupCallback(this))}get layersList(){return this.mLayersList}}class SpePhysicalMaterial extends THREE.MeshPhysicalMaterial{constructor(e,t){void 0===t.roughness&&(t.roughness=.3),super(t),this.mLayersList=null,Object.keys(e).length>0&&(this.mLayersList=new SpeLayersList(e),this.onBeforeCompile=SpeShaderLib.GetSetupCallback(this))}get layersList(){return this.mLayersList}}class SpeToonMaterial extends THREE.MeshToonMaterial{constructor(e,t){super(t),this.mLayersList=null,Object.keys(e).length>0&&(this.mLayersList=new SpeLayersList(e),this.onBeforeCompile=SpeShaderLib.GetSetupCallback(this))}get layersList(){return this.mLayersList}}var SpeFontsCache={},SpeCharsCache={};const SPE_PATH_FONTS="assets/fonts/",SPE_DEFAULT_TEXT_FONT="roboto_regular",SPE_DEFAULT_TEXT_CHARACTER=".",SPE_DEFAULT_TEXT_LOD=16;function SpeLoadFont(e){return new Promise((function(t,i){if(SpeFontsCache[e])t(SpeFontsCache[e]);else{const i=new THREE.FontLoader,a=SPE_PATH_FONTS+e+".json";i.load(a,(function(i){SpeFontsCache[e]=i,t(i)}))}}))}function SpeLoadCharData(e,t,i){if(SpeCharsCache[e]){if(SpeCharsCache[e][i]&&SpeCharsCache[e][i].fontFamily===t)return SpeCharsCache[e][i]}else SpeCharsCache[e]={};const a=void 0!==SpeFontsCache[t]?SpeFontsCache[t]:SpeFontsCache[SPE_DEFAULT_TEXT_FONT],s=a.generateShapes(e,1);return SpeCharsCache[e][i]={geometry:new THREE.ShapeBufferGeometry(s,i),fontFamily:t,resolution:a.data.resolution,glyphsHa:a.data.glyphs[e].ha},SpeCharsCache[e][i]}class SpeTextChar3D extends SpeIMesh{constructor(e,t){const i=void 0!==e.char?e.char:SPE_DEFAULT_TEXT_CHARACTER,a=void 0!==e.fontFamily?e.fontFamily:SPE_DEFAULT_TEXT_FONT,s=void 0!==e.lod?e.lod:SPE_DEFAULT_TEXT_LOD,n=SpeLoadCharData(i,a,s);super(n.geometry,t),this.mChar=i,this.mFontFamily=a,this.mLod=s,this.mFontSize=void 0!==e.fontSize?e.fontSize:16,this.mLetterSpacing=void 0!==e.letterSpacing?e.letterSpacing:1,this.mResolution=n.resolution,this.mGlyphsHa=n.glyphsHa,this.mLocalPosition=new THREE.Vector2,this.mCharSize=this.mGlyphsHa*(this.mFontSize/this.mResolution)*this.mLetterSpacing,this.updateFontSize(this.mFontSize)}updateFontSize(e){this.mFontSize=e,this.mCharSize=this.mGlyphsHa*(this.mFontSize/this.mResolution)*this.mLetterSpacing,this.scale.set(this.mFontSize,this.mFontSize,1)}}class SpeTextContainer extends SpeIMesh{constructor(e,t){t.visible=!1,super(e,t)}}class SpeLoaderManager{constructor(e){this.mAssets=e||{},this.mOnFinishCallback=null,this.mNumAssetsToLoad=0,this.mNumAssetsLoaded=0}run(e){this.mOnFinishCallback=e;const t=void 0!==this.mAssets.fonts?this.mAssets.fonts:[],i=void 0!==this.mAssets.images?this.mAssets.images:[],a=void 0!==this.mAssets.models?this.mAssets.models:[],s=void 0!==this.mAssets.animations?this.mAssets.animations:[];if(this.mNumAssetsLoaded=0,this.mNumAssetsToLoad=t.length+i.length+a.length+s.length,this.mNumAssetsToLoad<1)this.mOnFinishCallback();else{const e=this;for(let i=0;i<t.length;i++){const a=new THREE.FontLoader,s=t[i],n=SPE_PATH_FONTS+s+".json";a.load(n,(function(t){SpeFontsCache[s]=t,e.mNumAssetsLoaded++,e.mNumAssetsLoaded===e.mNumAssetsToLoad&&e.mOnFinishCallback()}))}}}}class SpeRuntime{constructor(e,t,i={}){this.mGltfScene=e,this.mConfig=i,this.mViewportMode=SPE_RUNTIME_VIEWMODE_FULLSCREEN,this.mViewportWidth=window.innerWidth,this.mViewportHeight=window.innerHeight;const a=document.getElementById("canvas3d");this.mRenderer=new THREE.WebGLRenderer({antialias:!0,alpha:!0,canvas:a}),this.mRenderer.setPixelRatio(window.devicePixelRatio),this.mRenderer.setSize(this.mViewportWidth,this.mViewportHeight),this.mRenderer.shadowMap.enabled=!0,this.mRenderer.shadowMap.type=THREE.PCFSoftShadowMap,this.mScene=new SpeScene,this.mSceneOptions={},this.mMainCamera=null,this.mOrbitControls=null,this.mPlayHandler=null,this.mRunning=!1,this.mLoaderManager=new SpeLoaderManager(t),this.mLoaderManager.run(this.onRuntimeAssetsLoaded.bind(this))}run(){requestAnimationFrame(this.run.bind(this)),this.onRender()}onRuntimeAssetsLoaded(){console.info("SpeRuntime >>> Finished loading assets for the spline-runtime"),this.loadFromGltf(this.mGltfScene),window.addEventListener("resize",this.onResize.bind(this)),this.mRunning=!0,this.onResize()}onRender(){this.mRunning&&(SPE_USES_PREVIEW_IMAGE&&(document.querySelector(".spline-preview-image-container").style.display="none",SPE_USES_PREVIEW_IMAGE=!1),this.mPlayHandler&&!this.mPlayHandler.isEnable&&this.mPlayHandler.activate(),this.mOrbitControls&&this.mOrbitControls.update(),this.mScene&&this.mMainCamera&&this.mRenderer.render(this.mScene,this.mMainCamera))}onResize(){this.mRunning&&(this.mViewportMode!==SPE_RUNTIME_VIEWMODE_FULLSCREEN&&this.mViewportMode!==SPE_RUNTIME_VIEWMODE_FULL_WIDTH||(this.mViewportWidth=window.innerWidth),this.mViewportMode!==SPE_RUNTIME_VIEWMODE_FULLSCREEN&&this.mViewportMode!==SPE_RUNTIME_VIEWMODE_FULL_HEIGHT||(this.mViewportHeight=window.innerHeight),this.mMainCamera&&("PerspectiveCamera"===this.mMainCamera.type?this.mMainCamera.aspect=this.mViewportWidth/this.mViewportHeight:"OrthographicCamera"===this.mMainCamera.type&&(this.mMainCamera.left=-this.mViewportWidth/2,this.mMainCamera.right=this.mViewportWidth/2,this.mMainCamera.top=this.mViewportHeight/2,this.mMainCamera.bottom=-this.mViewportHeight/2),this.mMainCamera.updateProjectionMatrix()),this.mRenderer&&this.mRenderer.setSize(this.mViewportWidth,this.mViewportHeight))}loadFromGltf(e){const t=new SpeGltfDecoder(e),[i,a,s]=t.decode();this.mScene=i,this.mMainCamera=a,this.mSceneOptions=s;const n=void 0!==this.mSceneOptions.bgColor?(new THREE.Color).fromArray(this.mSceneOptions.bgColor):new THREE.Color(1644825);this.mScene.background=n,this.mViewportMode=this.mSceneOptions.viewMode,this.mViewportWidth=this.mSceneOptions.viewWidth,this.mViewportHeight=this.mSceneOptions.viewHeight,this.mSceneOptions.useOrbitControls&&(this.mOrbitControls=new THREE.OrbitControls(this.mMainCamera,this.mRenderer.domElement),this.mOrbitControls.target.fromArray(this.mSceneOptions.orbitTarget),this.mOrbitControls.enableRotate=this.mSceneOptions.cameraRotate,this.mOrbitControls.enablePan=this.mSceneOptions.cameraPan,this.mOrbitControls.enableZoom=this.mSceneOptions.cameraZoom,this.mOrbitControls.enableDamping=this.mSceneOptions.orbitDamped,this.mSceneOptions.orbitDamped,this.mOrbitControls.rotateSpeed=1,this.mOrbitControls.panSpeed=1);"function"==typeof Interaction&&(this.mPlayHandler=new PlayMode(this.mRenderer.domElement,this.mScene,this.mMainCamera))}}class SpeScene extends THREE.Scene{constructor(){super()}traverseEntity(e){function t(i){if(i instanceof SpeMesh3D||i instanceof SpeMesh2D||i instanceof SpeTextContainer||i instanceof THREE.Group){e(i);for(let e=0;e<i.children.length;e++)t(i.children[e])}}for(let e=0;e<this.children.length;e++)t(this.children[e])}}class SpeShaderLib{static SetupShader(e,t){e.fragmentShader="\n            /* SPE-Blending helper functions */\n            #define SPE_BLENDING_NORMAL 0\n            #define SPE_BLENDING_MULTIPLY 1\n            #define SPE_BLENDING_SCREEN 2\n            #define SPE_BLENDING_OVERLAY 3\n            vec3 spe_normalBlend( vec3 a, vec3 b, float alpha ) {\n                return mix( a, b, alpha );\n            }\n            vec3 spe_multiplyBlend( vec3 a, vec3 b, float alpha ) {\n                return mix( a, a * b, alpha );\n            }\n            vec3 spe_screenBlend( vec3 a, vec3 b, float alpha ) {\n                vec3 tmp = 1.0 - ( 1.0 - a ) * ( 1.0 - b );\n                return mix( a, tmp, alpha );\n            }\n            vec3 spe_overlayBlend( vec3 a, vec3 b, float alpha ) {\n                vec3 tmp = mix( 1. - 2. * (1. - a) * (1. - b), 2. * a * b, step( a, vec3(.5) ) );\n                return clamp( mix( a, tmp, alpha ), 0.0, 1.0 );\n            }\n            vec3 spe_blend( vec3 a, vec3 b, float alpha, int mode ) {\n                /**/ if ( mode == SPE_BLENDING_NORMAL ) return spe_normalBlend( a, b, alpha );\n                else if ( mode == SPE_BLENDING_MULTIPLY ) return spe_multiplyBlend( a, b, alpha );\n                else if ( mode == SPE_BLENDING_SCREEN ) return spe_screenBlend( a, b, alpha );\n                else if ( mode == SPE_BLENDING_OVERLAY ) return spe_overlayBlend( a, b, alpha );\n                return vec3( 1.0 );\n            }\n            "+e.fragmentShader,e.vertexShader="\n            #ifdef SPE_USE_LAYER_FRESNEL\n                varying vec3 vWorldViewDir;\n                varying vec3 vWorldNormal;\n            #endif /* SPE_USE_LAYER_FRESNEL */\n            "+e.vertexShader,e.fragmentShader="\n            #ifdef SPE_USE_LAYER_FRESNEL\n                varying vec3 vWorldViewDir;\n                varying vec3 vWorldNormal;\n            #endif /* SPE_USE_LAYER_FRESNEL */\n            "+e.fragmentShader,e.vertexShader=e.vertexShader.replace("#include <project_vertex>","\n            #include <project_vertex>\n            #ifdef SPE_USE_LAYER_FRESNEL\n                vec4 fWorldPosition = modelMatrix * vec4( position, 1.0 );\n                vWorldViewDir = isPerspectiveMatrix( projectionMatrix ) ? \n                                    ( fWorldPosition.xyz - cameraPosition ) : vec3( -viewMatrix[0][2], -viewMatrix[1][2], -viewMatrix[2][2] );\n                vWorldNormal = normalize( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\n            #endif /* SPE_USE_LAYER_FRESNEL */\n            "),e.vertexShader="\n            #if defined( SPE_USE_LAYER_POINTS ) || defined( SPE_USE_LAYER_LINES )\n                attribute vec3 barycentric;\n                varying vec3 vBarycentric;\n            #endif /* SPE_USE_LAYER_POINTS || SPE_USE_LAYER_LINES */\n        "+e.vertexShader,e.vertexShader=e.vertexShader.replace("#include <begin_vertex>","\n            #include <begin_vertex>\n            #if defined( SPE_USE_LAYER_POINTS ) || defined( SPE_USE_LAYER_LINES )\n                vBarycentric = barycentric;\n            #endif /* SPE_USE_LAYER_POINTS || SPE_USE_LAYER_LINES */\n            "),e.fragmentShader="\n            #if defined( SPE_USE_LAYER_POINTS ) || defined( SPE_USE_LAYER_LINES )\n                varying vec3 vBarycentric;\n                float aastep( float threshold, float dist, float smoothOffset ) {\n                    float afwidth = fwidth( dist ) * 0.5;\n                    return smoothstep( threshold - afwidth - smoothOffset, threshold + afwidth + smoothOffset, dist );\n                }\n            #endif /* SPE_USE_LAYER_POINTS || SPE_USE_LAYER_LINES */\n        "+e.fragmentShader,e.fragmentShader="\n            #ifdef SPE_USE_LAYER_NOISE\n                float random ( in vec2 _st ) {\n                    return sin(sin(dot(_st.xy, vec2(12.834,77.212))) * 320.3456); // Ale: I am usin sin() instead of fract() to create a different noise.\n                }\n                float noise ( in vec2 _st ) {\n                    vec2 i = floor(_st);\n                    vec2 f = fract(_st);\n                    // Four corners in 2D of a tile\n                    float a = random(i);\n                    float b = random(i + vec2(1.0, 0.0)); // Ale: By incrementing disproportionally these values. You get a geometrical distortion.\n                    float c = random(i + vec2(0.0, 1.0));\n                    float d = random(i + vec2(1.0, 1.0));\n                    vec2 u = f * f * (3.0 - 2.0 * f);\n                    return mix(a, b, u.x) + (c - a)* u.y * (1.0 - u.x) + (d - b) * u.x * u.y;\n                }\n                float fbm ( in vec2 _st ) {\n                    float v = 0.0;\n                    float a = 0.5;\n                    vec2 shift = vec2(100.0);\n                    // Rotate to reduce axial bias\n                    mat2 rot = mat2(cos(0.5), sin(0.5),\n                                    -sin(0.5), cos(0.50));\n                    for (int i = 0; i < SPE_NOISE_NUM_OCTAVES; ++i) {\n                        v += a * noise(_st);\n                        _st = rot * _st * 2.0 + shift;\n                        a *= 0.5;\n                    }\n                    return v;\n                }\n            #endif /* SPE_USE_LAYER_NOISE */\n            "+e.fragmentShader,e.fragmentShader=e.fragmentShader.replace("#include <normal_fragment_begin>",""),e.fragmentShader=e.fragmentShader.replace("#include <normal_fragment_maps>",""),t instanceof SpeBasicMaterial&&(e.fragmentShader=e.fragmentShader.replace("#include <lights_phong_fragment>\n                #include <lights_fragment_begin>\n                #include <lights_fragment_maps>\n                #include <lights_fragment_end>",""),e.fragmentShader=e.fragmentShader.replace("vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;","vec3 outgoingLight = diffuseColor.rgb;")),t instanceof SpeLambertMaterial&&(e.vertexShader="\n                #ifdef SPE_USE_LAYER_NORMAL\n                    varying vec3 vNormal;\n                #endif /* SPE_USE_LAYER_NORMAL */\n                "+e.vertexShader,e.vertexShader=e.vertexShader.replace("#include <defaultnormal_vertex>","\n                #include <defaultnormal_vertex>\n                #ifdef SPE_USE_LAYER_NORMAL\n                    vNormal = normalize( transformedNormal );\n                #endif /* SPE_USE_LAYER_NORMAL */\n                "),e.fragmentShader="\n                #ifdef SPE_USE_LAYER_NORMAL\n                    varying vec3 vNormal;\n                #endif /* SPE_USE_LAYER_NORMAL */\n                "+e.fragmentShader,e.fragmentShader=e.fragmentShader.replace("vec4 diffuseColor = vec4( diffuse, opacity );","\n                #ifdef SPE_USE_LAYER_NORMAL\n                    #include <normal_fragment_begin>\n                    #include <normal_fragment_maps>\n                #endif /* SPE_USE_LAYER_NORMAL */\n                    float accumAlpha = 0.0;\n                    vec3 bef = vec3( 1.0 );\n                    #before\n                    vec4 diffuseColor = vec4( bef, 1.0 );\n                ")),e.vertexShader=e.vertexShader.replace("#include <common>","\n            #include <common>\n            #ifdef SPE_USE_LAYER_DEPTH\n                varying vec4 dWorldPosition;\n            #endif /* SPE_USE_LAYER_DEPTH */\n            "),e.vertexShader=e.vertexShader.replace("#include <worldpos_vertex>","\n            #include <worldpos_vertex>\n            #ifdef SPE_USE_LAYER_DEPTH\n                dWorldPosition = modelMatrix * vec4( transformed, 1.0 );\n            #endif\n            "),e.fragmentShader="\n            #ifdef SPE_USE_LAYER_DEPTH\n                varying vec4 dWorldPosition;\n            #endif /* SPE_USE_LAYER_DEPTH */\n            "+e.fragmentShader,e.fragmentShader=e.fragmentShader.replace("vec4 diffuseColor = vec4( diffuse, opacity );","\n                #include <normal_fragment_begin>\n                #include <normal_fragment_maps>\n                float accumAlpha = 0.0;\n                vec3 bef = vec3( 1.0 );\n                #before\n                vec4 diffuseColor = vec4( bef, 1.0 );\n            "),e.fragmentShader=e.fragmentShader.replace("gl_FragColor = vec4( outgoingLight, diffuseColor.a );","\n                #lighting\n                vec3 aft = outgoingLight;\n                #after\n                gl_FragColor = vec4( aft, accumAlpha * opacity );\n            ")}static GetSetupCallback(material){let string="";for(let e=0;e<material.uuid.length;++e){const t=material.uuid[e];"-"!=t&&(string+=t)}return eval(`shader => {\n            // Hashing required as in issue https://github.com/mrdoob/three.js/issues/13192\n            const __hash___${string} = true;\n            const layersList = material.layersList;\n            // Inject base functionality into both vertex and fragment shaders\n            SpeShaderLib.SetupShader( shader, material );\n            shader.uniforms = THREE.UniformsUtils.merge( [ shader.uniforms, layersList.getUniforms() ] );\n            for ( let [key, uniform] of Object.entries( shader.uniforms ) ) {\n                if ( uniform.value && uniform.value.isTexture ) {\n                    uniform.value.needsUpdate = true;\n                }\n            }\n            // Inject shader-code in fragment shader previous to the lighting step\n            shader.fragmentShader = shader.fragmentShader.replace( '#before', layersList.getFragShaderCodePreLighting() );\n            // Inject shader-code in fragment shader for the lighting step\n            shader.fragmentShader = shader.fragmentShader.replace( '#lighting', layersList.getFragShaderCodeLighting() );\n            // Inject shader-code in fragment shader after the lighting step\n            shader.fragmentShader = shader.fragmentShader.replace( '#after', layersList.getFragShaderCodePostLighting() );\n            // Inject uniforms variables in both vertex and fragment shaders\n            shader.vertexShader = layersList.getVertUniformsCode() + shader.vertexShader;\n            shader.fragmentShader = layersList.getFragUniformsCode() + shader.fragmentShader;\n            // Inject defines in both vertex and fragment shaders\n            shader.vertexShader = layersList.getDefinesCode() + shader.vertexShader;\n            shader.fragmentShader = layersList.getDefinesCode() + shader.fragmentShader;\n            // Link the shader to its related layers-list\n            layersList.shader = shader;\n        }`)}}class SpeStack{constructor(){this.elements=[]}push(e){this.elements.push(e)}pop(){return 0===this.elements.length?null:this.elements.pop()}top(){return this.elements[this.elements.length-1]}empty(){return 0===this.elements.length}}class SpeQueue{constructor(){this.elements=[]}push(e){this.elements.push(e)}pop(){return 0===this.elements.length?null:this.elements.shift()}front(){return this.elements[0]}empty(){return 0===this.elements.length}}function Interaction(e){this.uuid=THREE.MathUtils.generateUUID(),this.object=e,this.states=[],this.events=[],this.oldTargets=[],this.selectedState,this.animation,this.currentState,this.prevState,this.statesManager=new InteractionStatesManager(this)}function IsValidURL(e){return-1===e.indexOf("https")?(console.warn("Tried opening an url without https protocol"),!1):!!new RegExp("^(https?:\\/\\/)?((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|((\\d{1,3}\\.){3}\\d{1,3}))(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*(\\?[;&a-z\\d%_.~+=-]*)?(\\#[-a-z\\d_]*)?$","i").test(e)}function InteractionEvent(e,t){this.targets=[],this._type=e,this.key=t,this.ui={isCollapsed:!1}}function InteractionState(){this.uuid=THREE.MathUtils.generateUUID(),this.oldTargets=[],this.name,this.position=new THREE.Vector3,this.rotation=new THREE.Euler,this.scale=new THREE.Vector3,this.hiddenMatrix=new THREE.Matrix4}function InteractionTarget(){this._object,this.state,this.easing=InteractionTarget.EASING.EASE_IN_OUT,this.duration=1e3,this.delay=0,this.cubicControls=[.5,.05,.1,.3],this.springParameters={mass:1,stiffness:80,damping:10,velocity:0},this.repeat=!1,this.cycle=!1,this.rewind=!1,this.url=""}function InteractionStatesManager(e){this.i=e}function PlayMode(e,t,i){const a=new SPE.Raycaster;this.isEnable;let s,n=new WeakMap,r={};function o(e){a.setFromCamera(f(e),i);const t=r[InteractionEvent.TYPE.MOUSE_DOWN];for(let e=0,i=t.length;e<i;++e)if(a.intersectObject(t[e].object,!1).length>0){t[e].interactionEvent.dispatch();break}}function h(e){a.setFromCamera(f(e),i);const t=r[InteractionEvent.TYPE.MOUSE_UP];for(let e=0,i=t.length;e<i;++e)if(a.intersectObject(t[e].object,!1).length>0){t[e].interactionEvent.dispatch();break}}function l(e){a.setFromCamera(f(e),i);const t=r[InteractionEvent.TYPE.MOUSE_HOVER].find((e=>a.intersectObject(e.object,!1).length>0)),n=void 0!==t?t.interactionEvent:void 0;s!==n&&(void 0!==s&&s.dispatchReverse(),void 0!==t&&n.dispatch()),s=n}function m(e){const t=-1*(e.pageX-window.innerWidth/2),i=1*(e.pageY-window.innerHeight/2);r[InteractionEvent.TYPE.LOOK_AT].forEach((e=>{e.object.interaction.lookAt(t,i)}))}function c(e){r[InteractionEvent.TYPE.KEY_DOWN].forEach((t=>{t.interactionEvent.key===e.key&&t.interactionEvent.dispatch()}))}function d(e){r[InteractionEvent.TYPE.KEY_UP].forEach((t=>{t.interactionEvent.key===e.key&&t.interactionEvent.dispatch()}))}function f(t){var i=e.getBoundingClientRect();return{x:(t.clientX-i.left)/i.width*2-1,y:-(t.clientY-i.top)/i.height*2+1}}this.activate=function(){this.isEnable=!0;for(const e in InteractionEvent.TYPE)r[InteractionEvent.TYPE[e]]=[];t.traverseEntity((function(e){if(void 0!==e.enableHelper&&(n.set(e,e.enableHelper),e.enableHelper=!1),void 0!==e.interaction){e.interaction.start();const t=e.interaction.events;for(let i=0,a=t.length;i<a;++i)r[t[i].type].push({interactionEvent:t[i],object:e})}})),r[InteractionEvent.TYPE.MOUSE_DOWN].length>0&&e.addEventListener("pointerdown",o,!1),r[InteractionEvent.TYPE.MOUSE_UP].length>0&&e.addEventListener("pointerup",h,!1),r[InteractionEvent.TYPE.MOUSE_HOVER].length>0&&e.addEventListener("pointermove",l,!1),r[InteractionEvent.TYPE.LOOK_AT].length>0&&e.addEventListener("mousemove",m,!1),r[InteractionEvent.TYPE.KEY_DOWN].length>0&&document.addEventListener("keydown",c,!1),r[InteractionEvent.TYPE.KEY_UP].length>0&&document.addEventListener("keyup",d,!1)},this.deactivate=function(){t.traverseEntity((function(e){void 0!==e.enableHelper&&(e.enableHelper=n.get(e)),void 0!==e.interaction&&e.interaction.end()})),r[InteractionEvent.TYPE.MOUSE_DOWN].length>0&&e.removeEventListener("pointerdown",o),r[InteractionEvent.TYPE.MOUSE_UP].length>0&&e.removeEventListener("pointerup",h),r[InteractionEvent.TYPE.MOUSE_HOVER].length>0&&e.removeEventListener("pointermove",l),r[InteractionEvent.TYPE.LOOK_AT].length>0&&e.removeEventListener("pointermove",m,!1),r[InteractionEvent.TYPE.KEY_DOWN].length>0&&document.removeEventListener("keydown",c),r[InteractionEvent.TYPE.KEY_UP].length>0&&document.removeEventListener("keyup",d),r={},this.isEnable=!1},this.reset=function(){t.traverseEntity((function(e){e.interaction.start()}))}}THREE.OrbitControls=function(e,t){var i,a,s,n,r,o;void 0===t&&console.warn('THREE.OrbitControls: The second parameter "domElement" is now mandatory.'),t===document&&console.error('THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),this.object=e,this.domElement=t,this.enabled=!0,this.target=new THREE.Vector3,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.enableKeys=!0,this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},this.mouseButtons={LEFT:THREE.MOUSE.ROTATE,MIDDLE:THREE.MOUSE.DOLLY,RIGHT:THREE.MOUSE.PAN},this.touches={ONE:THREE.TOUCH.ROTATE,TWO:THREE.TOUCH.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=function(){return p.phi},this.getAzimuthalAngle=function(){return p.theta},this.saveState=function(){h.target0.copy(h.target),h.position0.copy(h.object.position),h.zoom0=h.object.zoom},this.reset=function(){h.target.copy(h.target0),h.object.position.copy(h.position0),h.object.zoom=h.zoom0,h.object.updateProjectionMatrix(),h.dispatchEvent(l),h.update(),f=d.NONE},this.update=(i=new THREE.Vector3,a=(new THREE.Quaternion).setFromUnitVectors(e.up,new THREE.Vector3(0,1,0)),s=a.clone().inverse(),n=new THREE.Vector3,r=new THREE.Quaternion,o=2*Math.PI,function(){var e=h.object.position;i.copy(e).sub(h.target),i.applyQuaternion(a),p.setFromVector3(i),h.autoRotate&&f===d.NONE&&M(2*Math.PI/60/60*h.autoRotateSpeed),h.enableDamping?(p.theta+=E.theta*h.dampingFactor,p.phi+=E.phi*h.dampingFactor):(p.theta+=E.theta,p.phi+=E.phi);var t=h.minAzimuthAngle,m=h.maxAzimuthAngle;return isFinite(t)&&isFinite(m)&&(t<-Math.PI?t+=o:t>Math.PI&&(t-=o),m<-Math.PI?m+=o:m>Math.PI&&(m-=o),p.theta=t<m?Math.max(t,Math.min(m,p.theta)):p.theta>(t+m)/2?Math.max(t,p.theta):Math.min(m,p.theta)),p.phi=Math.max(h.minPolarAngle,Math.min(h.maxPolarAngle,p.phi)),p.makeSafe(),p.radius*=_,p.radius=Math.max(h.minDistance,Math.min(h.maxDistance,p.radius)),!0===h.enableDamping?h.target.addScaledVector(y,h.dampingFactor):h.target.add(y),i.setFromSpherical(p),i.applyQuaternion(s),e.copy(h.target).add(i),h.object.lookAt(h.target),!0===h.enableDamping?(E.theta*=1-h.dampingFactor,E.phi*=1-h.dampingFactor,y.multiplyScalar(1-h.dampingFactor)):(E.set(0,0,0),y.set(0,0,0)),_=1,!!(g||n.distanceToSquared(h.object.position)>u||8*(1-r.dot(h.object.quaternion))>u)&&(h.dispatchEvent(l),n.copy(h.object.position),r.copy(h.object.quaternion),g=!1,!0)}),this.dispose=function(){h.domElement.removeEventListener("contextmenu",ee,!1),h.domElement.removeEventListener("pointerdown",k,!1),h.domElement.removeEventListener("wheel",q,!1),h.domElement.removeEventListener("touchstart",Z,!1),h.domElement.removeEventListener("touchend",J,!1),h.domElement.removeEventListener("touchmove",Q,!1),h.domElement.ownerDocument.removeEventListener("pointermove",W,!1),h.domElement.ownerDocument.removeEventListener("pointerup",X,!1),h.domElement.removeEventListener("keydown",K,!1)};var h=this,l={type:"change"},m={type:"start"},c={type:"end"},d={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},f=d.NONE,u=1e-6,p=new THREE.Spherical,E=new THREE.Spherical,_=1,y=new THREE.Vector3,g=!1,v=new THREE.Vector2,S=new THREE.Vector2,I=new THREE.Vector2,L=new THREE.Vector2,T=new THREE.Vector2,R=new THREE.Vector2,b=new THREE.Vector2,w=new THREE.Vector2,P=new THREE.Vector2;function A(){return Math.pow(.95,h.zoomSpeed)}function M(e){E.theta-=e}function x(e){E.phi-=e}var $,O=($=new THREE.Vector3,function(e,t){$.setFromMatrixColumn(t,0),$.multiplyScalar(-e),y.add($)}),U=function(){var e=new THREE.Vector3;return function(t,i){!0===h.screenSpacePanning?e.setFromMatrixColumn(i,1):(e.setFromMatrixColumn(i,0),e.crossVectors(h.object.up,e)),e.multiplyScalar(t),y.add(e)}}(),N=function(){var e=new THREE.Vector3;return function(t,i){var a=h.domElement;if(h.object.isPerspectiveCamera){var s=h.object.position;e.copy(s).sub(h.target);var n=e.length();n*=Math.tan(h.object.fov/2*Math.PI/180),O(2*t*n/a.clientHeight,h.object.matrix),U(2*i*n/a.clientHeight,h.object.matrix)}else h.object.isOrthographicCamera?(O(t*(h.object.right-h.object.left)/h.object.zoom/a.clientWidth,h.object.matrix),U(i*(h.object.top-h.object.bottom)/h.object.zoom/a.clientHeight,h.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),h.enablePan=!1)}}();function C(e){h.object.isPerspectiveCamera?_/=e:h.object.isOrthographicCamera?(h.object.zoom=Math.max(h.minZoom,Math.min(h.maxZoom,h.object.zoom*e)),h.object.updateProjectionMatrix(),g=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),h.enableZoom=!1)}function H(e){h.object.isPerspectiveCamera?_*=e:h.object.isOrthographicCamera?(h.object.zoom=Math.max(h.minZoom,Math.min(h.maxZoom,h.object.zoom/e)),h.object.updateProjectionMatrix(),g=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),h.enableZoom=!1)}function G(e){v.set(e.clientX,e.clientY)}function D(e){L.set(e.clientX,e.clientY)}function Y(e){if(1==e.touches.length)v.set(e.touches[0].pageX,e.touches[0].pageY);else{var t=.5*(e.touches[0].pageX+e.touches[1].pageX),i=.5*(e.touches[0].pageY+e.touches[1].pageY);v.set(t,i)}}function V(e){if(1==e.touches.length)L.set(e.touches[0].pageX,e.touches[0].pageY);else{var t=.5*(e.touches[0].pageX+e.touches[1].pageX),i=.5*(e.touches[0].pageY+e.touches[1].pageY);L.set(t,i)}}function F(e){var t=e.touches[0].pageX-e.touches[1].pageX,i=e.touches[0].pageY-e.touches[1].pageY,a=Math.sqrt(t*t+i*i);b.set(0,a)}function B(e){if(1==e.touches.length)S.set(e.touches[0].pageX,e.touches[0].pageY);else{var t=.5*(e.touches[0].pageX+e.touches[1].pageX),i=.5*(e.touches[0].pageY+e.touches[1].pageY);S.set(t,i)}I.subVectors(S,v).multiplyScalar(h.rotateSpeed);var a=h.domElement;M(2*Math.PI*I.x/a.clientHeight),x(2*Math.PI*I.y/a.clientHeight),v.copy(S)}function z(e){if(1==e.touches.length)T.set(e.touches[0].pageX,e.touches[0].pageY);else{var t=.5*(e.touches[0].pageX+e.touches[1].pageX),i=.5*(e.touches[0].pageY+e.touches[1].pageY);T.set(t,i)}R.subVectors(T,L).multiplyScalar(h.panSpeed),N(R.x,R.y),L.copy(T)}function j(e){var t=e.touches[0].pageX-e.touches[1].pageX,i=e.touches[0].pageY-e.touches[1].pageY,a=Math.sqrt(t*t+i*i);w.set(0,a),P.set(0,Math.pow(w.y/b.y,h.zoomSpeed)),C(P.y),b.copy(w)}function k(e){if(!1!==h.enabled)switch(e.pointerType){case"mouse":case"pen":!function(e){var t;switch(e.preventDefault(),h.domElement.focus?h.domElement.focus():window.focus(),e.button){case 0:t=h.mouseButtons.LEFT;break;case 1:t=h.mouseButtons.MIDDLE;break;case 2:t=h.mouseButtons.RIGHT;break;default:t=-1}switch(t){case THREE.MOUSE.DOLLY:if(!1===h.enableZoom)return;!function(e){b.set(e.clientX,e.clientY)}(e),f=d.DOLLY;break;case THREE.MOUSE.ROTATE:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===h.enablePan)return;D(e),f=d.PAN}else{if(!1===h.enableRotate)return;G(e),f=d.ROTATE}break;case THREE.MOUSE.PAN:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===h.enableRotate)return;G(e),f=d.ROTATE}else{if(!1===h.enablePan)return;D(e),f=d.PAN}break;default:f=d.NONE}f!==d.NONE&&(h.domElement.ownerDocument.addEventListener("pointermove",W,!1),h.domElement.ownerDocument.addEventListener("pointerup",X,!1),h.dispatchEvent(m))}(e)}}function W(e){if(!1!==h.enabled)switch(e.pointerType){case"mouse":case"pen":!function(e){if(!1===h.enabled)return;switch(e.preventDefault(),f){case d.ROTATE:if(!1===h.enableRotate)return;!function(e){S.set(e.clientX,e.clientY),I.subVectors(S,v).multiplyScalar(h.rotateSpeed);var t=h.domElement;M(2*Math.PI*I.x/t.clientHeight),x(2*Math.PI*I.y/t.clientHeight),v.copy(S),h.update()}(e);break;case d.DOLLY:if(!1===h.enableZoom)return;!function(e){w.set(e.clientX,e.clientY),P.subVectors(w,b),P.y>0?C(A()):P.y<0&&H(A()),b.copy(w),h.update()}(e);break;case d.PAN:if(!1===h.enablePan)return;!function(e){T.set(e.clientX,e.clientY),R.subVectors(T,L).multiplyScalar(h.panSpeed),N(R.x,R.y),L.copy(T),h.update()}(e)}}(e)}}function X(e){if(!1!==h.enabled)switch(e.pointerType){case"mouse":case"pen":!function(e){if(!1===h.enabled)return;h.domElement.ownerDocument.removeEventListener("pointermove",W,!1),h.domElement.ownerDocument.removeEventListener("pointerup",X,!1),h.dispatchEvent(c),f=d.NONE}()}}function q(e){!1===h.enabled||!1===h.enableZoom||f!==d.NONE&&f!==d.ROTATE||(e.preventDefault(),e.stopPropagation(),h.dispatchEvent(m),function(e){e.deltaY<0?H(A()):e.deltaY>0&&C(A()),h.update()}(e),h.dispatchEvent(c))}function K(e){!1!==h.enabled&&!1!==h.enableKeys&&!1!==h.enablePan&&function(e){var t=!1;switch(e.keyCode){case h.keys.UP:N(0,h.keyPanSpeed),t=!0;break;case h.keys.BOTTOM:N(0,-h.keyPanSpeed),t=!0;break;case h.keys.LEFT:N(h.keyPanSpeed,0),t=!0;break;case h.keys.RIGHT:N(-h.keyPanSpeed,0),t=!0}t&&(e.preventDefault(),h.update())}(e)}function Z(e){if(!1!==h.enabled){switch(e.preventDefault(),e.touches.length){case 1:switch(h.touches.ONE){case THREE.TOUCH.ROTATE:if(!1===h.enableRotate)return;Y(e),f=d.TOUCH_ROTATE;break;case THREE.TOUCH.PAN:if(!1===h.enablePan)return;V(e),f=d.TOUCH_PAN;break;default:f=d.NONE}break;case 2:switch(h.touches.TWO){case THREE.TOUCH.DOLLY_PAN:if(!1===h.enableZoom&&!1===h.enablePan)return;!function(e){h.enableZoom&&F(e),h.enablePan&&V(e)}(e),f=d.TOUCH_DOLLY_PAN;break;case THREE.TOUCH.DOLLY_ROTATE:if(!1===h.enableZoom&&!1===h.enableRotate)return;!function(e){h.enableZoom&&F(e),h.enableRotate&&Y(e)}(e),f=d.TOUCH_DOLLY_ROTATE;break;default:f=d.NONE}break;default:f=d.NONE}f!==d.NONE&&h.dispatchEvent(m)}}function Q(e){if(!1!==h.enabled)switch(e.preventDefault(),e.stopPropagation(),f){case d.TOUCH_ROTATE:if(!1===h.enableRotate)return;B(e),h.update();break;case d.TOUCH_PAN:if(!1===h.enablePan)return;z(e),h.update();break;case d.TOUCH_DOLLY_PAN:if(!1===h.enableZoom&&!1===h.enablePan)return;!function(e){h.enableZoom&&j(e),h.enablePan&&z(e)}(e),h.update();break;case d.TOUCH_DOLLY_ROTATE:if(!1===h.enableZoom&&!1===h.enableRotate)return;!function(e){h.enableZoom&&j(e),h.enableRotate&&B(e)}(e),h.update();break;default:f=d.NONE}}function J(e){!1!==h.enabled&&(h.dispatchEvent(c),f=d.NONE)}function ee(e){!1!==h.enabled&&e.preventDefault()}h.domElement.addEventListener("contextmenu",ee,!1),h.domElement.addEventListener("pointerdown",k,!1),h.domElement.addEventListener("wheel",q,!1),h.domElement.addEventListener("touchstart",Z,!1),h.domElement.addEventListener("touchend",J,!1),h.domElement.addEventListener("touchmove",Q,!1),h.domElement.addEventListener("keydown",K,!1),-1===h.domElement.tabIndex&&(h.domElement.tabIndex=0),this.update()},THREE.OrbitControls.prototype=Object.create(THREE.EventDispatcher.prototype),THREE.OrbitControls.prototype.constructor=THREE.OrbitControls,THREE.MapControls=function(e,t){THREE.OrbitControls.call(this,e,t),this.screenSpacePanning=!1,this.mouseButtons.LEFT=THREE.MOUSE.PAN,this.mouseButtons.RIGHT=THREE.MOUSE.ROTATE,this.touches.ONE=THREE.TOUCH.PAN,this.touches.TWO=THREE.TOUCH.DOLLY_ROTATE},THREE.MapControls.prototype=Object.create(THREE.EventDispatcher.prototype),THREE.MapControls.prototype.constructor=THREE.MapControls,Interaction.targets=new Set,Interaction.prototype={constructor:Interaction,newState:function(e){const t=new InteractionState;return t.name=e,t.update(this.object),this.selectedState=this.states.length,this.states.push(t),t},addState:function(e,t){this.states.splice(t,0,e),e.restoreOldTargets()},removeState:function(e){this.states[e].removeOldTargets(),this.selectedState===e&&(this.selectedState=void 0),this.states.splice(e,1)},selectState:function(e){void 0!==e&&this.states[e].execute(this.object),this.selectedState=e},getEventType:function(e){return this.events.find((t=>t.type===e))},hasEventType:function(e,t){return e===InteractionEvent.TYPE.KEY_DOWN||e===InteractionEvent.TYPE.KEY_UP?void 0!==t&&this.events.some((i=>i.type===e&&i.key===t)):this.events.some((t=>t.type===e))},newEvent:function(){const e=InteractionEvent.ORDER.find((e=>!1===this.hasEventType(e))),t=new InteractionEvent(e);return this.events.push(t),t},addEvent:function(e,t){this.events.splice(t,0,e);const i=this.events[t].targets;for(let e=0,t=i.length;e<t;++e)void 0!==i[e].object&&Interaction.targets.add(i[e])},removeEvent:function(e){const t=this.events[e].targets;for(let e=0,i=t.length;e<i;++e)void 0!==t[e].object&&Interaction.targets.delete(t[e]);this.events.splice(e,1)},removeOldTargets:function(){this.oldTargets=[],Interaction.targets.forEach((e=>{e.object===this.object&&(e.object=void 0,this.oldTargets.push(e))}))},restoreOldTargets:function(){this.oldTargets.forEach((e=>e.objects=this.object))},copy:function(e){this.selectedState=e.selectedState;for(let t=0,i=e.states.length;t<i;++t)this.addState(e.states[t].clone(),t);for(let t=0,i=e.events.length;t<i;++t){this.addEvent(e.events[t].clone(),t);const i=e.events[t].targets;for(let a=0,s=i.length;a<s;++a){const s=i[a].clone();i[a].object===e.object?(s.object=this.object,s.state=this.states[e.states.indexOf(i[a].state)]):(s.object=i[a].object,s.state=i[a].state),this.events[t].addTarget(s,a)}}return this},clone:function(e){return new Interaction(e).copy(this)},toJSON:function(e){const t={};if(t.uuid=this.uuid,void 0!==this.selectedState&&(t.selectedState=this.selectedState),this.states.length>0){t.states=[];for(let s=0,n=this.states.length;s<n;++s)t.states.push((i=e.interactionStates,a=this.states[s],void 0===i[a.uuid]&&(i[a.uuid]=a.toJSON(e)),a.uuid))}var i,a;if(this.events.length>0){t.events=[];for(let i=0,a=this.events.length;i<a;++i)t.events.push(this.events[i].toJSON(e))}return t},fromJSON:function(e,t,i){if(this.uuid=e.uuid,this.selectedState=e.selectedState,this.states=[],this.events=[],void 0!==e.states)for(let t=0,a=e.states.length;t<a;++t)this.states.push(i[e.states[t]]);if(void 0!==e.events)for(let a=0,s=e.events.length;a<s;++a)this.events.push((new InteractionEvent).fromJSON(e.events[a],t,i));return this},start:function(){if(void 0!==this.animation&&(this.animation.pause(),this.animation=void 0,this._removeBackLayer()),this.states.length>1){this.states[0].execute(this.object),this.currentState=this.states[0],this.prevState=void 0;const e=this.getEventType(InteractionEvent.TYPE.START);void 0!==e&&e.targets.length>0&&this.play(e.targets[0])}},end:function(){void 0!==this.animation&&(this.animation.pause(),this.animation=void 0,this._removeBackLayer()),this.states.length>1&&this.states[this.selectedState].execute(this.object),this.currentState=void 0,this.prevState=void 0},lookAt:function(e,t){const i=new THREE.Vector3(e,t,-600);this.object.lookAt(i)},play:function(e){this.animate(e.state,e)},reverse:function(e){this.animate(this.prevState,e)},_removeBackLayer:function(){if(void 0!==this.object.material){const e=this.object.material;if(Array.isArray(e))for(let t=0,i=e.length;t<i;++t){const i=e[t].layersList;let a=i.head;for(;a;)if(a.backLayer){delete a.backLayer;const e=a.next;i.removeLayer(a.id),a=e}else a.isBack?(delete a.isBack,a=a.next):a=a.next}else{const t=e.layersList;let i=t.head;for(;i;)for(;i;)if(i.backLayer){delete i.backLayer;const e=i.next;t.removeLayer(i.id),i=e}else i.isBack?(delete i.isBack,i=i.next):i=i.next}}},getTimingFunction:function(e,t,i){switch(e){case InteractionTarget.EASING.LINEAR:return"cubicBezier( 0, 0, 1, 1 )";case InteractionTarget.EASING.EASE:return"cubicBezier( .25, .1, .25, 1 )";case InteractionTarget.EASING.EASE_IN:return"cubicBezier( .42, 0, 1, 1 )";case InteractionTarget.EASING.EASE_OUT:return"cubicBezier( 0, 0, .58, 1 )";case InteractionTarget.EASING.EASE_IN_OUT:return"cubicBezier( .42, 0, .58, 1 )";case InteractionTarget.EASING.CUBIC:return`cubicBezier( ${t[0]}, ${t[1]}, ${t[2]}, ${t[3]} )`;case InteractionTarget.EASING.SPRING:return`spring( ${i.mass}, ${i.stiffness}, ${i.damping}, ${i.velocity} )`}},animate:function(e,t){this.currentState!==e&&(this.prevState=this.currentState,this.currentState=e),void 0!==this.animation&&this.animation.pause(),this._removeBackLayer(),!0===t.cycle&&!0===t.repeat?this.animation=anime.timeline({duration:t.duration,delay:t.delay/2,endDelay:t.delay/2,direction:"alternate",loop:!0,rewind:t.rewind,easing:this.getTimingFunction(t.easing,t.cubicControls,t.springParameters)}):!0===t.cycle&&!1===t.repeat?this.animation=anime.timeline({duration:t.duration,delay:t.delay,endDelay:t.delay/2,direction:"alternate",rewind:t.rewind,easing:this.getTimingFunction(t.easing,t.cubicControls,t.springParameters)}):!1===t.cycle&&!0===t.repeat?this.animation=anime.timeline({duration:t.duration,delay:t.delay,direction:"normal",loop:!0,easing:this.getTimingFunction(t.easing,t.cubicControls,t.springParameters)}):this.animation=anime.timeline({duration:t.duration,delay:t.delay,direction:"normal",easing:this.getTimingFunction(t.easing,t.cubicControls,t.springParameters)}),this.animation.finished.then((()=>{this._removeBackLayer()})),this.animateMatrix(e),this.animateGeometry(e),this.animateMaterial(e)},animateMatrix:function(e){if(!1===this.object.position.equals(e.position)){const t=this.object.position.clone(),i={t:0};this.animation.add({targets:i,t:1,update:()=>{this.object.position.lerpVectors(t,e.position,i.t)}},0)}if(!1===this.object.scale.equals(e.scale)){const t=this.object.scale.clone(),i={t:0};this.animation.add({targets:i,t:1,update:()=>{this.object.scale.lerpVectors(t,e.scale,i.t)}},0)}if(!1===this.object.rotation.equals(e.rotation)){const t=this.object.quaternion.clone(),i={t:0},a={x:this.object.rotation.x-e.rotation.x,y:this.object.rotation.y-e.rotation.y,z:this.object.rotation.z-e.rotation.z},s=e.rotation.clone(),n=.01*THREE.Math.DEG2RAD,r=359.99*THREE.Math.DEG2RAD;a.x===2*Math.PI?0===s.x?s.x=n:s.x===2*Math.PI&&(s.x=r):a.x===2*-Math.PI&&(0===s.x?s.x=-n:s.x===2*Math.PI&&(s.x=-r)),a.y===2*Math.PI?0===s.y?s.y=n:s.y===2*Math.PI&&(s.y=r):a.y===2*-Math.PI&&(0===s.y?s.y=-n:s.y===2*Math.PI&&(s.y=-r)),a.z===2*Math.PI?0===s.z?s.z=n:s.z===2*Math.PI&&(s.z=r):a.z===2*-Math.PI&&(0===s.z?s.z=-n:s.z===2*Math.PI&&(s.z=-r));const o=(new THREE.Quaternion).setFromEuler(s);this.animation.add({targets:i,t:1,update:()=>{SPE.Math.slerp(t,o,this.object.quaternion,i.t)}},0)}const t=new THREE.Vector3,i=new THREE.Quaternion,a=new THREE.Vector3,s=new THREE.Vector3,n=new THREE.Quaternion,r=new THREE.Vector3,o=new THREE.Vector3,h=new THREE.Quaternion,l=new THREE.Vector3;if(this.object.hiddenMatrix.decompose(t,i,a),e.hiddenMatrix.decompose(s,n,r),!1===this.object.hiddenMatrix.equals(e.hiddenMatrix)){const e={t:0};this.animation.add({targets:e,t:1,update:()=>{THREE.Quaternion.slerp(i,n,h,e.t),o.lerpVectors(t,s,e.t),l.lerpVectors(a,r,e.t),this.object.hiddenMatrix.compose(o,h,l)}},0)}},animateGeometry:function(e){if(void 0===this.object.geometry)return;const t=this.object.geometry.userData.parameters;e.geometry.width===t.width&&e.geometry.height===t.height&&e.geometry.depth===t.depth||this.animation.add({targets:this.object.geometry.userData.parameters,width:e.geometry.width,height:e.geometry.height,depth:e.geometry.depth,update:()=>{const e=SPE[this.object.geometry.userData.type].buildFromGeometry(this.object.geometry,{width:t.width,height:t.height,depth:t.depth});this.object.updateGeometry(e)}},0)},animateMaterial:function(e){if(void 0===this.object.material)return;const t=(e,t,i,a)=>{const s=e.layersList;for(let e=0,n=(a=void 0!==a?a:t.paramNames).length;e<n;++e){const n=a[e],r=`f${t.id}_${n}`,o=`f${i.id}_${n}`,h=t.uniforms[r],l=i.uniforms[o];"mode"!==n&&"boolean"!=typeof h.value?"number"!=typeof h.value?h.value instanceof THREE.Vector2?!1===h.value.equals(l.value)&&this.animation.add({targets:h.value,x:l.value.x,y:l.value.y,update:function(){s.updateLayerUniformByLayer(t,r)}},0):h.value instanceof THREE.Vector3?!1===h.value.equals(l.value)&&this.animation.add({targets:h.value,x:l.value.x,y:l.value.y,z:l.value.z,update:function(){s.updateLayerUniformByLayer(t,r)}},0):h.value instanceof THREE.Color&&!1===h.value.equals(l.value)&&this.animation.add({targets:h.value,r:l.value.r,g:l.value.g,b:l.value.b,update:function(){s.updateLayerUniformByLayer(t,r)}},0):h.value!==l.value&&this.animation.add({targets:h,value:l.value,update:function(){s.updateLayerUniformByLayer(t,r)}},0):h.value!==l.value&&(h.value=l.value,s.updateLayerUniformByLayer(t,r))}if(t.backLayer){const e=t.backLayer.id,i=`f${e}_alpha`,a=t.backLayer.uniforms[i];this.animation.add({targets:a,value:0,update:function(){s.updateLayerUniform(e,i)}},0)}},i=(e,t,i)=>{const a=e.layersList;if(void 0===t.backLayer){const s=i.getValues();s.alpha=0,t.backLayer=a.addLayerBeforeAt(s,t),t.backLayer.isBack=!0,e.dispose()}const s=`f${t.id}_alpha`,n=`f${t.backLayer.id}_alpha`,r=t.uniforms[s],o=t.backLayer.uniforms[n];this.animation.add({targets:r,value:0,update:function(){a.updateLayerUniformByLayer(t,s)}},0).add({targets:o,value:i.uniforms[`f${i.id}_alpha`].value,update:function(){a.updateLayerUniformByLayer(t.backLayer,n)}},0)},a=(e,i,a)=>{const s=e.layersList,n=`f${i.id}_mat`,r=`f${i.id}_texture`,o=i.uniforms[r].value,h=a.uniforms[`f${a.id}_texture`].value,l=i.uniforms[`f${i.id}_crop`],m=a.uniforms[`f${a.id}_crop`];if(l.value!==m.value&&(l.value=m.value,s.updateLayerUniformByLayer(i,`f${i.id}_crop`)),o.wrapS===h.wrapS&&o.wrapT===h.wrapT||(o.wrapS=h.wrapS,o.wrapT=h.wrapT,o.needsUpdate=!0,s.updateLayerUniform(i,r)),!1===o.matrix.equals(h.matrix)){const e={repeatX:o.repeat.x,repeatY:o.repeat.y,offsetX:o.offset.x,offsetY:o.offset.y};this.animation.add({targets:e,repeatX:h.repeat.x,repeatY:h.repeat.y,offsetX:h.offset.x,offsetY:h.offset.y,update:function(){o.repeat.set(e.repeatX,e.repeatY),o.offset.set(e.offsetX,e.offsetY),o.updateMatrix(),s.updateLayerUniformByLayer(i,n)}},0)}t(e,i,a,["alpha","mode"])},s=(e,i,a)=>{const s=e.layersList,n=i.uniforms[`f${i.id}_num`],r=a.uniforms[`f${a.id}_num`],o=`f${i.id}_steps`,h=`f${a.id}_steps`,l=i.uniforms[o],m=a.uniforms[h],c=`f${i.id}_colors`,d=`f${a.id}_colors`,f=i.uniforms[c],u=a.uniforms[d];if(n.value<=r.value){const e=f.value[n.value-1];for(let t=n.value;t<r.value;++t)l.value[t]=1,s.updateLayerUniformByLayer(i,c),f.value[t].set(e.x,e.y,e.z,e.w),s.updateLayerUniformByLayer(i,o);n.value!==r.value&&(n.value=r.value,s.updateLayerUniformByLayer(i,`f${i.id}_num`));for(let e=0;e<r.value;++e){const t=f.value[e],a=u.value[e];if(l.value[e]!==m.value[e]||!1===t.equals(a)){const n={value:l.value[e]};this.animation.add({targets:[n,t],value:m.value[e],x:a.x,y:a.y,z:a.z,w:a.w,update:function(){l.value[e]=n.value,s.updateLayerUniformByLayer(i,o),s.updateLayerUniformByLayer(i,c)}},0)}}}else{const e=[];for(let t=0;t<r.value;++t){const a=f.value[t],n=u.value[t];l.value[t]===m.value[t]&&!1!==a.equals(n)||e.push(new Promise((e=>{const r={value:l.value[t]};this.animation.add({targets:[r,a],value:m.value[t],x:n.x,y:n.y,z:n.z,w:n.w,update:function(){l.value[t]=r.value,s.updateLayerUniformByLayer(i,o),s.updateLayerUniformByLayer(i,c)},complete:function(){e(t)}},0)})))}const t=u.value[r.value-1];for(let a=r.value;a<n.value;++a){const n=f.value[a];l.value[a]===m.value[a]&&!1!==n.equals(t)||e.push(new Promise((e=>{const r={value:l.value[a]};this.animation.add({targets:[r,n],value:1,x:t.x,y:t.y,z:t.z,w:t.w,update:function(){l.value[a]=r.value,s.updateLayerUniformByLayer(i,o),s.updateLayerUniformByLayer(i,c)},complete:function(){e(a)}},0)})))}Promise.all(e).then((function(){n.value=r.value,s.updateLayerUniformByLayer(i,`f${i.id}_num`)}))}t(e,i,a,["alpha","mode","gl_type","smooth","offset","morph","angle"])};function n(e,n){let r=e.layersList.head,o=0;for(;r;){if(!0===r.isBack){r=r.next;continue}const h=n.layersList[o++];if("texture"===r.type){const t=r.uniforms[`f${r.id}_texture`].value,s=h.uniforms[`f${h.id}_texture`].value;t.image===s.image?a(e,r,h):i(e,r,h)}else"gradient"===r.type?r.uniforms[`f${r.id}_gl_type`].value===h.uniforms[`f${h.id}_gl_type`].value?s(e,r,h):i(e,r,h):t(e,r,h);r=r.next}}if(Array.isArray(this.object.material))for(let t=0,i=this.object.material.length;t<i;++t)n(this.object.material[t],e.material[t]);else n(this.object.material,e.material)}},InteractionEvent.TYPE={MOUSE_DOWN:0,MOUSE_UP:1,MOUSE_HOVER:2,MOUSE_ENTER:3,MOUSE_LEAVE:4,KEY_DOWN:5,KEY_UP:6,START:7,LOOK_AT:8,SCROLL:9},InteractionEvent.ORDER=[InteractionEvent.TYPE.MOUSE_DOWN,InteractionEvent.TYPE.MOUSE_UP,InteractionEvent.TYPE.MOUSE_HOVER,InteractionEvent.TYPE.KEY_DOWN],InteractionEvent.prototype={constructor:InteractionEvent,get type(){return this._type},set type(e){this._type=e,e!==InteractionEvent.TYPE.KEY_DOWN&&e!==InteractionEvent.TYPE.KEY_UP&&(this.key=void 0)},newTarget:function(e){const t=new InteractionTarget;return t.object=e,e.interaction.states.length>0&&(t.state=e.interaction.states[e.interaction.states.length-1]),this.targets.push(t),Interaction.targets.add(t),t},addTarget:function(e,t){this.targets.splice(t,0,e),Interaction.targets.add(e)},removeTarget:function(e){Interaction.targets.delete(this.targets[e]),this.targets.splice(e,1)},dispatchReverse:function(){for(let e=0,t=this.targets.length;e<t;++e){const t=this.targets[e];void 0!==t.state&&t.object.interaction.reverse(t)}},dispatch:function(){for(let e=0,t=this.targets.length;e<t;++e){const t=this.targets[e];void 0!==t.state&&t.object.interaction.play(t)}},copy:function(e){return this.ui.isCollapsed=e.ui.isCollapsed,this},clone:function(){return new InteractionEvent(this.type,this.key).copy(this)},toJSON:function(e){const t={type:this._type,key:this.key,ui:{isCollapsed:this.ui.isCollapsed}};if(this.targets.length>0){t.targets=[];for(let i=0,a=this.targets.length;i<a;++i)t.targets.push(this.targets[i].toJSON(e))}return t},fromJSON:function(e,t,i){if(this._type=e.type,this.key=e.key,this.targets=[],this.ui={isCollapsed:e.ui.isCollapsed},void 0!==e.targets)for(let a=0,s=e.targets.length;a<s;++a)this.targets.push((new InteractionTarget).fromJSON(e.targets[a],t,i));return this}},InteractionState.prototype={constructor:InteractionState,update:function(e){this.updateMatrix(e),this.updateGeometry(e),this.updateMaterial(e)},updateMatrix:function(e){this.position.copy(e.position),this.rotation.copy(e.rotation),this.scale.copy(e.scale),this.hiddenMatrix.copy(e.hiddenMatrix)},updateGeometry:function(e){if(void 0!==e.geometry){const t=e.geometry.userData.parameters;this.geometry={width:t.width,height:t.height,depth:t.depth}}},updateMaterial:function(e){if(void 0!==e.material)if(!0===Array.isArray(e.material)){this.material=[];for(let t=0,i=e.material.length;t<i;++t){const i=[];let a=e.material[t].layersList.head;for(;a;)i.push(a.clone()),a=a.next;this.material.push({layersList:i})}}else{const t=[];let i=e.material.layersList.head;for(;i;)t.push(i.clone()),i=i.next;this.material={layersList:t}}},execute:function(e){if(e.position.copy(this.position),e.rotation.copy(this.rotation),e.scale.copy(this.scale),e.hiddenMatrix.copy(this.hiddenMatrix),void 0!==this.geometry){const t=e.geometry.userData.parameters;if(this.geometry.width!==t.width||this.geometry.height!==t.height||this.geometry.depth!==t.depth){const t=SPE[e.geometry.userData.type].buildFromGeometry(e.geometry,{width:this.geometry.width,height:this.geometry.height,depth:this.geometry.depth});e.updateGeometry(t)}}if(void 0!==this.material){const t=e.material;if(!0===Array.isArray(t))for(let e=0,i=this.material.length;e<i;++e){let i=t[e].layersList.head;const a=this.material[e].layersList;let s=0;for(;i;)i.copy(a[s++]),i=i.next;t[e].dispose()}else{let e=t.layersList.head;const i=this.material.layersList;let a=0;for(;e;)e.copyUniforms(i[a++]),e=e.next;t.dispose()}}},removeOldTargets:function(){this.oldTargets=[],Interaction.targets.forEach((e=>{e.state===this&&(e.state=void 0,this.oldTargets.push(e))}))},restoreOldTargets:function(){this.oldTargets.forEach((e=>e.state=this))},copy:function(e){if(this.name=e.name,this.position.copy(e.position),this.rotation.copy(e.rotation),this.scale.copy(e.scale),this.hiddenMatrix.copy(e.hiddenMatrix),void 0!==e.geometry&&(this.geometry={width:e.geometry.width,height:e.geometry.height,depth:e.geometry.depth}),void 0!==e.material)if(!0===Array.isArray(e.material)){this.material=[];for(let t=0,i=e.material.length;t<i;++t)this.material.push({layersList:e.material[t].layersList.map((e=>e.clone()))})}else this.material={layersList:e.material.layersList.map((e=>e.clone()))};return this},clone:function(){return(new InteractionState).copy(this)},toJSON:function(e){const t={uuid:this.uuid,name:this.name,position:this.position.toArray(),rotation:this.rotation.toArray(),scale:this.scale.toArray(),hiddenMatrix:this.hiddenMatrix.toArray()};if(this.geometry!=={}&&(t.geometry={width:this.geometry.width,height:this.geometry.height,depth:this.geometry.depth}),void 0!==this.material)if(!0===Array.isArray(this.material)){t.material=[];for(let i=0,a=this.material.length;i<a;++i)t.material.push({layersList:this.material[i].layersList.map((t=>t.toJSON(e)))})}else t.material={layersList:this.material.layersList.map((t=>t.toJSON(e)))};return t},fromJSON:function(e,t){if(this.uuid=e.uuid,this.name=e.name,this.position.fromArray(e.position),void 0!==e.rotation)this.rotation.fromArray(e.rotation);else{const t=(new THREE.Quaternion).fromArray(e.quaternion);this.rotation.setFromQuaternion(t)}if(this.scale.fromArray(e.scale),this.hiddenMatrix.fromArray(e.hiddenMatrix),e.geometry!=={}&&(this.geometry={width:e.geometry.width,height:e.geometry.height,depth:e.geometry.depth}),void 0!==e.material)if(!0===Array.isArray(e.material)){this.material=[];for(let i=0,a=e.material.length;i<a;++i)this.material.push({layersList:e.material[i].layersList.map((e=>SPE.CreateLayerFromJSON(e,t)))})}else this.material={layersList:e.material.layersList.map((e=>SPE.CreateLayerFromJSON(e,t)))};return this}},InteractionTarget.EASING={LINEAR:0,EASE:1,EASE_IN:2,EASE_OUT:3,EASE_IN_OUT:4,CUBIC:5,SPRING:6},InteractionTarget.prototype={constructor:InteractionTarget,get interaction(){return void 0!==this._object?this._object.interaction:void 0},get object(){return this._object},set object(e){if(void 0!==e){const t=e.interaction.states;this.state=t.length>0?t[t.length-1]:void 0}else this.state=void 0;this._object=e},copy:function(e){return this.easing=e.easing,this.duration=e.duration,this.delay=e.delay,this.cubicControls=[...e.cubicControls],this.springParameters={mass:e.springParameters.mass,stiffness:e.springParameters.stiffness,damping:e.springParameters.damping,velocity:e.springParameters.velocity},this.repeat=e.repeat,this.cycle=e.cycle,this.rewind=e.rewind,this},clone:function(){return(new InteractionTarget).copy(this)},toJSON:function(){const e={easing:this.easing,duration:this.duration,delay:this.delay,cubicControls:this.cubicControls,springParameters:{mass:this.springParameters.mass,stiffness:this.springParameters.stiffness,damping:this.springParameters.damping,velocity:this.springParameters.velocity},repeat:this.repeat,cycle:this.cycle,rewind:this.rewind};return void 0!==this.object&&(e.object=this.object.uuid),void 0!==this.state&&(e.state=this.state.uuid),e},fromJSON:function(e,t,i){return void 0!==e.object&&(this.object=t[e.object]),void 0!==e.state&&(this.state=i[e.state]),this.easing=e.easing,this.duration=e.duration,this.delay=e.delay,this.cubicControls=[...e.cubicControls],this.repeat=e.repeat,this.cycle=e.cycle,this.rewind=void 0!==e.rewind&&e.rewind,void 0!==e.springControls?(this.springParameters.mass=e.springControls[0],this.springParameters.stiffness=e.springControls[1],this.springParameters.damping=e.springControls[2],this.springParameters.velocity=e.springControls[3]):(this.springParameters.mass=e.springParameters.mass,this.springParameters.stiffness=e.springParameters.stiffness,this.springParameters.damping=e.springParameters.damping,this.springParameters.velocity=e.springParameters.velocity),this}},InteractionStatesManager.prototype={updateObject(){void 0!==this.i.selectedState&&this.i.states[this.i.selectedState].updateMatrix(this.i.object)},updateGeometry(){void 0!==this.i.selectedState&&(this.i.states[this.i.selectedState].updateMatrix(this.i.object),this.i.states[this.i.selectedState].updateGeometry(this.i.object))},updateSceneGraph(e){const t=new THREE.Matrix4,i=new THREE.Matrix4;e.updateWorldMatrix(!0,!1);for(let a=0,s=this.i.states.length;a<s;++a){const s=this.i.states[a];t.getInverse(e.matrixWorld),null!==this.i.object.parent&&(this.i.object.parent.updateWorldMatrix(!0,!1),t.multiply(this.i.object.parent.matrixWorld)),!0===this.i.object.isLight?(i.compose(s.position,s.quaternion,s.scale),i.premultiply(t),i.decompose(s.position,s.quaternion,s.scale)):s.hiddenMatrix.premultiply(t)}},updateMaterialLayer(e){if(void 0===this.i.selectedState)return;const t=this.i.object.userData.selectedMaterial;(void 0!==t?this.i.states[this.i.selectedState].material[t]:this.i.states[this.i.selectedState].material).layersList.find((t=>t.id===e.id)).copy(e)},pushMaterialLayer(e){if(0!==this.i.states.length)if(!0===Array.isArray(this.i.object.material)){const t=this.i.object.userData.selectedMaterial;for(let i=0,a=this.i.states.length;i<a;++i){const a=e.clone();this.i.selectedState!==i&&(a.uniforms[`f${a.id}_alpha`].value=0),this.i.states[i].material[t].layersList.push(a)}}else for(let t=0,i=this.i.states.length;t<i;++t){const i=e.clone();this.i.selectedState!==t&&(i.uniforms[`f${i.id}_alpha`].value=0),this.i.states[t].material.layersList.push(i)}},popMaterialLayer(){if(0!==this.i.states.length)if(!0===Array.isArray(this.i.object.material)){const e=this.i.object.userData.selectedMaterial;for(let t=0,i=this.i.states.length;t<i;++t)this.i.states[t].material[e].layersList.pop()}else for(let e=0,t=this.i.states.length;e<t;++e)this.i.states[e].material.layersList.pop()},removeMaterialLayer(e){if(0===this.i.states.length)return;let t=[];if(!0===Array.isArray(this.i.object.material))for(let i=0,a=this.i.states.length;i<a;++i){const a=this.i.object.userData.selectedMaterial,s=this.i.states[i].material[a];t.push({layer:s.layersList[e]}),s.layersList.splice(e,1)}else for(let i=0,a=this.i.states.length;i<a;++i){const a=this.i.states[i].material;t.push({layer:a.layersList[e]}),a.layersList.splice(e,1)}return{states:t,pos:e}},restoreMaterialLayerRemoved(e){if(0!==this.i.states.length)if(!0===Array.isArray(this.i.object.material))for(let t=0,i=this.i.states.length;t<i;++t){const i=this.i.object.userData.selectedMaterial;this.i.states[t].material[i].layersList.splice(e.pos,0,e.states[t].layer)}else for(let t=0,i=this.i.states.length;t<i;++t){this.i.states[t].material.layersList.splice(e.pos,0,e.states[t].layer)}},changeMaterialLayer(e){if(0===this.i.states.length)return;let t,i=[];if(!0===Array.isArray(this.i.object.material)){const a=this.i.object.userData.selectedMaterial,s=this.i.states[this.i.selectedState].material[a].layersList;for(let i=0,a=s.length;i<a;++i)if(s[i].id===e.id){t=i;break}for(let s=0,n=this.i.states.length;s<n;++s){const n=this.i.states[s].material[a].layersList[t],r=e.clone();this.i.selectedState!==s&&(r.uniforms[`f${r.id}_alpha`].value=n.uniforms[`f${n.id}_alpha`].value),this.i.states[s].material[a].layersList[t]=r,i.push({layer:n})}}else{const a=this.i.states[this.i.selectedState].material.layersList;for(let i=0,s=a.length;i<s;++i)if(a[i].id===e.id){t=i;break}for(let a=0,s=this.i.states.length;a<s;++a){const s=this.i.states[a].material.layersList[t],n=e.clone();this.i.selectedState!==a&&(n.uniforms[`f${n.id}_alpha`].value=s.uniforms[`f${s.id}_alpha`].value),this.i.states[a].material.layersList[t]=n,i.push({layer:s})}}return{states:i,pos:t}},restoreMaterialLayerChanged(e){if(0!==this.i.states.length)if(!0===Array.isArray(this.i.object.material)){const t=this.i.object.userData.selectedMaterial;for(let i=0,a=this.i.states.length;i<a;++i)this.i.states[i].material[t].layersList[e.pos]=e.states[i].layer}else for(let t=0,i=this.i.states.length;t<i;++t)this.i.states[t].material.layersList[e.pos]=e.states[t].layer},moveMaterialLayer(e,t){if(0!==this.i.states.length)if(!0===Array.isArray(this.i.object.material)){const i=this.i.object.userData.selectedMaterial;for(let a=0,s=this.i.states.length;a<s;++a){const s=this.i.states[a].material[i].layersList,n=s[e];s[e]=s[t],s[t]=n}}else for(let i=0,a=this.i.states.length;i<a;++i){const a=this.i.states[i].material.layersList,s=a[e];a[e]=a[t],a[t]=s}},restoreMaterialLayerMoved(e,t){this.moveMaterialLayer(e,t)},setMaterialLayers(e){const t=[];if(Array.isArray(this.i.object.material)){const i=this.i.object.userData.selectedMaterial;for(let a=0,s=this.i.states.length;a<s;++a){const s=this.i.states[a].material[i];t.push({layersList:s.layersList});let n=e.head;for(s.layersList=[];void 0!==n;)s.layersList.push(n.clone()),n=n.next}}else for(let i=0,a=this.i.states.length;i<a;++i){const a=this.i.states[i].material;t.push({layersList:a.layersList});let s=e.head;for(a.layersList=[];void 0!==s;)a.layersList.push(s.clone()),s=s.next}return{states:t}},restoreMaterialLayersSet(e){if(Array.isArray(this.i.object.material)){const t=object.userData.selectedMaterial;for(let i=0,a=this.i.states.length;i<a;++i)this.i.states[i].material[t].layersList=e.states[i].layersList}else for(let t=0,i=this.i.states.length;t<i;++t)this.i.states[t].material.layersList=e.states[t].layersList}},SPE.CubeGeometry=new function(){this.build=function({width:e=100,height:t=e,depth:i=e,widthSegments:a=1,heightSegments:s=1,depthSegments:n=1,cornerRadius:r=0,cornerSegments:o=8}){let h;return e=Math.abs(e),t=Math.abs(t),i=Math.abs(i),h=0==r?new THREE.BoxBufferGeometry(e,t,i,a,s,n):new RoundedBoxBufferGeometry(e,t,i,a,s,n,r,o),h.userData={type:"CubeGeometry",parameters:{width:e,height:t,depth:i,widthSegments:a,heightSegments:s,depthSegments:n,cornerRadius:r,cornerSegments:o}},h},this.buildFromGeometry=function(e,{width:t=e.userData.parameters.width,height:i=e.userData.parameters.height,depth:a=e.userData.parameters.depth,widthSegments:s=e.userData.parameters.widthSegments,heightSegments:n=e.userData.parameters.heightSegments,depthSegments:r=e.userData.parameters.depthSegments,cornerRadius:o=e.userData.parameters.cornerRadius,cornerSegments:h=e.userData.parameters.cornerSegments}){return this.build({width:t,height:i,depth:a,widthSegments:s,heightSegments:n,depthSegments:r,cornerRadius:o,cornerSegments:h})}};const pi2=Math.PI/2;class RoundedBoxBufferGeometry extends THREE.BufferGeometry{constructor(e=1,t=1,i=1,a=1,s=1,n=1,r=0,o=4){const h=THREE.Vector3;super(),this.type="BoxBufferGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:a,heightSegments:s,depthSegments:n,cornerRadius:r,cornerSegments:o};const l=this;a=Math.floor(a),s=Math.floor(s),n=Math.floor(n),o=Math.floor(o),r=Math.min(r,e/2,t/2,i/2);const m=[],c=[],d=[],f=[];let u=0,p=0;function E(e,t,i,a,s,n,o,E,_,y,g){const v=(n-2*r)/_,S=(o-2*r)/y,I=n/2-r,L=o/2-r,T=E/2,R=_+1,b=y+1;let w=0,P=0;const A=new h;for(let n=0;n<b;n++){const r=n*S-L;for(let o=0;o<R;o++){const h=o*v-I;A[e]=h*a,A[t]=r*s,A[i]=T,c.push(A.x,A.y,A.z),A[e]=0,A[t]=0,A[i]=E>0?1:-1,d.push(A.x,A.y,A.z),f.push(o/_),f.push(1-n/y),w+=1}}for(let e=0;e<y;e++)for(let t=0;t<_;t++){const i=u+t+R*e,a=u+t+R*(e+1),s=u+(t+1)+R*(e+1),n=u+(t+1)+R*e;m.push(i,a,n),m.push(a,s,n),P+=6}l.addGroup(p,P,g),p+=P,u+=w}function _(e,t,i,a,s,n,E,_,y,g,v){const S=(E-2*r)/g,I=E/2-r,L=_/2-r,T=y/2,R=g+1;let b=0,w=0;const P=new h,A=new h;for(let h=0;h<o+1;h++){const l=h/o*pi2,m=Math.sin(l)*r,u=(1-Math.cos(l))*r,p=Math.sin(l),E=Math.cos(l);P[t]=(L+m)*s,P[i]=(T-u)*n,A[e]=0,A[t]=p*Math.sign(P[t]),A[i]=E*Math.sign(P[i]);for(let t=0;t<R;t++){const i=t*S-I;P[e]=i*a,c.push(P.x,P.y,P.z),d.push(A.x,A.y,A.z),f.push(t/g),f.push(0),b+=1}}for(let e=0;e<o;e++)for(let t=0;t<g;t++){const i=u+t+R*e,a=u+t+R*(e+1),s=u+(t+1)+R*(e+1),n=u+(t+1)+R*e;m.push(i,a,n),m.push(a,s,n),w+=6}l.addGroup(p,w,v),p+=w,u+=b}function y(a,s,n){const l=new h,p=new h(e/2,t/2,i/2);p.subScalar(r);const E=[],_=a*s*n>0?function(e,t,i){m.push(e,t,i)}:function(e,t,i){m.push(e,i,t)};for(let e=0;e<=o;e++){const t=[],i=pi2*(1-e/o),h=Math.cos(i),m=Math.sin(i);let _=0;for(var y=0;y<=e;y++){const i=Math.cos(_),o=Math.sin(_);l.x=h*i,l.y=m,l.z=h*o;const E=p.clone().addScaledVector(l,r);c.push(a*E.x,s*E.y,n*E.z),d.push(a*l.x,s*l.y,n*l.z),f.push(0,0),t.push(u++),_+=pi2/e}E.push(t)}const g=E.length-1;for(let e=0;e<g;e++){const t=E[e],i=E[e+1],a=t.length-1;_(t[0],i[1],i[0]);for(let e=1;e<=a;e++)_(t[e-1],t[e],i[e]),_(t[e],i[e+1],i[e])}}E("z","y","x",-1,-1,i,t,e,n,s,0),E("z","y","x",1,-1,i,t,-e,n,s,1),E("x","z","y",1,1,e,i,t,a,n,2),E("x","z","y",1,-1,e,i,-t,a,n,3),E("x","y","z",1,-1,e,t,i,a,s,4),E("x","y","z",-1,-1,e,t,-i,a,s,5),r>0&&(_("z","y","x",-1,-1,1,i,t,e,n,0),_("z","y","x",1,-1,-1,i,t,e,n,1),_("z","y","x",-1,1,-1,i,t,e,n,1),_("z","y","x",1,1,1,i,t,e,n,0),_("x","y","z",-1,-1,-1,e,t,i,a,0),_("x","y","z",1,-1,1,e,t,i,a,1),_("x","y","z",-1,1,1,e,t,i,a,0),_("x","y","z",1,1,-1,e,t,i,a,1),_("y","x","z",-1,-1,1,t,e,i,s,0),_("y","x","z",1,-1,-1,t,e,i,s,1),_("y","x","z",1,1,1,t,e,i,s,1),_("y","x","z",-1,1,-1,t,e,i,s,0),y(1,1,1),y(-1,1,1),y(1,-1,1),y(-1,-1,1),y(1,1,-1),y(-1,1,-1),y(1,-1,-1),y(-1,-1,-1)),this.setIndex(m),this.setAttribute("position",new THREE.Float32BufferAttribute(c,3)),this.setAttribute("normal",new THREE.Float32BufferAttribute(d,3)),this.setAttribute("uv",new THREE.Float32BufferAttribute(f,2))}}function two2three(e,t,i){i.x=e.x*t.x,i.y=e.y,i.z=e.x*t.y}function flip(e){return new THREE.Vector2(e.y,-e.x)}SPE.CylinderGeometry=new function(){this.build=function({width:e=100,height:t=e,depth:i=e,radiusTop:a=e/2,radiusBottom:s=e/2,radialSegments:n=64,heightSegments:r=1,openEnded:o=!1,thetaStart:h,thetaLength:l=360,cornerRadius:m=0,cornerSegments:c=8,hollow:d=0}){e=Math.abs(e),t=Math.abs(t),i=Math.abs(i);let f=e/2;if(a===s)a=f,s=f;else if(a>s)s=s*f/(a=f);else a=a*f/s,s=f;let u=new RoundedCylinderBufferGeometry(a,s,t,n,r,o,h,l*Math.PI/180,m,m,c,d);return u.scale(1,1,i/e),u.userData={type:"CylinderGeometry",parameters:{width:e,height:t,depth:i,radiusTop:a,radiusBottom:s,radialSegments:n,heightSegments:r,openEnded:o,thetaStart:h,thetaLength:l,cornerRadius:m,cornerSegments:c,hollow:d}},u},this.buildFromGeometry=function(e,{width:t=e.userData.parameters.width,height:i=e.userData.parameters.height,depth:a=e.userData.parameters.depth,radiusTop:s=e.userData.parameters.radiusTop,radiusBottom:n=e.userData.parameters.radiusBottom,radialSegments:r=e.userData.parameters.radialSegments,heightSegments:o=e.userData.parameters.heightSegments,openEnded:h=e.userData.parameters.openEnded,thetaStart:l=e.userData.parameters.thetaStart,thetaLength:m=e.userData.parameters.thetaLength,cornerRadius:c=e.userData.parameters.cornerRadius,cornerSegments:d=e.userData.parameters.cornerSegments,hollow:f=e.userData.parameters.hollow}){return this.build({width:t,height:i,depth:a,radiusTop:s,radiusBottom:n,radialSegments:r,heightSegments:o,openEnded:h,thetaStart:l,thetaLength:m,cornerRadius:c,cornerSegments:d,hollow:f})}};class RoundedCylinderBufferGeometry extends THREE.BufferGeometry{constructor(e,t,i,a,s,n,r,o,h,l,m,c,d=!1){super(),this.type="RoundedCylinderBufferGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:i,radialSegments:a,heightSegments:s,openEnded:n,thetaStart:r,thetaLength:o,cornerRadius:h,cornerRadius:l,cornerSegments:m,hollow:c};var f=THREE.Vector2,u=THREE.Vector3,p=THREE.Float32BufferAttribute;e=void 0!==e?e:1,t=void 0!==t?t:1,i=i||1,a=Math.floor(a)||8,s=Math.floor(s)||1,n=void 0!==n&&n,r=void 0!==r?r:0,o=void 0!==o?o:2*Math.PI,n&&(h=0,l=0);const E=[],_=[],y=[],g=[];let v=0;const S=i/2;const I=new u,L=new u;d&&0==e&&(e=h),d&&0==t&&(t=l);let T=new f(e,S),R=new f(t,-S),b=null,w=null,P=null,A=null,M=T.clone().sub(R),x=0,$=0,O=0;c>0&&(x=Math.min(e,t)*(1-c),$=e-x,O=t-x);const U=T.clone();U.x-=x;const N=Math.PI-M.angle(),C=M.angle(),H=Math.tan(C/2),G=Math.tan(N/2),D=H+G,Y=c?D:G,V=c?D:H;if(h=Math.min(h,(e-$)/Y,M.length()/D),l=Math.min(l,(t-O)/V,M.length()/D),h>0){const e=h/H;b=T.clone().sub(new f(e,h)),c&&(P=b.clone(),P.x-=x-D*h),T.sub(M.clone().setLength(e))}if(l>0){const e=l/G;w=R.clone().sub(new f(e,-l)),R.add(M.clone().setLength(e)),c&&(A=w.clone(),A.x-=x-D*l,U.sub(M.clone().setLength(e)))}M=T.clone().sub(R);const F=M.length()<.5,B=[];for(let m=0;m<=a;m++){const d=[],u=m/a,p=u*o+r,E=new f(Math.sin(p),Math.cos(p));A?(z(d,u,E,N,l,A,-1,!0),z(d,u,E,C,l,w,-1,!1)):w?(j(d,E,w.x,0,-1),z(d,u,E,C,l,w,-1,!1)):n||j(d,E,t,O,-1);const S=flip(M).normalize();if(two2three(S,E,I),!F)for(let e=0;e<=s;e++){const t=e/s,a=M.clone().multiplyScalar(t).add(R);two2three(a,E,L),_.push(L.x,L.y,L.z),y.push(I.x,I.y,I.z),g.push(u,.5+L.y/i),d.push(v++)}if(P?(z(d,u,E,N,h,b,1,!1),z(d,u,E,C,h,P,1,!0)):b?(z(d,u,E,N,h,b,1,!1),j(d,E,b.x,0,1)):n||j(d,E,e,$,1),c&&!F){const e=flip(M).multiplyScalar(-1).normalize();two2three(e,E,I);for(let e=0;e<=s;e++){const t=e/s,a=M.clone().multiplyScalar(-t).add(U);two2three(a,E,L),_.push(L.x,L.y,L.z),y.push(I.x,I.y,I.z),g.push(u,.5+L.y/i),d.push(v++)}}c&&!n&&d.push(d[0]),B.push(d)}for(let e=0;e<B.length-1;e++)for(let t=0;t<B[0].length-1;t++){if(n&&c&&t==s)continue;const i=B[e][t],a=B[e+1][t],r=B[e+1][t+1],o=B[e][t+1],h=_[3*r+0],l=_[3*r+2];E.push(i,a,o),0==h&&0==l||E.push(a,r,o)}function z(e,t,a,s,n,r,o,h){for(let l=0;l<m+1;l++){const c=l/m;let d=o<0?c:1-c;h&&(d-=1),d*=s;const u=new f(Math.sin(d),Math.cos(d)*o),p=u.clone().multiplyScalar(n).add(r);two2three(p,a,L),_.push(L.x,L.y,L.z),two2three(u,a,I),y.push(I.x,I.y,I.z),g.push(t,.5+L.y/i),e.push(v++)}}function j(e,t,i,a,s){const n=new u,r=new f,o=[i,a];s<0&&o.reverse();for(const i of o)r.set(i,S*s),two2three(r,t,n),_.push(n.x,n.y,n.z),y.push(0,s,0),g.push(.5,.5),e.push(v++)}function k(i,a,s){const n=new f(Math.sin(s),Math.cos(s)),r=new f(-Math.cos(s),Math.sin(s)),o=new u,h=i<0?(e,t,i)=>E.push(e,t,i):(e,t,i)=>E.push(e,i,t),l=new f((e+t+$+O)/4,0);two2three(l,n,o),_.push(o.x,o.y,o.z),y.push(r.x,0,r.y),g.push(.5,.5);const m=v++;for(const e of a){const t=_.slice(3*e,3*e+3);_.push(...t),y.push(r.x,0,r.y);const i=g.slice(2*e,2*e+2);g.push(...i),v++}for(let e=m+1;e<v-1;e++)h(m,e,e+1);h(m,v-1,m+1)}o<2*Math.PI&&(k(-1,B[0],r),k(1,B[B.length-1],r+o)),this.setIndex(E),this.setAttribute("position",new p(_,3)),this.setAttribute("normal",new p(y,3)),this.setAttribute("uv",new p(g,2))}}function two2three(e,t,i){i.x=e.x*t.x,i.y=e.y,i.z=e.x*t.y}function offset3d(e,t,i,a,s,n){const r=t.clone().sub(e),o=i.clone().sub(e),h=r.angleTo(o);if(r.normalize(),o.normalize(),a===s){const t=r.add(o).normalize();n.copy(e).addScaledVector(t,a/Math.sin(h/2))}else{const t=r.angleTo(o);n.copy(e),n.addScaledVector(r,s/Math.sin(t)),n.addScaledVector(o,a/Math.sin(t))}}function projectOntoLine(e,t,i){const a=e.clone().sub(t),s=i.clone().sub(t);return a.projectOnVector(s),a.add(t)}function intersectLines(e,t,i,a){const s=e.clone().sub(i),n=a.clone().sub(i),r=t.clone().sub(e);if(n.manhattanLength()<=3*Number.Epsilon||r.manhattanLength()<=3*Number.Epsilon)return!1;const o=s.dot(n),h=n.dot(r),l=s.dot(r),m=r.dot(r),c=n.dot(n),d=m*c-h*h;if(Math.abs(d)<=Number.Epsilon)return!1;const f=(o*h-l*c)/d,u=(o+h*f)/c,p=e.clone().addScaledVector(r,f),E=i.clone().addScaledVector(n,u);return!(p.distanceToSquared(E)>Number.Epsilon)&&p}SPE.CylinderGeometry.RoundedCylinderBufferGeometry=RoundedCylinderBufferGeometry,SPE.PyramidGeometry=new function(){this.build=function({width:e=100,height:t=e,depth:i=e,radialSegments:a=4,heightSegments:s=1,openEnded:n,cornerRadius:r=0,cornerSegments:o=8}){e=Math.abs(e),t=Math.abs(t),i=Math.abs(i);let h=new RoundedPyramidBufferGeometry(.5*e,t,a,s,n,r,o);return h.scale(1,1,i/e),h.userData={type:"PyramidGeometry",parameters:{width:e,height:t,depth:i,radialSegments:a,heightSegments:s,openEnded:n,cornerRadius:r,cornerSegments:o}},h},this.buildFromGeometry=function(e,{width:t=e.userData.parameters.width,height:i=e.userData.parameters.height,depth:a=e.userData.parameters.depth,radialSegments:s=e.userData.parameters.radialSegments,heightSegments:n=e.userData.parameters.heightSegments,openEnded:r=e.userData.parameters.openEnded,cornerRadius:o=e.userData.parameters.cornerRadius,cornerSegments:h=e.userData.parameters.cornerSegments}){return this.build({width:t,height:i,depth:a,radialSegments:s,heightSegments:n,openEnded:r,cornerRadius:o,cornerSegments:h})}};class RoundedPyramidBufferGeometry extends THREE.BufferGeometry{constructor(e=.5,t=1,i=4,a=1,s=!1,n=0,r=4){const o=THREE.Vector2,h=THREE.Vector3;super(),this.type="RoundedPyramidBufferGeometry",this.parameters={radius:e,height:t,radialSegments:i,heightSegments:a,openEnded:s,cornerRadius:n,cornerSegments:r};i=Math.floor(Math.max(3,i)),a=Math.floor(a),r=Math.floor(r);const l=[],m=[],c=[],d=[];let f=0;const u=t/2,p=Math.PI/i,E=e*Math.cos(Math.PI/i),_=2*Math.PI/i,y=(i-2)*Math.PI/i,g=Math.PI-y,v=new h(0,-u,0),S=new h(0,u,0),I=new o(e,-u),L=new o(E,-u),T=(new o).copy(S).sub(L),R=(new o).copy(S).sub(I),b=new o(T.y,-T.x).normalize(),w=new o(R.y,-R.x).normalize(),P=e*Math.cos(Math.PI/i)*Math.tan((Math.PI-T.angle())/2)-1e-8;let A;n=Math.min(n,P);{const e=new h(b.x,b.y,0),t=new h(Math.cos(_)*e.x,e.y,Math.sin(_)*e.x);A=e.angleTo(t)}const M=n/Math.tan((Math.PI-T.angle())/2),x=n/Math.tan((Math.PI-A)/2),$=new h;if(!s){m.push(v.x,v.y,v.z),c.push(0,-1,0),d.push(0,0);const e=f++,t=[],a=I.clone(),s=M/Math.cos(Math.PI/i);a.x-=s;for(let e=0;e<i;e++){const s=e/i*Math.PI*2+p,n=new o(Math.sin(s),Math.cos(s));two2three(a,n,$),m.push($.x,$.y,$.z),c.push(0,-1,0),d.push(0,0),t.push(f++)}for(let i=0;i<t.length;i++)l.push(t[i],e,t[(i+1)%t.length])}const O=[];{const e=new h,t=new h,a=new h,s=new h,u=new h,E=new h;for(let _=0;_<i;_++){const y=_/i*Math.PI*2+p,g=(_+.5)/i*Math.PI*2+p,L=(_+1)/i*Math.PI*2+p,R=new o(Math.sin(y),Math.cos(y)),P=new o(Math.sin(g),Math.cos(g)),$=new o(Math.sin(L),Math.cos(L));two2three(I,R,t),two2three(I,$,a),two2three(b,P,e),offset3d(S,t,a,x,x,s),m.push(s.x,s.y,s.z),offset3d(t,S,a,x,M,u),m.push(u.x,u.y,u.z),offset3d(a,t,S,M,x,E),m.push(E.x,E.y,E.z),c.push(e.x,e.y,e.z),c.push(e.x,e.y,e.z),c.push(e.x,e.y,e.z),d.push(0,0),d.push(0,0),d.push(0,0);const H=f++,G=f++,D=f++;if(l.push(H,G,D),n>0){{const e=t.clone().add(a).multiplyScalar(.5),i=S.clone().sub(e).normalize(),s=v.clone().sub(e).normalize().add(i).normalize().multiplyScalar(-1);N(e,E.clone().sub(u),s,T.angle())}let o,p;{const e=new h;two2three(w,$,e);let t=E.clone().add(s).multiplyScalar(.5);t=projectOntoLine(t,a,S);const i=E.clone().sub(s);[o,p]=N(t,i,e,A,s.y)}{const e=o,t=e.clone().setY(0).normalize(),i=new h(0,-1,0),a=t.clone().cross(i);C(e,t,i,a)}O.concat(p);{const t=T.angle(),a=Math.PI-t,s=S.clone();s.y-=n/Math.sin(t-Math.PI/2);new h;const o=new h,u=[];for(let t=0;t<r;t++){const h=[],l=Math.PI/2-a*t/r,p=Math.cos(l),E=Math.sin(l);let _=g;for(var U=0;U<=t;U++){const a=Math.cos(_),r=Math.sin(_);e.x=p*r,e.y=E,e.z=p*a,o.copy(s).addScaledVector(e,n),m.push(o.x,o.y,o.z),c.push(e.x,e.y,e.z),d.push(0,0),h.push(f++),_+=2*Math.PI/t/i}u.push(h)}p.reverse(),u.push(p);const E=u.length-1;for(let e=0;e<E;e++){const t=u[e],i=u[e+1],a=t.length-1;l.push(i[1],t[0],i[0]);for(let e=1;e<=a;e++)l.push(t[e],t[e-1],i[e]),l.push(i[e+1],t[e],i[e])}}}}}function N(e,t,i,a,s){const o=-a/2,u=(Math.PI-a)/2,p=t.clone().normalize().cross(i);e.addScaledVector(i,-n/Math.sin(u));const E=new h,_=new h,y=f,g=[];for(let h=0;h<=r;h++){const l=o+h/r*a;_.set(0,0,0),_.addScaledVector(p,Math.sin(l)),_.addScaledVector(i,Math.cos(l));for(let i=0;i<=1;i++){const a=i/1-.5;if(E.copy(e),E.addScaledVector(t,a),E.addScaledVector(_,n),null!=s){const e=Math.max(0,E.y-s);E.addScaledVector(t,-e/t.y)}m.push(E.x,E.y,E.z),c.push(_.x,_.y,_.z),d.push(0,0),0===i&&g.push(f),f++}}for(let e=0;e<r;e++)for(let t=0;t<1;t++){const i=y+t+2*e,a=i+2,s=a+1,n=i+1;l.push(i,a,n),l.push(a,s,n)}return[e.clone().addScaledVector(t,.5),g]}function C(e,t,i,a){const s=Math.PI/2,o=R.angle()-s,u=[],p=new h,E=new h;for(let h=0;h<=r;h++){const l=[],y=h/r;for(var _=0;_<=h;_++){const r=((h?_/h:0)-.5)*g,u=Math.cos(r),v=Math.sin(r),S=(s+Math.atan(Math.tan(o)*u))*y,I=Math.cos(S),L=Math.sin(S);p.set(0,0,0),p.addScaledVector(t,L*u),p.addScaledVector(i,I),p.addScaledVector(a,L*v),E.copy(e).addScaledVector(p,n),m.push(E.x,E.y,E.z),c.push(p.x,p.y,p.z),d.push(0,0),l.push(f++)}u.push(l)}const y=u.length-1;for(let e=0;e<y;e++){const t=u[e],i=u[e+1],a=t.length-1;l.push(t[0],i[1],i[0]);for(let e=1;e<=a;e++)l.push(t[e-1],t[e],i[e]),l.push(t[e],i[e+1],i[e])}}this.setIndex(l),this.setAttribute("position",new THREE.Float32BufferAttribute(m,3)),this.setAttribute("normal",new THREE.Float32BufferAttribute(c,3)),this.setAttribute("uv",new THREE.Float32BufferAttribute(d,2))}}SPE.SphereGeometry=new function(){this.build=function({width:e=100,height:t=e,depth:i=e,widthSegments:a=64,heightSegments:s=64,phiStart:n,phiLength:r,thetaStart:o,thetaLength:h}){e=Math.abs(e),t=Math.abs(t),i=Math.abs(i);let l=new THREE.SphereBufferGeometry(.5*e,a,s,n,r,o,h);return l.scale(1,t/e,i/e),l.userData={type:"SphereGeometry",parameters:{width:e,height:t,depth:i,widthSegments:a,heightSegments:s,phiStart:n,phiLength:r,thetaStart:o,thetaLength:h}},l},this.buildFromGeometry=function(e,{width:t=e.userData.parameters.width,height:i=e.userData.parameters.height,depth:a=e.userData.parameters.depth,widthSegments:s=e.userData.parameters.widthSegments,heightSegments:n=e.userData.parameters.heightSegments,phiStart:r=e.userData.parameters.phiStart,phiLength:o=e.userData.parameters.phiLength,thetaStart:h=e.userData.parameters.thetaStart,thetaLength:l=e.userData.parameters.thetaLength}){return this.build({width:t,height:i,depth:a,widthSegments:s,heightSegments:n,phiStart:r,phiLength:o,thetaStart:h,thetaLength:l})}},SPE.TorusGeometry=new function(){this.build=function({width:e=100,height:t=e,depth:i,tubePercent:a=50,radialSegments:s=32,tubularSegments:n=64,arc:r=2*Math.PI}){let o=.25*e*a*.01,h=.5*e-o;i=i||2*o;let l=new THREE.TorusBufferGeometry(h,o,s,n,r);return l.scale(1,t/e,i/(2*o)),l.userData={type:"TorusGeometry",parameters:{width:e,height:t,depth:i,tubePercent:a,radialSegments:s,tubularSegments:n,arc:r}},l},this.buildFromGeometry=function(e,{width:t=e.userData.parameters.width,height:i=e.userData.parameters.height,depth:a=e.userData.parameters.depth,tubePercent:s=e.userData.parameters.tubePercent,radialSegments:n=e.userData.parameters.radialSegments,tubularSegments:r=e.userData.parameters.tubularSegments,arc:o=e.userData.parameters.arc}){return this.build({width:t,height:i,depth:a,tubePercent:s,radialSegments:n,tubularSegments:r,arc:o})}},SPE.Geometry={},SPE.Geometry.Utils=new function(){this.roundShapePolygon=function(e,t,i){var a,s,n,r,o,h,l,m,c,d,f,u,p,E,_,y,g,v=function(e,t,i){i.x=t.x-e.x,i.y=t.y-e.y,i.len=Math.sqrt(i.x*i.x+i.y*i.y),i.nx=i.x/i.len,i.ny=i.y/i.len,i.ang=Math.atan2(i.ny,i.nx)};for(m={},c={},o=t[(r=t.length)-2],e.curves=[],a=1;a<r-1;a++)h=t[a%r],l=t[(a+1)%r],v(h,o,m),v(h,l,c),d=m.nx*c.ny-m.ny*c.nx,f=m.nx*c.nx-m.ny*-c.ny,E=Math.asin(d),u=1,p=!1,f<0?E<0?E=Math.PI+E:(E=Math.PI-E,u=-1,p=!0):E>0&&(u=-1,p=!0),_=E/2,(g=Math.abs(Math.cos(_)*i/Math.sin(_)))>Math.min(m.len/2,c.len/2)?(g=Math.min(m.len/2,c.len/2),y=Math.abs(g*Math.sin(_)/Math.cos(_))):y=i,s=h.x+c.nx*g,n=h.y+c.ny*g,s+=-c.ny*y*u,n+=c.nx*y*u,e.absarc(s,n,y,m.ang+Math.PI/2*u,c.ang-Math.PI/2*u,p),o=h,h=l;e.closePath()},this.resizeGeometry=function(e,{width:t,height:i,depth:a}){t=Math.abs(t),i=Math.abs(i),a=Math.abs(a);const s=e.userData.parameters;let n,r,o;0===t?(t=s.width,n=1):n=t/s.width,0===i?(i=s.height,r=1):r=i/s.height,0===a?(a=s.depth,o=1):o=a/s.depth,e.scale(n,r,o),s.width=t,s.height=i,s.depth=a},this.addBarycentricAttribute=function(e,t){const i=[new THREE.Vector3(1,0,0),new THREE.Vector3(0,1,0),new THREE.Vector3(0,0,1)],a=e.attributes.position,s=new Float32Array(3*a.count);for(let e=0,t=a.count;e<t;e++)i[e%3].toArray(s,3*e);e.setAttribute(t,new THREE.Float32BufferAttribute(s,3))},this.removeBarycentricAttribute=function(e,t){e.deleteAttribute(t)},this.loadFromUrl=function(e){return new Promise((function(t,i){(new THREE.BufferGeometryLoader).load(e,(function(e){t(e)}))}))}},SPE.Raycaster=class extends THREE.Raycaster{setFromCamera(e,t){t&&t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t&&t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,-1).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type.")}createRaycastLineHelper(){const e=new THREE.LineBasicMaterial({color:16711680,linewidth:10}),t=new THREE.Geometry,i=new THREE.Vector3(this.ray.origin.x,this.ray.origin.y,this.ray.origin.z),a=new THREE.Vector3(this.ray.direction.x,this.ray.direction.y,this.ray.direction.z),s=(new THREE.Vector3).lerpVectors(i,a,.5);return a.multiplyScalar(0),t.vertices.push(i),t.vertices.push(s),t.vertices.push(a),new THREE.Line(t,e)}},SPE.Math=class{static slerp(e,t,i,a){if(0===a)return i.copy(e);if(1===a)return i.copy(t);var s=e.w*t.w+e.x*t.x+e.y*t.y+e.z*t.z;if(s>=1)return i.copy(e);var n=1-s*s;if(n<=Number.EPSILON){var r=1-a;return i.w=r*e.w+a*t.w,i.x=r*e.x+a*t.x,i.y=r*e.y+a*t.y,i.z=r*e.z+a*t.z,i.normalize(),i}var o=Math.sqrt(n),h=Math.atan2(o,s),l=Math.sin((1-a)*h)/o,m=Math.sin(a*h)/o;return i.w=e.w*l+t.w*m,i.x=e.x*l+t.x*m,i.y=e.y*l+t.y*m,i.z=e.z*l+t.z*m,i}static getRandomInt(e,t){return e=Math.ceil(e),t=Math.floor(t),Math.floor(Math.random()*(t-e)+e)}static getProjection(e,t,i){let a=e.clone().sub(t),s=i.clone().sub(t),n=t.distanceTo(i);return a.dot(s)/n}static projectOnVector(e,t){return e.clone().dot(t)/t.length()}static angle2D(e,t,i,a,s=!1){let n=i-e,r=a-t,o=Math.atan2(r,n);return o*=180/Math.PI,s&&o<0&&(o=360+o),o}static angle3D(e,t,i){let a=e.clone().sub(t),s=i.clone().sub(t),n=t.distanceTo(e),r=t.distanceTo(i),o=a.dot(s)/(n*r);return Math.acos(o)}static rotatePosition2D(e,t,i){return{x:e*Math.cos(i)-t*Math.sin(i),y:e*Math.sin(i)+t*Math.cos(i),z:0}}static rotatePosition3D(e,t){return e.clone().applyMatrix3(SPE.Math.getRotateMatrix(t.x,t.y,t.z))}static getRotateMatrix(e,t,i){let a=new THREE.Matrix3,s=new THREE.Matrix3,n=new THREE.Matrix3;return a.set(1,0,0,0,Math.cos(e),-Math.sin(e),0,Math.sin(e),Math.cos(e)),s.set(Math.cos(t),0,Math.sin(t),0,1,0,-Math.sin(t),0,Math.cos(t)),n.set(Math.cos(i),-Math.sin(i),0,Math.sin(i),Math.cos(i),0,0,0,1),a.multiply(s).multiply(n)}static round(e,t){let i=(e+"e").split("e");return i=(Math.round(i[0]+"e"+(+i[1]+t))+"e").split("e"),+(i[0]+"e"+(+i[1]-t))}static normalize(e,t,i){return(e-t)/(i-t)}static lerp(e,t,i){return(i-t)*e+t}static map(e,t,i,a,s){return SPE.Math.lerp(SPE.Math.normalize(e,t,i),a,s)}static clamp(e,t,i){return Math.min(Math.max(e,t),i)}static getMiddlePointByPerc(e,t,i){let a=t.clone().sub(e),s=a.length();return a=a.normalize().multiplyScalar(s*i),e.clone().add(a)}static getVectorDistanceInFloat(e,t){let i=e.x-t.x,a=e.y-t.y,s=e.z-t.z;return Math.sqrt(i*i+a*a+s*s)}static getVectorDistanceInVector(e,t){let i=e.x-t.x,a=e.y-t.y,s=e.z-t.z;return new THREE.Vector3(i,a,s)}static getObjectSize(e){let t=new THREE.Vector3;return e.geometry.computeBoundingBox(),t.x=e.geometry.boundingBox.max.x-e.geometry.boundingBox.min.x,t.y=e.geometry.boundingBox.max.y-e.geometry.boundingBox.min.y,t.z=e.geometry.boundingBox.max.z-e.geometry.boundingBox.min.z,t}static resetTransform(e,t){for(let i=0;i<t.length;i++)"all"==e?(t[i].position.set(0,0,0),t[i].scale.set(1,1,1),t[i].rotation.set(0,0,0)):"scale"==e?t[i].scale.set(1,1,1):t[i].rotation.set(0,0,0),t[i].geometry&&t[i].geometry.computeBoundingBox()}static containsObject(e,t){for(let i=0;i<t.length;i++)if(t[i]===e)return!0;return!1}static findCentroid(e){let t=new THREE.Vector3,i=e.length;for(let i=0;i<e.length;i++)t.set(t.x+e[i].position.x,t.y+e[i].position.y,t.z+e[i].position.z);return t.set(t.x/i,t.y/i,t.z/i),t}static removeFromArray(e,t){const i=e.indexOf(t);e.splice(i,1)}static getPositionRelativeToElement(e){let t=e.target.getBoundingClientRect();return{mx:e.clientX-t.left,my:e.clientY-t.top}}static getElementMousePos(e,t){return{mx:t.pageX-e.offset().left,my:t.pageY-e.offset().top}}static changeColor(e,t){let i=e.geometry.attributes.color.array,a=3*e.geometry.attributes.color.count,s=1/(t.steps*a),n=new THREE.Color;for(let e=0,r=a;e<r;e++)n.set(makeColorGradient(e,s,t.phase)),i[3*e]=n.r,i[3*e+1]=n.g,i[3*e+2]=n.b;e.geometry.attributes.color.needsUpdate=!0}static getColoredBufferLine(e,t,i){let a,s,n,r=i.vertices,o=i.vertices.length,h=new THREE.BufferGeometry,l=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors}),m=new Float32Array(3*o),c=new Float32Array(3*o),d=1/(e*o),f=new THREE.Color;for(let e=0,i=o;e<i;e++)a=r[e].x,s=r[e].y,n=r[e].z,m[3*e]=a,m[3*e+1]=s,m[3*e+2]=n,f.set(makeColorGradient(e,d,t)),c[3*e]=f.r,c[3*e+1]=f.g,c[3*e+2]=f.b;return h.setAttribute("position",new THREE.BufferAttribute(m,3)),h.setAttribute("color",new THREE.BufferAttribute(c,3)),new THREE.Line(h,l)}static makeColorGradient(e,t,i){let a,s,n;s=n=a=t;let r=i+2,o=i+4,h=127*Math.sin(a*e+i)+128,l=127*Math.sin(s*e+r)+128,m=127*Math.sin(n*e+o)+128;return parseInt("0x"+_byte2Hex(h)+_byte2Hex(l)+_byte2Hex(m))}static _byte2Hex(e){let t="0123456789ABCDEF";return String(t.substr(e>>4&15,1))+t.substr(15&e,1)}static drawBezierTangent(e,t){let i=new THREE.LineCurve3(e,t).getPoints(1),a=(new THREE.BufferGeometry).setFromPoints(i);return new THREE.Line(a,new THREE.LineBasicMaterial({color:16711680}))}static fixUvs(e,t,i){for(let a=0;a<e.attributes.uv.array.length;a+=2)e.attributes.uv.array[a]=(e.attributes.uv.array[a]+t/2)/t,e.attributes.uv.array[a+1]=1-(e.attributes.uv.array[a+1]-i/2)/i*-1}static flattenArray(e){return e=[].concat.apply([],e)}static sortNumber(e,t){return e-t}static swapArrayValues(e,t,i){let a=e[t];e[t]=e[i],e[i]=a}};;
var SPLINE_EXPORTED_SCENE = {"scenes":[{"nodes":[0]}],"nodes":[{"children":[1,2,3,4,5,6,7,8]},{"mesh_spe":0,"material":0,"spe_interaction":0,"translation":[121.0860687111064,82.72965610566727,78.84883871331299],"rotation":[0.12479994942352228,0.2044513735598001,0.23493977862940776,0.9420339213058955],"scale":[0.9999999999999998,1,0.9999999999999998],"visible":true,"castShadow":true,"receiveShadow":true,"hiddenMatrix":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],"type":"mesh3d","uuid":"39867A5A-633C-4EDC-8652-BEE56FDBC281","spe_cloner_visible":true},{"mesh_spe":1,"material":1,"spe_interaction":1,"translation":[328,392.99598613825907,-1],"rotation":[0,0,0,1],"scale":[1,1,1],"visible":true,"castShadow":true,"receiveShadow":true,"hiddenMatrix":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],"type":"mesh3d","uuid":"A0E2FCBD-5C2B-466C-AEE9-E546D07744C2","spe_cloner_visible":true},{"mesh_spe":2,"material":2,"spe_interaction":2,"translation":[-4.113481026056377,423.2783159957378,118.31433242144699],"rotation":[0.23857067548263183,-0.20937347373424886,-0.18649214669620967,0.9297674228089807],"scale":[0.9999999999999998,0.9999999999999996,0.9999999999999997],"visible":true,"castShadow":true,"receiveShadow":true,"hiddenMatrix":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],"type":"mesh3d","uuid":"F67899E4-126D-443E-B5F8-FD804291291F","spe_cloner_visible":true},{"mesh_spe":3,"material":3,"spe_interaction":3,"translation":[-330.10399999999976,144.2247840169271,42.99145406268508],"rotation":[0.2637979366518061,0.32464391385284364,-0.09480381326009019,0.9033433537741357],"scale":[1,1,0.9999999999999998],"visible":true,"castShadow":true,"receiveShadow":true,"hiddenMatrix":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],"type":"mesh3d","uuid":"58411AD1-0507-423E-B0AE-26A04DC090E3","spe_cloner_visible":true},{"mesh_spe":4,"material":4,"spe_interaction":4,"translation":[336.3918128444384,100.31518634727098,125.01140949319957],"rotation":[0.3899436657713891,0.015106245375136301,0.23843797726135638,0.8893048239354998],"scale":[1,0.9999999999999998,1],"visible":true,"castShadow":true,"receiveShadow":true,"hiddenMatrix":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],"type":"mesh3d","uuid":"7FD896CB-9D6C-4ADC-84D2-46157C7005F7","spe_cloner_visible":true},{"mesh_spe":5,"material":5,"spe_interaction":5,"translation":[-304.6081871555616,443.315186347271,116.2529348794754],"rotation":[0.06259390309146003,-0.41847683456588475,0.7836628195383777,0.4547875630452686],"scale":[1,1.0000000000000002,1],"visible":true,"castShadow":true,"receiveShadow":true,"hiddenMatrix":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],"type":"mesh3d","uuid":"400CB436-CE09-4EC3-8DCB-D353C9D497F4","spe_cloner_visible":true},{"camera":0,"translation":[-0.14877197991195745,261.4858261320932,1000.0000063272563],"rotation":[0.000006083360940966411,-0.00007438599016550319,4.5251682838825703e-10,0.9999999972148585],"children":[9]},{"visible":true,"extensions":{"KHR_lights_punctual":{"light":0}}},{"translation":[850000,1300000,1000000],"rotation":[0,0,0.5,0],"visible":true,"extensions":{"KHR_lights_punctual":{"light":1}}}],"meshes":[],"meshes_spe":[{"type":"PyramidGeometry","parameters":{"width":170,"height":162,"depth":167,"radialSegments":4,"heightSegments":1,"cornerRadius":19,"cornerSegments":8}},{"type":"SphereGeometry","parameters":{"width":106,"height":106,"depth":106,"widthSegments":64,"heightSegments":64}},{"type":"CubeGeometry","parameters":{"width":145,"height":145,"depth":145,"widthSegments":1,"heightSegments":1,"depthSegments":1,"cornerRadius":28,"cornerSegments":8}},{"type":"TorusGeometry","parameters":{"width":346,"height":346,"depth":87,"tubePercent":50,"radialSegments":48,"tubularSegments":96,"arc":6.283185307179586}},{"type":"CylinderGeometry","parameters":{"width":172,"height":203,"depth":172,"radiusTop":86,"radiusBottom":86,"radialSegments":64,"heightSegments":1,"openEnded":false,"thetaLength":360,"cornerRadius":18,"cornerSegments":8,"hollow":0}},{"type":"CylinderGeometry","parameters":{"width":79,"height":93,"depth":79,"radiusTop":39.5,"radiusBottom":39.5,"radialSegments":64,"heightSegments":1,"openEnded":false,"thetaLength":360,"cornerRadius":18,"cornerSegments":8,"hollow":0}}],"materials":[{"material_0_Phong":{"extensions":{"KHR_materials_common":{"technique":"PHONG","values":{"ambient":[0,0.7019607843137254,0.5529411764705883],"diffuse":[0,0.7019607843137254,0.5529411764705883],"specular":[0.06666666666666667,0.06666666666666667,0.06666666666666667],"shininess":30,"emission":[0,0,0],"transparent":true,"transparency":1}}},"spe_options":{"side":0,"wireframe":false,"flatShading":false,"visible":true},"spe_layers":[{"type":"color","uniforms":{"alpha":{"name":"alpha","value":1,"type":1},"mode":{"name":"mode","value":0,"type":1},"color":{"name":"color","value":45970,"type":6}}},{"type":"light","uniforms":{"alpha":{"name":"alpha","value":1,"type":1},"mode":{"name":"mode","value":3,"type":1}}}]}},{"material_1_Phong":{"extensions":{"KHR_materials_common":{"technique":"PHONG","values":{"ambient":[0.34901960784313724,0.34901960784313724,0.34901960784313724],"diffuse":[0.34901960784313724,0.34901960784313724,0.34901960784313724],"specular":[0.06666666666666667,0.06666666666666667,0.06666666666666667],"shininess":30,"emission":[0,0,0],"transparent":true,"transparency":1}}},"spe_options":{"side":0,"wireframe":false,"flatShading":false,"visible":true},"spe_layers":[{"type":"color","uniforms":{"alpha":{"name":"alpha","value":1,"type":1},"mode":{"name":"mode","value":0,"type":1},"color":{"name":"color","value":16751677,"type":6}}},{"type":"light","uniforms":{"alpha":{"name":"alpha","value":1,"type":1},"mode":{"name":"mode","value":3,"type":1}}}]}},{"material_2_Phong":{"extensions":{"KHR_materials_common":{"technique":"PHONG","values":{"ambient":[0.47843137254901963,0.47843137254901963,0.47843137254901963],"diffuse":[0.47843137254901963,0.47843137254901963,0.47843137254901963],"specular":[0.4745098039215686,0.4745098039215686,0.4745098039215686],"shininess":-22,"emission":[0,0,0],"transparent":true,"transparency":1}}},"spe_options":{"side":2,"wireframe":false,"flatShading":false,"visible":true},"spe_layers":[{"type":"color","uniforms":{"alpha":{"name":"alpha","value":1,"type":1},"mode":{"name":"mode","value":0,"type":1},"color":{"name":"color","value":131586,"type":6}}},{"type":"light","uniforms":{"alpha":{"name":"alpha","value":1,"type":1},"mode":{"name":"mode","value":0,"type":1}}},{"type":"fresnel","uniforms":{"alpha":{"name":"alpha","value":1,"type":1},"mode":{"name":"mode","value":3,"type":1},"bias":{"name":"bias","value":-0.28900000000000003,"type":2},"scale":{"name":"scale","value":1,"type":1},"intensity":{"name":"intensity","value":2,"type":1},"factor":{"name":"factor","value":1,"type":1},"color":{"name":"color","value":16777215,"type":6}}},{"type":"fresnel","uniforms":{"alpha":{"name":"alpha","value":1,"type":1},"mode":{"name":"mode","value":3,"type":1},"bias":{"name":"bias","value":-0.30899999999999994,"type":2},"scale":{"name":"scale","value":1,"type":1},"intensity":{"name":"intensity","value":2,"type":1},"factor":{"name":"factor","value":1,"type":1},"color":{"name":"color","value":16768841,"type":6}}}]}},{"material_3_Phong":{"extensions":{"KHR_materials_common":{"technique":"PHONG","values":{"ambient":[0.47843137254901963,0.47843137254901963,0.47843137254901963],"diffuse":[0.47843137254901963,0.47843137254901963,0.47843137254901963],"specular":[0.4745098039215686,0.4745098039215686,0.4745098039215686],"shininess":-22,"emission":[0,0,0],"transparent":true,"transparency":1}}},"spe_options":{"side":2,"wireframe":false,"flatShading":false,"visible":true},"spe_layers":[{"type":"color","uniforms":{"alpha":{"name":"alpha","value":1,"type":1},"mode":{"name":"mode","value":0,"type":1},"color":{"name":"color","value":131586,"type":6}}},{"type":"light","uniforms":{"alpha":{"name":"alpha","value":1,"type":1},"mode":{"name":"mode","value":0,"type":1}}},{"type":"fresnel","uniforms":{"alpha":{"name":"alpha","value":1,"type":1},"mode":{"name":"mode","value":3,"type":1},"bias":{"name":"bias","value":-0.28900000000000003,"type":2},"scale":{"name":"scale","value":1,"type":1},"intensity":{"name":"intensity","value":2,"type":1},"factor":{"name":"factor","value":1,"type":1},"color":{"name":"color","value":16777215,"type":6}}},{"type":"fresnel","uniforms":{"alpha":{"name":"alpha","value":1,"type":1},"mode":{"name":"mode","value":3,"type":1},"bias":{"name":"bias","value":-0.30899999999999994,"type":2},"scale":{"name":"scale","value":1,"type":1},"intensity":{"name":"intensity","value":2,"type":1},"factor":{"name":"factor","value":1,"type":1},"color":{"name":"color","value":4849590,"type":6}}}]}},{"material_4_Phong":{"extensions":{"KHR_materials_common":{"technique":"PHONG","values":{"ambient":[0.47843137254901963,0.47843137254901963,0.47843137254901963],"diffuse":[0.47843137254901963,0.47843137254901963,0.47843137254901963],"specular":[0.4745098039215686,0.4745098039215686,0.4745098039215686],"shininess":-22,"emission":[0,0,0],"transparent":true,"transparency":1}}},"spe_options":{"side":2,"wireframe":false,"flatShading":false,"visible":true},"spe_layers":[{"type":"color","uniforms":{"alpha":{"name":"alpha","value":1,"type":1},"mode":{"name":"mode","value":0,"type":1},"color":{"name":"color","value":131586,"type":6}}},{"type":"light","uniforms":{"alpha":{"name":"alpha","value":1,"type":1},"mode":{"name":"mode","value":0,"type":1}}},{"type":"fresnel","uniforms":{"alpha":{"name":"alpha","value":1,"type":1},"mode":{"name":"mode","value":3,"type":1},"bias":{"name":"bias","value":-0.28900000000000003,"type":2},"scale":{"name":"scale","value":1,"type":1},"intensity":{"name":"intensity","value":2,"type":1},"factor":{"name":"factor","value":1,"type":1},"color":{"name":"color","value":16777215,"type":6}}},{"type":"fresnel","uniforms":{"alpha":{"name":"alpha","value":1,"type":1},"mode":{"name":"mode","value":3,"type":1},"bias":{"name":"bias","value":-0.30899999999999994,"type":2},"scale":{"name":"scale","value":1,"type":1},"intensity":{"name":"intensity","value":2,"type":1},"factor":{"name":"factor","value":1,"type":1},"color":{"name":"color","value":16730441,"type":6}}}]}},{"material_5_Phong":{"extensions":{"KHR_materials_common":{"technique":"PHONG","values":{"ambient":[0.5647058823529412,0.30196078431372547,1],"diffuse":[0.5647058823529412,0.30196078431372547,1],"specular":[0.06666666666666667,0.06666666666666667,0.06666666666666667],"shininess":30,"emission":[0,0,0],"transparent":true,"transparency":1}}},"spe_options":{"side":0,"wireframe":false,"flatShading":false,"visible":true},"spe_layers":[{"type":"color","uniforms":{"alpha":{"name":"alpha","value":1,"type":1},"mode":{"name":"mode","value":0,"type":1},"color":{"name":"color","value":9457151,"type":6}}},{"type":"light","uniforms":{"alpha":{"name":"alpha","value":1,"type":1},"mode":{"name":"mode","value":3,"type":1}}}]}}],"cameras":[{"type":"Orthographic","orthographic":{"xmag":1200,"ymag":600,"zfar":50000,"znear":-50000},"spe_options":{"zoom":1.0000000000000002}}],"buffers":[],"bufferViews":[],"accessors":[],"extensions":{"KHR_lights_punctual":{"lights":[{"type":"hemispheric","name":"SceneLightAmbientDefault","color":[0.8274509803921568,0.8274509803921568,0.8274509803921568],"intensity":0.75},{"type":"directional","name":"SceneLightDirectionalDefault","color":[1,1,1],"intensity":0.75,"shadows":{"castShadow":false,"shadowmapViewRight":5,"shadowmapViewLeft":-5,"shadowmapViewTop":5,"shadowmapViewBottom":-5,"shadowmapViewNear":0.5,"shadowmapViewFar":500}}]}},"spline":{"interactions":[{"uuid":"3548A27E-E485-490D-9915-1F9F3E7D040D","selectedState":1,"states":["95B1220F-3198-494B-B058-003C01E375F6","F954ABB6-0A81-41C5-8305-CCF12674BD27"],"events":[{"type":2,"ui":{"isCollapsed":false},"targets":[{"easing":6,"duration":1000,"delay":0,"cubicControls":[0.5,0.05,0.1,0.3],"springParameters":{"mass":1,"stiffness":80,"damping":10,"velocity":0},"repeat":false,"cycle":false,"rewind":false,"object":"39867A5A-633C-4EDC-8652-BEE56FDBC281","state":"F954ABB6-0A81-41C5-8305-CCF12674BD27"}]}]},{"uuid":"51DD402C-5245-4747-B2A0-A152742787AF","selectedState":1,"states":["EA32BBB1-FE93-4201-BABA-02AD6BEC719A","7BAA30F2-F0F7-47F3-968B-90CA60ADD289"],"events":[{"type":2,"ui":{"isCollapsed":false},"targets":[{"easing":6,"duration":1000,"delay":0,"cubicControls":[0.5,0.05,0.1,0.3],"springParameters":{"mass":1,"stiffness":80,"damping":10,"velocity":0},"repeat":false,"cycle":false,"rewind":false,"object":"A0E2FCBD-5C2B-466C-AEE9-E546D07744C2","state":"7BAA30F2-F0F7-47F3-968B-90CA60ADD289"}]}]},{"uuid":"34C9AD05-7FD5-4DDA-A4E4-5C8DB46CDA0D","selectedState":0,"states":["B0888070-C92D-45CC-B0E2-E5E4E964D75C","8F01A1EE-36EC-4B53-82C3-395C5EFF71A0"],"events":[{"type":2,"ui":{"isCollapsed":false},"targets":[{"easing":6,"duration":1000,"delay":0,"cubicControls":[0.5,0.05,0.1,0.3],"springParameters":{"mass":1,"stiffness":80,"damping":10,"velocity":0},"repeat":false,"cycle":false,"rewind":false,"object":"F67899E4-126D-443E-B5F8-FD804291291F","state":"8F01A1EE-36EC-4B53-82C3-395C5EFF71A0"}]}]},{"uuid":"AA68EB16-EC98-4483-913C-6BFC1541FCF4","selectedState":0,"states":["4C486C15-7C51-4B72-A143-AAF6A667FE57","5F28888E-F715-4F22-B94F-3031698B79A7"],"events":[{"type":2,"ui":{"isCollapsed":false},"targets":[{"easing":6,"duration":1000,"delay":0,"cubicControls":[0.5,0.05,0.1,0.3],"springParameters":{"mass":1,"stiffness":80,"damping":10,"velocity":0},"repeat":false,"cycle":false,"rewind":false,"object":"58411AD1-0507-423E-B0AE-26A04DC090E3","state":"5F28888E-F715-4F22-B94F-3031698B79A7"}]}]},{"uuid":"8DA34825-4083-4372-892D-1B92869E84A3","selectedState":0,"states":["EC7893D1-1B3C-4712-8177-330336CF158A","25767D33-DC27-4C14-B42A-B75D21125559"],"events":[{"type":2,"ui":{"isCollapsed":false},"targets":[{"easing":6,"duration":1000,"delay":0,"cubicControls":[0.5,0.05,0.1,0.3],"springParameters":{"mass":1,"stiffness":80,"damping":10,"velocity":0},"repeat":false,"cycle":false,"rewind":false,"object":"7FD896CB-9D6C-4ADC-84D2-46157C7005F7","state":"25767D33-DC27-4C14-B42A-B75D21125559"}]}]},{"uuid":"4D5A8581-085C-4971-9AE4-63FDC77E66E8","selectedState":1,"states":["A1DF5CC4-12F2-4A25-A99B-0F55612C1840","8B8F7CAC-0074-44EB-89E1-EAE257DD95A2"],"events":[{"type":2,"ui":{"isCollapsed":false},"targets":[{"easing":6,"duration":1000,"delay":0,"cubicControls":[0.5,0.05,0.1,0.3],"springParameters":{"mass":1,"stiffness":80,"damping":10,"velocity":0},"repeat":false,"cycle":false,"rewind":false,"object":"400CB436-CE09-4EC3-8DCB-D353C9D497F4","state":"8B8F7CAC-0074-44EB-89E1-EAE257DD95A2"}]}]}],"interactionStates":{"95B1220F-3198-494B-B058-003C01E375F6":{"uuid":"95B1220F-3198-494B-B058-003C01E375F6","name":"Base State","position":[121.0860687111064,82.72965610566727,78.84883871331299],"rotation":[0.7026048946022551,0.25937061632863373,-0.463157772492152,"XYZ"],"scale":[1,1,1],"hiddenMatrix":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],"geometry":{"width":170,"height":162,"depth":167},"material":{"layersList":[{"id":0,"type":"color","defines":{},"uniforms":{"f0_alpha":{"value":1},"f0_mode":{"value":0},"f0_color":{"value":45965}}},{"id":1,"type":"light","defines":{},"uniforms":{"f1_alpha":{"value":1},"f1_mode":{"value":"3"}}}]}},"F954ABB6-0A81-41C5-8305-CCF12674BD27":{"uuid":"F954ABB6-0A81-41C5-8305-CCF12674BD27","name":"State 1","position":[121.0860687111064,82.72965610566727,78.84883871331299],"rotation":[0.15581689443602512,0.4598806983699485,0.4522772019081653,"XYZ"],"scale":[1,1,1],"hiddenMatrix":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],"geometry":{"width":170,"height":162,"depth":167},"material":{"layersList":[{"id":0,"type":"color","defines":{},"uniforms":{"f0_alpha":{"value":1},"f0_mode":{"value":0},"f0_color":{"value":45970}}},{"id":1,"type":"light","defines":{},"uniforms":{"f1_alpha":{"value":1},"f1_mode":{"value":"3"}}}]}},"EA32BBB1-FE93-4201-BABA-02AD6BEC719A":{"uuid":"EA32BBB1-FE93-4201-BABA-02AD6BEC719A","name":"Base State","position":[328,392.99598613825907,-1],"rotation":[0,0,0,"XYZ"],"scale":[1,1,1],"hiddenMatrix":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],"geometry":{"width":74,"height":74,"depth":74},"material":{"layersList":[{"id":0,"type":"color","defines":{},"uniforms":{"f0_alpha":{"value":1},"f0_mode":{"value":0},"f0_color":{"value":16751677}}},{"id":1,"type":"light","defines":{},"uniforms":{"f1_alpha":{"value":1},"f1_mode":{"value":"3"}}}]}},"7BAA30F2-F0F7-47F3-968B-90CA60ADD289":{"uuid":"7BAA30F2-F0F7-47F3-968B-90CA60ADD289","name":"State 1","position":[328,392.99598613825907,-1],"rotation":[0,0,0,"XYZ"],"scale":[1,1,1],"hiddenMatrix":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],"geometry":{"width":106,"height":106,"depth":106},"material":{"layersList":[{"id":0,"type":"color","defines":{},"uniforms":{"f0_alpha":{"value":1},"f0_mode":{"value":0},"f0_color":{"value":16751677}}},{"id":1,"type":"light","defines":{},"uniforms":{"f1_alpha":{"value":1},"f1_mode":{"value":"3"}}}]}},"B0888070-C92D-45CC-B0E2-E5E4E964D75C":{"uuid":"B0888070-C92D-45CC-B0E2-E5E4E964D75C","name":"Base State","position":[-4.113481026056377,423.2783159957378,118.31433242144699],"rotation":[0.4293081023122719,-0.4987411167058649,-0.28497571355887563,"XYZ"],"scale":[0.9999999999999998,0.9999999999999997,0.9999999999999998],"hiddenMatrix":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],"geometry":{"width":145,"height":145,"depth":145},"material":{"layersList":[{"id":5,"type":"color","defines":{},"uniforms":{"f5_alpha":{"value":1},"f5_mode":{"value":0},"f5_color":{"value":131586}}},{"id":1,"type":"light","defines":{},"uniforms":{"f1_alpha":{"value":1},"f1_mode":{"value":"0"}}},{"id":3,"type":"fresnel","defines":{"USE_LAYER_FRESNEL":""},"uniforms":{"f3_alpha":{"value":1},"f3_mode":{"value":"3"},"f3_bias":{"value":-0.28900000000000003},"f3_scale":{"value":1},"f3_intensity":{"value":2},"f3_factor":{"value":1},"f3_color":{"value":16777215}}},{"id":10,"type":"fresnel","defines":{"USE_LAYER_FRESNEL":""},"uniforms":{"f10_alpha":{"value":1},"f10_mode":{"value":"3"},"f10_bias":{"value":-0.30899999999999994},"f10_scale":{"value":1},"f10_intensity":{"value":2},"f10_factor":{"value":1},"f10_color":{"value":16768841}}}]}},"8F01A1EE-36EC-4B53-82C3-395C5EFF71A0":{"uuid":"8F01A1EE-36EC-4B53-82C3-395C5EFF71A0","name":"State 1","position":[-4.113481026056377,423.2783159957378,118.31433242144699],"rotation":[1.9477874452256716,-2.0172515494550463,-0.28497571355887563,"XYZ"],"scale":[0.9999999999999998,0.9999999999999997,0.9999999999999998],"hiddenMatrix":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],"geometry":{"width":145,"height":145,"depth":145},"material":{"layersList":[{"id":5,"type":"color","defines":{},"uniforms":{"f5_alpha":{"value":1},"f5_mode":{"value":0},"f5_color":{"value":131586}}},{"id":1,"type":"light","defines":{},"uniforms":{"f1_alpha":{"value":1},"f1_mode":{"value":"0"}}},{"id":3,"type":"fresnel","defines":{"USE_LAYER_FRESNEL":""},"uniforms":{"f3_alpha":{"value":1},"f3_mode":{"value":"3"},"f3_bias":{"value":-0.28900000000000003},"f3_scale":{"value":1},"f3_intensity":{"value":2},"f3_factor":{"value":1},"f3_color":{"value":16777215}}},{"id":10,"type":"fresnel","defines":{"USE_LAYER_FRESNEL":""},"uniforms":{"f10_alpha":{"value":1},"f10_mode":{"value":"3"},"f10_bias":{"value":-0.30899999999999994},"f10_scale":{"value":1},"f10_intensity":{"value":2},"f10_factor":{"value":1},"f10_color":{"value":16768841}}}]}},"4C486C15-7C51-4B72-A143-AAF6A667FE57":{"uuid":"4C486C15-7C51-4B72-A143-AAF6A667FE57","name":"Base State","position":[-330.10399999999976,144.2247840169271,42.99145406268508],"rotation":[0.6915159056042599,0.5662981214887617,-0.41799641038708985,"XYZ"],"scale":[1,1,1],"hiddenMatrix":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],"geometry":{"width":346,"height":346,"depth":87},"material":{"layersList":[{"id":5,"type":"color","defines":{},"uniforms":{"f5_alpha":{"value":1},"f5_mode":{"value":0},"f5_color":{"value":131586}}},{"id":1,"type":"light","defines":{},"uniforms":{"f1_alpha":{"value":1},"f1_mode":{"value":"0"}}},{"id":3,"type":"fresnel","defines":{"USE_LAYER_FRESNEL":""},"uniforms":{"f3_alpha":{"value":1},"f3_mode":{"value":"3"},"f3_bias":{"value":-0.28900000000000003},"f3_scale":{"value":1},"f3_intensity":{"value":2},"f3_factor":{"value":1},"f3_color":{"value":16777215}}},{"id":10,"type":"fresnel","defines":{"USE_LAYER_FRESNEL":""},"uniforms":{"f10_alpha":{"value":1},"f10_mode":{"value":"3"},"f10_bias":{"value":-0.30899999999999994},"f10_scale":{"value":1},"f10_intensity":{"value":2},"f10_factor":{"value":1},"f10_color":{"value":4849590}}}]}},"5F28888E-F715-4F22-B94F-3031698B79A7":{"uuid":"5F28888E-F715-4F22-B94F-3031698B79A7","name":"State 1","position":[-330.10399999999976,144.2247840169271,42.99145406268508],"rotation":[-0.6174974893555938,0.2871066619530673,-0.41799641038708985,"XYZ"],"scale":[1,1,1],"hiddenMatrix":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],"geometry":{"width":346,"height":346,"depth":87},"material":{"layersList":[{"id":5,"type":"color","defines":{},"uniforms":{"f5_alpha":{"value":1},"f5_mode":{"value":0},"f5_color":{"value":131586}}},{"id":1,"type":"light","defines":{},"uniforms":{"f1_alpha":{"value":1},"f1_mode":{"value":"0"}}},{"id":3,"type":"fresnel","defines":{"USE_LAYER_FRESNEL":""},"uniforms":{"f3_alpha":{"value":1},"f3_mode":{"value":"3"},"f3_bias":{"value":-0.28900000000000003},"f3_scale":{"value":1},"f3_intensity":{"value":2},"f3_factor":{"value":1},"f3_color":{"value":16777215}}},{"id":10,"type":"fresnel","defines":{"USE_LAYER_FRESNEL":""},"uniforms":{"f10_alpha":{"value":1},"f10_mode":{"value":"3"},"f10_bias":{"value":-0.30899999999999994},"f10_scale":{"value":1},"f10_intensity":{"value":2},"f10_factor":{"value":1},"f10_color":{"value":4849590}}}]}},"EC7893D1-1B3C-4712-8177-330336CF158A":{"uuid":"EC7893D1-1B3C-4712-8177-330336CF158A","name":"Base State","position":[336.3918128444384,100.31518634727098,125.01140949319957],"rotation":[0.7788287009220307,0.2144631129385554,0.43562157270648594,"XYZ"],"scale":[1,1,1],"hiddenMatrix":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],"geometry":{"width":172,"height":203,"depth":172},"material":{"layersList":[{"id":5,"type":"color","defines":{},"uniforms":{"f5_alpha":{"value":1},"f5_mode":{"value":0},"f5_color":{"value":131586}}},{"id":1,"type":"light","defines":{},"uniforms":{"f1_alpha":{"value":1},"f1_mode":{"value":"0"}}},{"id":3,"type":"fresnel","defines":{"USE_LAYER_FRESNEL":""},"uniforms":{"f3_alpha":{"value":1},"f3_mode":{"value":"3"},"f3_bias":{"value":-0.28900000000000003},"f3_scale":{"value":1},"f3_intensity":{"value":2},"f3_factor":{"value":1},"f3_color":{"value":16777215}}},{"id":10,"type":"fresnel","defines":{"USE_LAYER_FRESNEL":""},"uniforms":{"f10_alpha":{"value":1},"f10_mode":{"value":"3"},"f10_bias":{"value":-0.30899999999999994},"f10_scale":{"value":1},"f10_intensity":{"value":2},"f10_factor":{"value":1},"f10_color":{"value":16730441}}}]}},"25767D33-DC27-4C14-B42A-B75D21125559":{"uuid":"25767D33-DC27-4C14-B42A-B75D21125559","name":"State 1","position":[336.3918128444384,100.31518634727098,125.01140949319957],"rotation":[0.13299408900196788,0.21446311293855547,0.8021533242165939,"XYZ"],"scale":[1,1,1],"hiddenMatrix":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],"geometry":{"width":172,"height":203,"depth":172},"material":{"layersList":[{"id":5,"type":"color","defines":{},"uniforms":{"f5_alpha":{"value":1},"f5_mode":{"value":0},"f5_color":{"value":131586}}},{"id":1,"type":"light","defines":{},"uniforms":{"f1_alpha":{"value":1},"f1_mode":{"value":"0"}}},{"id":3,"type":"fresnel","defines":{"USE_LAYER_FRESNEL":""},"uniforms":{"f3_alpha":{"value":1},"f3_mode":{"value":"3"},"f3_bias":{"value":-0.28900000000000003},"f3_scale":{"value":1},"f3_intensity":{"value":2},"f3_factor":{"value":1},"f3_color":{"value":16777215}}},{"id":10,"type":"fresnel","defines":{"USE_LAYER_FRESNEL":""},"uniforms":{"f10_alpha":{"value":1},"f10_mode":{"value":"3"},"f10_bias":{"value":-0.30899999999999994},"f10_scale":{"value":1},"f10_intensity":{"value":2},"f10_factor":{"value":1},"f10_color":{"value":16730441}}}]}},"A1DF5CC4-12F2-4A25-A99B-0F55612C1840":{"uuid":"A1DF5CC4-12F2-4A25-A99B-0F55612C1840","name":"Base State","position":[-304.6081871555616,443.315186347271,116.2529348794754],"rotation":[0.7788287009220308,0.21446311293855547,-0.9934809330743224,"XYZ"],"scale":[1,1,1],"hiddenMatrix":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],"geometry":{"width":79,"height":93,"depth":79},"material":{"layersList":[{"id":0,"type":"color","defines":{},"uniforms":{"f0_alpha":{"value":1},"f0_mode":{"value":0},"f0_color":{"value":9457151}}},{"id":1,"type":"light","defines":{},"uniforms":{"f1_alpha":{"value":1},"f1_mode":{"value":"3"}}}]}},"8B8F7CAC-0074-44EB-89E1-EAE257DD95A2":{"uuid":"8B8F7CAC-0074-44EB-89E1-EAE257DD95A2","name":"State 1","position":[-304.6081871555616,443.315186347271,116.2529348794754],"rotation":[0.8376888783481155,-0.2864316792968803,2.2181414556083547,"XYZ"],"scale":[1,1,1],"hiddenMatrix":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],"geometry":{"width":79,"height":93,"depth":79},"material":{"layersList":[{"id":0,"type":"color","defines":{},"uniforms":{"f0_alpha":{"value":1},"f0_mode":{"value":0},"f0_color":{"value":9457151}}},{"id":1,"type":"light","defines":{},"uniforms":{"f1_alpha":{"value":1},"f1_mode":{"value":"3"}}}]}}},"textures":{},"images":{},"mainCameraIndex":7,"usePrimitives":true,"bgColor":[0.06666666666666667,0.06666666666666667,0.06666666666666667],"orbitDamped":true,"orbitTarget":[1.3248954155176339e-27,261.49799285400866,0.000017462392604124348],"cameraType":"Orthographic","cameraRotate":true,"cameraPan":false,"cameraZoom":false,"viewMode":2,"viewWidth":1200,"viewHeight":600,"quality":"high","useOrbitControls":true}};;

            var SPE_USES_PREVIEW_IMAGE = false;
            const runtime = new SpeRuntime( SPLINE_EXPORTED_SCENE, SPLINE_ASSETS_LIST );
            runtime.run();
        ;
document.querySelector(".canvas-background-3d").style.width = "100%";

let downloadLink = document.querySelector(".nav-menu-download");
let downloadLink2 = document.querySelector(".button-cta");

downloadLink.addEventListener("click", onClick);
downloadLink2.addEventListener("click", onClick);

function onClick() {
    amplitude.getInstance().logEvent('DOWNLOAD APP');
};
